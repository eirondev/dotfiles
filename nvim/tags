!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$NVIM_TUI_ENABLE_TRUE_COLOR	init.vim	/^let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
'	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var escapes = {$/;"	p	class:escapes
)	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	",": "comma",$/;"	p	class:SIMPLE_TOKENS
*	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"**": "any-path",$/;"	p	class:SIMPLE_TOKENS
*(	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"+(": "one-many",$/;"	p	class:SIMPLE_TOKENS
**	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"\/**\/": "any-path-seqments",$/;"	p	class:SIMPLE_TOKENS
+(	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"?(": "zero-one",$/;"	p	class:SIMPLE_TOKENS
,	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"\/": "path-sep",$/;"	p	class:SIMPLE_TOKENS
-depth	plugged/neomake/Makefile	/^	git clone -q --depth=1 -b display-source-with-exceptions https:\/\/github.com\/blueyed\/vader.vim $@$/;"	m
-depth	plugged/neomake/Makefile	/^	git clone -q --depth=1 https:\/\/github.com\/tpope\/vim-fugitive $@$/;"	m
/	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"{": "or",$/;"	p	class:SIMPLE_TOKENS
/**/	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"|": "seqment-sep",$/;"	p	class:SIMPLE_TOKENS
3	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var reservedWords = {$/;"	p	class:reservedWords
3	plugged/tern_for_vim/node_modules/acorn/src/identifier.js	/^export const reservedWords = {$/;"	p	class:export
5	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",$/;"	p	class:reservedWords
5	plugged/tern_for_vim/node_modules/acorn/src/identifier.js	/^  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",$/;"	p	class:export
6	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  5: "class enum extends super const export import",$/;"	p	class:reservedWords
6	plugged/tern_for_vim/node_modules/acorn/src/identifier.js	/^  5: "class enum extends super const export import",$/;"	p	class:export
<C-m>	init.vim	/^map <C-m> :cprevious<CR>$/;"	m
<C-n>	init.vim	/^map <C-n> :cnext<CR>$/;"	m
<Enter>	init.vim	/^vmap <Enter> <Plug>(EasyAlign)$/;"	m
<leader>a	init.vim	/^nnoremap <leader>a :cclose<CR>$/;"	m
<leader>nt	init.vim	/^nnoremap <leader>nt :NERDTreeToggle<CR>$/;"	m
?	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"*": "any-path-seqment",$/;"	p	class:SIMPLE_TOKENS
?(	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"@(": "one",$/;"	p	class:SIMPLE_TOKENS
@(	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^var SIMPLE_TOKENS = {$/;"	p	class:SIMPLE_TOKENS
A	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^function A() {}$/;"	c
A	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^function A() {}$/;"	f
AP	plugged/tern_for_vim/node_modules/tern/doc/demo/polyfill.js	/^  var AP = Array.prototype;$/;"	v
APPVER	plugged/vimproc.vim/make_msvc.mak	/^APPVER = 5.0$/;"	m
ARCHS	plugged/vimproc.vim/make_mac.mak	/^ARCHS=$/;"	m
Abc	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var Abc = function() {$/;"	c
AbcCls	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var AbcCls = function() {$/;"	c
AbcCtor	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var AbcCtor = function() {$/;"	c
AddExprCallback	plugged/neomake/autoload/neomake.vim	/^function! s:AddExprCallback(jobinfo, prev_list) abort$/;"	f
AddToClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:AddToClasspath(classpath, path) abort$/;"	f
After	plugged/neomake/tests/include/init.vim	/^function! s:After()$/;"	f
AliasFieldPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js	/^function AliasFieldPlugin(source, field, target) {$/;"	c
AliasFieldPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var AliasFieldPlugin = require(".\/AliasFieldPlugin");$/;"	v
AliasPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasPlugin.js	/^function AliasPlugin(source, options, target) {$/;"	c
AliasPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var AliasPlugin = require(".\/AliasPlugin");$/;"	v
AlternatePair	plugged/vim-javascript/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
AppendPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AppendPlugin.js	/^function AppendPlugin(source, appending, target) {$/;"	c
AppendPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var AppendPlugin = require(".\/AppendPlugin");$/;"	v
Array	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^"foo".toString(); \/\/: string$/;"	c
ArrayProto	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;$/;"	v
AssertEqualQf	plugged/neomake/tests/include/init.vim	/^command! -nargs=1 AssertEqualQf call s:AssertEqualQf(<args>)$/;"	c
AssertEqualQf	plugged/neomake/tests/include/init.vim	/^function! s:AssertEqualQf(actual, expected, ...) abort$/;"	f
AssertNeomakeMessage	plugged/neomake/tests/include/init.vim	/^command! -nargs=+ AssertNeomakeMessage call s:AssertNeomakeMessage(<args>)$/;"	c
AssertNeomakeMessage	plugged/neomake/tests/include/init.vim	/^function! s:AssertNeomakeMessage(msg, ...)$/;"	f
AssertNeomakeMessageAbsent	plugged/neomake/tests/include/init.vim	/^command! -nargs=+ AssertNeomakeMessageAbsent call s:AssertNeomakeMessageAbsent(<args>)$/;"	c
AssertNeomakeMessageAbsent	plugged/neomake/tests/include/init.vim	/^function! s:AssertNeomakeMessageAbsent(msg, ...)$/;"	f
B	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^function B() {}$/;"	c
B	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^function B() {}$/;"	f
BASE_DIR	plugged/deoplete.nvim/test/conftest.py	/^BASE_DIR = os.path.dirname(os.path.dirname(__file__))$/;"	v
Balanced	plugged/vim-javascript/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
Bar	plugged/tern_for_vim/node_modules/tern/test/cases/autothis.js	/^function Bar() { this.prop = 10; }$/;"	c
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^class Base(LoggingMixin):$/;"	c
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^class Base(LoggingMixin):$/;"	c
Base	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Base() {}$/;"	c
Base	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Base() {}$/;"	f
Base2	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Base2() {}$/;"	f
Buffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var Buffer = require('safe-buffer').Buffer;$/;"	v
Buffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var Buffer = require('safe-buffer').Buffer;$/;"	v
Buffer	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^var Buffer = require('safe-buffer').Buffer;$/;"	v
Buffer	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^var Buffer = require('safe-buffer').Buffer;$/;"	v
BufferList	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var BufferList = require('.\/internal\/streams\/BufferList');$/;"	v
BufferList	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  function BufferList() {$/;"	c	class:module.exports
BufferList	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  }$/;"	c
C	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^function C() {}$/;"	c
C	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^function C() {}$/;"	f
CC	plugged/vimproc.vim/make_mac.mak	/^CC=clang$/;"	m
CC	plugged/vimproc.vim/make_mac.mak	/^CC=gcc$/;"	m
CC	plugged/vimproc.vim/make_mac.mak	/^CC=llvm-gcc$/;"	m
CC	plugged/vimproc.vim/make_mingw32.mak	/^CC=gcc$/;"	m
CC	plugged/vimproc.vim/make_mingw64.mak	/^CC=x86_64-w64-mingw32-gcc$/;"	m
CC	plugged/vimproc.vim/make_sunos.mak	/^CC=$(SUNCC)$/;"	m
CC	plugged/vimproc.vim/make_sunos.mak	/^CC=gcc$/;"	m
CDPATH	plugged/neomake/Makefile	/^CDPATH:=$/;"	m
CFLAGS	plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) $(DEFINES) \/wd4100 \/wd4127 \/O2$/;"	m
CFLAGS	plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG$/;"	m
CFLAGS	plugged/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_NDEBUG$/;"	m
CHERE_INVOKING	plugged/vimproc.vim/tools/appveyor.bat	/^set CHERE_INVOKING=yes$/;"	v
CHR2XD	plugged/vimproc.vim/src/vimstack.c	/^static const char CHR2XD[0x100] = {$/;"	v	file:
COVERAGE_VADER_ARGS	plugged/neomake/Makefile	/^testcoverage: COVERAGE_VADER_ARGS:=tests\/main.vader $(wildcard tests\/isolated\/*.vader)$/;"	m
CPU	plugged/vimproc.vim/make_msvc.mak	/^CPU = $(PROCESSOR_ARCHITECTURE)$/;"	m
CPU	plugged/vimproc.vim/make_msvc.mak	/^CPU = i386$/;"	m
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CSS	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^config = {$/;"	p	class:foo.foo.makeString.bar.config
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CTor	plugged/tern_for_vim/node_modules/tern/doc/demo/index.html	/^function CTor() { this.size = 10 }$/;"	f
CachedInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^function CachedInputFileSystem(fileSystem, duration) {$/;"	c
CachedInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var CachedInputFileSystem = require(".\/CachedInputFileSystem");$/;"	v
CachedInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var CachedInputFileSystem = require(".\/CachedInputFileSystem");$/;"	v
CallNeomake	plugged/neomake/tests/include/init.vim	/^command! -nargs=* CallNeomake call neomake#Make(<args>)$/;"	c
CheckStackMakerAsync	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! s:CheckStackMakerAsync(_job_id, data, _event) dict abort$/;"	f
Child	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^class Child(logger.LoggingMixin):$/;"	c
Class	plugged/tern_for_vim/node_modules/tern/test/cases/empty_overridden_prop.js	/^function Class() {}$/;"	c
Class	plugged/tern_for_vim/node_modules/tern/test/cases/empty_overridden_prop.js	/^function Class() {}$/;"	f
Class	plugged/tern_for_vim/node_modules/tern/test/cases/mixin.js	/^function Class() {}$/;"	c
Class	plugged/tern_for_vim/node_modules/tern/test/cases/mixin.js	/^function Class() {}$/;"	f
ClassSep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:ClassSep() abort$/;"	f
CleanJobinfo	plugged/neomake/autoload/neomake.vim	/^function! s:CleanJobinfo(jobinfo, ...) abort$/;"	f
CleanUpSpaceAndBackticks	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! s:CleanUpSpaceAndBackticks() abort$/;"	f
Client	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^var Client;$/;"	v
CloneBasenamePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CloneBasenamePlugin.js	/^function CloneBasenamePlugin(source, target) {$/;"	c
CompilerSet	plugged/vim-javascript/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
ConcordExtensionsPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^function ConcordExtensionsPlugin(source, options, target) {$/;"	c
ConcordExtensionsPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ConcordExtensionsPlugin = require(".\/ConcordExtensionsPlugin");$/;"	v
ConcordMainPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js	/^function ConcordMainPlugin(source, options, target) {$/;"	c
ConcordMainPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ConcordMainPlugin = require(".\/ConcordMainPlugin");$/;"	v
ConcordModulesPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^function ConcordModulesPlugin(source, options, target) {$/;"	c
ConcordModulesPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ConcordModulesPlugin = require(".\/ConcordModulesPlugin");$/;"	v
Continues	plugged/vim-javascript/indent/javascript.vim	/^function s:Continues()$/;"	f
CorkedRequest	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function CorkedRequest(state) {$/;"	c
Ctor	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^  function Ctor() {}$/;"	c	class:Found
Ctor	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^  function Ctor() {}$/;"	f	function:Found.function
Ctor	plugged/tern_for_vim/node_modules/acorn/src/walk/index.js	/^  function Ctor() {}$/;"	c
Ctor	plugged/tern_for_vim/node_modules/acorn/src/walk/index.js	/^  function Ctor() {}$/;"	f	function:function
Ctor	plugged/tern_for_vim/node_modules/tern/test/cases/ctorpattern.js	/^function Ctor() {$/;"	f
Ctor	plugged/tern_for_vim/node_modules/tern/test/cases/indirect_class.js	/^  function Ctor() {}$/;"	c
Ctor	plugged/tern_for_vim/node_modules/tern/test/cases/indirect_class.js	/^  function Ctor() {}$/;"	f	function:makeClass
Ctor1	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^function Ctor1() { this.x = 10; }$/;"	c
Ctor1	plugged/tern_for_vim/node_modules/tern/test/cases/objnames.js	/^function Ctor1() { this.x = 10; }$/;"	c
Ctor2	plugged/tern_for_vim/node_modules/tern/test/cases/objnames.js	/^function Ctor2() {}$/;"	f
CustomError	plugged/tern_for_vim/node_modules/errno/custom.js	/^function CustomError (message, cause) {$/;"	f	function:function
CustomError	plugged/tern_for_vim/node_modules/errno/custom.js	/^}$/;"	c
CustomError	plugged/tern_for_vim/node_modules/errno/custom.js	/^}$/;"	f
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DEBUG	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^var DEBUG = process.env.NODE_DEBUG && \/fs\/.test(process.env.NODE_DEBUG);$/;"	v
DEFINES	plugged/vimproc.vim/make_msvc.mak	/^DEFINES = -D_CRT_SECURE_NO_WARNINGS=1 -D_BIND_TO_CURRENT_VCLIBS_VERSION=1$/;"	m
DEP_PLUGINS	plugged/neomake/Makefile	/^DEP_PLUGINS=$(TESTS_VADER_DIR) $(TESTS_FUGITIVE_DIR)$/;"	m
DOCKER	plugged/neomake/Makefile	/^DOCKER=docker run $(DOCKER_STREAMS) --rm \\$/;"	m
DOCKER_IMAGE	plugged/neomake/Makefile	/^DOCKER_IMAGE:=$(if $(NEOMAKE_DOCKER_IMAGE),$(NEOMAKE_DOCKER_IMAGE),$(DOCKER_REPO):$(DOCKER_TAG))$/;"	m
DOCKER_MAKE_TARGET	plugged/neomake/Makefile	/^_docker_test: DOCKER_MAKE_TARGET=$(DOCKER_MAKE_TEST_TARGET) \\$/;"	m
DOCKER_MAKE_TARGET	plugged/neomake/Makefile	/^docker_check: DOCKER_MAKE_TARGET=check_docker$/;"	m
DOCKER_MAKE_TEST_ARGS	plugged/neomake/Makefile	/^docker_testcoverage: DOCKER_MAKE_TEST_ARGS:=$(if $(filter command line,$(origin COVERAGE_VADER_ARGS)),COVERAGE_VADER_ARGS="$(COVERAGE_VADER_ARGS)",$(if $(filter command line,$(origin VADER_ARGS)),COVERAGE_VADER_ARGS="$(VADER_ARGS)",))$/;"	m
DOCKER_MAKE_TEST_TARGET	plugged/neomake/Makefile	/^docker_test: DOCKER_MAKE_TEST_TARGET:=test$/;"	m
DOCKER_MAKE_TEST_TARGET	plugged/neomake/Makefile	/^docker_test_interactive: DOCKER_MAKE_TEST_TARGET:=test_interactive$/;"	m
DOCKER_MAKE_TEST_TARGET	plugged/neomake/Makefile	/^docker_testcoverage: DOCKER_MAKE_TEST_TARGET:=testcoverage$/;"	m
DOCKER_REPO	plugged/neomake/Makefile	/^DOCKER_REPO:=neomake\/vims-for-tests$/;"	m
DOCKER_RUN	plugged/neomake/Makefile	/^docker_make: DOCKER_RUN=make $(DOCKER_MAKE_TARGET)$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^DOCKER_STREAMS:=-ti$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^docker_test: DOCKER_STREAMS:=-t$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^docker_test_interactive: DOCKER_STREAMS:=-ti$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^docker_testcoverage: DOCKER_STREAMS:=-t$/;"	m
DOCKER_TAG	plugged/neomake/Makefile	/^DOCKER_TAG:=27$/;"	m
DOCKER_VIM	plugged/neomake/Makefile	/^_docker_test: DOCKER_VIM:=vim-master$/;"	m
DOCKER_VIMS	plugged/neomake/Makefile	/^DOCKER_VIMS:=vim73 vim74-trusty vim74-xenial vim-8.0.586 vim-8.0.1832 vim-master \\$/;"	m
Date	plugged/tern_for_vim/node_modules/tern/test/cases/autothis.js	/^};$/;"	c
Deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^class Deoplete(logger.LoggingMixin):$/;"	c
DeopleteHandlers	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    class DeopleteHandlers(object):$/;"	c
DeopleteLogFilter	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class DeopleteLogFilter(logging.Filter):$/;"	c
DescriptionFilePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js	/^function DescriptionFilePlugin(source, filenames, target) {$/;"	c
DescriptionFilePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var DescriptionFilePlugin = require(".\/DescriptionFilePlugin");$/;"	v
DescriptionFileUtils	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js	/^var DescriptionFileUtils = require(".\/DescriptionFileUtils");$/;"	v
DescriptionFileUtils	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^var DescriptionFileUtils = require(".\/DescriptionFileUtils");$/;"	v
DescriptionFileUtils	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js	/^var DescriptionFileUtils = require(".\/DescriptionFileUtils");$/;"	v
DescriptionFileUtils	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^var DescriptionFileUtils = require(".\/DescriptionFileUtils");$/;"	v
DescriptionFileUtils	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js	/^var DescriptionFileUtils = require(".\/DescriptionFileUtils");$/;"	v
DestructuringErrors	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var DestructuringErrors = function DestructuringErrors() {$/;"	f	function:pp.pp
DestructuringErrors	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var DestructuringErrors = function DestructuringErrors() {$/;"	m	class:pp.pp
DictCacheItem	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^DictCacheItem = namedtuple('DictCacheItem', 'mtime candidates')$/;"	v
DirectoryExistsPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js	/^function DirectoryExistsPlugin(source, target) {$/;"	c
DirectoryExistsPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var DirectoryExistsPlugin = require(".\/DirectoryExistsPlugin");$/;"	v
DmdStyleMaker	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! s:DmdStyleMaker(args) abort$/;"	f
DoWhile	plugged/vim-javascript/indent/javascript.vim	/^function s:DoWhile()$/;"	f
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Duplex	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^function Duplex(options) {$/;"	c
Duplex	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var Duplex;$/;"	v
Duplex	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^  var _this2 = this;$/;"	c	class:Transform
Duplex	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^var Duplex = require('.\/_stream_duplex');$/;"	v
Duplex	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var Duplex;$/;"	v
EE	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var EE = require('events').EventEmitter;$/;"	v
EElistenerCount	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var EElistenerCount = function (emitter, type) {$/;"	f
EXPORT	plugged/vimproc.vim/src/proc_w32.c	56;"	d	file:
EXPORT	plugged/vimproc.vim/src/proc_w32.c	58;"	d	file:
Element	plugged/tern_for_vim/node_modules/tern/test/condense/add_to_old.js	/^function Thing() {}$/;"	c
ExitRemoteProcess	plugged/vimproc.vim/src/proc_w32.c	/^static BOOL ExitRemoteProcess(HANDLE hProcess, UINT_PTR uExitCode)$/;"	f	file:
ExprCol	plugged/vim-javascript/indent/javascript.vim	/^function s:ExprCol()$/;"	f
Ext.extend	plugged/tern_for_vim/node_modules/tern/test/cases/blowup.js	/^var Ext = Ext || {};$/;"	f
F	plugged/tern_for_vim/node_modules/tern/test/cases/blowup.js	/^  var F = function() {};$/;"	c
F	plugged/tern_for_vim/node_modules/tern/test/cases/blowup.js	/^  var F = function() {};$/;"	f	function:Ext.extend
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FILE_TEST_TARGET	plugged/neomake/Makefile	/^FILE_TEST_TARGET=$(if $(IS_NEOVIM),testnvim,testvim)$/;"	m
FileExistsPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileExistsPlugin.js	/^function FileExistsPlugin(source, target) {$/;"	c
FileExistsPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var FileExistsPlugin = require(".\/FileExistsPlugin");$/;"	v
FileKindPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileKindPlugin.js	/^function FileKindPlugin(source, target) {$/;"	c
FileKindPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var FileKindPlugin = require(".\/FileKindPlugin");$/;"	v
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^class Filter(Base):$/;"	c
Foo	plugged/neomake/tests/fixtures/vim/func-with-errors.vim	/^function! Foo()$/;"	f
Foo	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^}$/;"	c
Foo	plugged/tern_for_vim/node_modules/tern/test/cases/proto.js	/^function Foo(x) {$/;"	c
FormatResults	plugged/deoplete-typescript/after/plugin/nvim_typescript.vim	/^    function! s:FormatResults(query)$/;"	f
GetAntClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetAntClasspath() abort$/;"	f
GetGradleClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetGradleClasspath() abort$/;"	f
GetJavascriptIndent	plugged/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetMakerForFiletype	plugged/neomake/autoload/neomake.vim	/^function! s:GetMakerForFiletype(ft, maker_name) abort$/;"	f
GetMavenClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetMavenClasspath() abort " {{{2$/;"	f
GetMavenProperties	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetMavenProperties() abort " {{{2$/;"	f
GetPair	plugged/vim-javascript/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
GetTabWinForMakeId	plugged/neomake/autoload/neomake.vim	/^function! s:GetTabWinForMakeId(make_id) abort$/;"	f
GetVars	plugged/vim-javascript/indent/javascript.vim	/^function s:GetVars()$/;"	f
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob.Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob.Glob.Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob.Glob.Glob.Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob.Glob.Glob.Glob.Glob.Glob
Glob	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	c	class:Glob.Glob.Glob.Glob.Glob.Glob.Glob.var
GlobSync	plugged/tern_for_vim/node_modules/glob/sync.js	/^}$/;"	c
GlobSync	plugged/tern_for_vim/node_modules/glob/sync.js	/^}$/;"	c	class:GlobSync
GlobSync	plugged/tern_for_vim/node_modules/glob/sync.js	/^}$/;"	c	class:GlobSync.GlobSync.var
GlobSync	plugged/tern_for_vim/node_modules/glob/sync.js	/^}$/;"	c	class:GlobSync.var
GradleOutputDirectory	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GradleOutputDirectory() abort$/;"	f
GutentagsToggleEnabled	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
HandleLoclistQflistDisplay	plugged/neomake/autoload/neomake.vim	/^function! s:HandleLoclistQflistDisplay(jobinfo, loc_or_qflist) abort$/;"	f
HiLink	plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
INC	plugged/vimproc.vim/make_android.mak	/^INC=src\/vimstack.c src\/ptytty.h$/;"	m
INC	plugged/vimproc.vim/make_sunos.mak	/^INC=src\/vimstack.c src\/ptytty.h$/;"	m
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
IS_NEOVIM	plugged/neomake/Makefile	/^IS_NEOVIM=$(findstring nvim,$(TEST_VIM))$(findstring neovim,$(TEST_VIM))$/;"	m
IncMakerArgs	plugged/neomake/tests/include/init.vim	/^function! s:IncMakerArgs()$/;"	f
InitBufHighlights	plugged/neomake/autoload/neomake/highlights.vim	/^    function! s:InitBufHighlights(type, buf) abort$/;"	f
IsBlock	plugged/vim-javascript/indent/javascript.vim	/^function s:IsBlock()$/;"	f
IsContOne	plugged/vim-javascript/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
IsSwitch	plugged/vim-javascript/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
JoinRequestPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js	/^function JoinRequestPlugin(source, target) {$/;"	c
JoinRequestPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var JoinRequestPlugin = require(".\/JoinRequestPlugin");$/;"	v
K	plugged/tern_for_vim/script/tern.py	/^  class K(object):$/;"	c	function:tern_cmp_to_key
LDFLAGS	plugged/vimproc.vim/make_mac.mak	/^LDFLAGS=$/;"	m
LIBDIR	plugged/vimproc.vim/make_msvc.mak	/^LIBDIR = lib$/;"	m
LIBS	plugged/vimproc.vim/make_unix.mak	/^LIBS=-lutil$/;"	m
LINES_ABOVE	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_ABOVE = 20$/;"	v
LINES_BELOW	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_BELOW = 20$/;"	v
LINT_ARGS	plugged/neomake/Makefile	/^LINT_ARGS:=.\/plugin .\/autoload$/;"	m
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LOOP	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function LOOP() {$/;"	f	function:exports.realpath
LogInfoPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/LogInfoPlugin.js	/^function LogInfoPlugin(source) {$/;"	c
LogInfoPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var LogInfoPlugin = require(".\/LogInfoPlugin");$/;"	v
LoggingMixin	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class LoggingMixin(object):$/;"	c
LookingAt	plugged/vim-javascript/indent/javascript.vim	/^function s:LookingAt()$/;"	f
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
LooseParser	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^};$/;"	c
MAKE	plugged/vimproc.vim/Makefile	/^        MAKE = make # BSD Make$/;"	m
MAX_HWM	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var MAX_HWM = 0x800000;$/;"	v
MainFieldPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/MainFieldPlugin.js	/^function MainFieldPlugin(source, options, target) {$/;"	c
MainFieldPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var MainFieldPlugin = require(".\/MainFieldPlugin");$/;"	v
Make	plugged/neomake/autoload/neomake.vim	/^function! s:Make(options) abort$/;"	f
MakeJob	plugged/neomake/autoload/neomake.vim	/^function! s:MakeJob(make_id, options) abort$/;"	f
MavenOutputDirectory	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:MavenOutputDirectory() abort " {{{2$/;"	f
MemoryFileSystem	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function MemoryFileSystem(data) {$/;"	c
MemoryFileSystem	plugged/tern_for_vim/node_modules/memory-fs/test/MemoryFileSystem.js	/^var MemoryFileSystem = require("..\/lib\/MemoryFileSystem");$/;"	v
MemoryFileSystemError	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function MemoryFileSystemError(err, path) {$/;"	c
Minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^  m.Minimatch = function Minimatch (pattern, options) {$/;"	f
Minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	c
Minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	c	class:Minimatch
Minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	c	class:Minimatch.var
Minimatch.defaults	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	f
Module	plugged/tern_for_vim/node_modules/resolve-from/index.js	/^var Module = require('module');$/;"	v
ModuleAppendPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleAppendPlugin.js	/^function ModuleAppendPlugin(source, appending, target) {$/;"	c
ModuleAppendPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ModuleAppendPlugin = require(".\/ModuleAppendPlugin");$/;"	v
ModuleKindPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleKindPlugin.js	/^function ModuleKindPlugin(source, target) {$/;"	c
ModuleKindPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ModuleKindPlugin = require(".\/ModuleKindPlugin");$/;"	v
ModulesInHierachicDirectoriesPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js	/^function ModulesInHierachicDirectoriesPlugin(source, directories, target) {$/;"	c
ModulesInHierachicDirectoriesPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ModulesInHierachicDirectoriesPlugin = require(".\/ModulesInHierachicDirectoriesPlugin");$/;"	v
ModulesInRootPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js	/^function ModulesInRootPlugin(source, path, target) {$/;"	c
ModulesInRootPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ModulesInRootPlugin = require(".\/ModulesInRootPlugin");$/;"	v
Mold	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var Mold = require("mold-template");$/;"	v
NEOMAKE_DOCKER_IMAGE	plugged/neomake/Makefile	/^NEOMAKE_DOCKER_IMAGE?=$/;"	m
NEOMAKE_LOG	plugged/neomake/Makefile	/^NEOMAKE_LOG:=\/tmp\/neomake.log$/;"	m
NEOMAKE_TESTS_DEP_PLUGINS_DIR	plugged/neomake/Makefile	/^NEOMAKE_TESTS_DEP_PLUGINS_DIR?=build\/vim\/plugins$/;"	m
NERDTreeToggle	init.vim	/^let NERDTreeToggle=0$/;"	v
NERDTreeWinSize	init.vim	/^let NERDTreeWinSize=28$/;"	v
NVIM_LOG_FILE	plugged/neomake/Makefile	/^testnvim: export NVIM_LOG_FILE:=\/dev\/stderr$/;"	m
Nat	plugged/vim-javascript/indent/javascript.vim	/^function s:Nat(int)$/;"	f
Neomake	plugged/neomake/plugin/neomake.vim	/^            \\ Neomake call neomake#Make(<bang>1, [<f-args>])$/;"	c
NeomakeAsyncTestsSetup	plugged/neomake/tests/include/init.vim	/^function! NeomakeAsyncTestsSetup()$/;"	f
NeomakeCancelJob	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeCancelJob call neomake#CancelJob(<q-args>, <bang>0)$/;"	c
NeomakeCancelJobs	plugged/neomake/plugin/neomake.vim	/^command! -bang NeomakeCancelJobs call neomake#CancelJobs(<bang>0)$/;"	c
NeomakeDisable	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeDisable call s:disable(g:, 1)$/;"	c
NeomakeDisableBuffer	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeDisableBuffer call s:disable(b:, 1)$/;"	c
NeomakeDisableTab	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeDisableTab call s:disable(t:, 1)$/;"	c
NeomakeEnable	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeEnable call s:disable(g:, 0)$/;"	c
NeomakeEnableBuffer	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeEnableBuffer call s:disable(b:, 0)$/;"	c
NeomakeEnableTab	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeEnableTab call s:disable(t:, 0)$/;"	c
NeomakeFile	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeFile Neomake <args>$/;"	c
NeomakeInfo	plugged/neomake/plugin/neomake.vim	/^command! -bang -bar NeomakeInfo call neomake#debug#display_info(<bang>0)$/;"	c
NeomakeListJobs	plugged/neomake/plugin/neomake.vim	/^command! NeomakeListJobs call neomake#ListJobs()$/;"	c
NeomakeProject	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeProject Neomake! <args>$/;"	c
NeomakeSetupAutocmdWrappers	plugged/neomake/tests/include/init.vim	/^function! g:NeomakeSetupAutocmdWrappers()$/;"	f
NeomakeSh	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeSh call neomake#ShCommand(<bang>0, <q-args>)$/;"	c
NeomakeStatus	plugged/neomake/plugin/neomake.vim	/^command! NeomakeStatus call s:display_status()$/;"	c
NeomakeTestsCommandMaker	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsCommandMaker(name, cmd)$/;"	f
NeomakeTestsCreateExe	plugged/neomake/tests/include/init.vim	/^function! g:NeomakeTestsCreateExe(name, ...)$/;"	f
NeomakeTestsFakeJobinfo	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsFakeJobinfo() abort$/;"	f
NeomakeTestsFixtureMaker	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsFixtureMaker(func, fname) abort$/;"	f
NeomakeTestsGetMakerWithOutput	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsGetMakerWithOutput(func, lines_or_file) abort$/;"	f
NeomakeTestsGetSigns	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsGetSigns()$/;"	f
NeomakeTestsGetVimMessages	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsGetVimMessages()$/;"	f
NeomakeTestsGlobalAfter	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsGlobalAfter call s:After()$/;"	c
NeomakeTestsResetMessages	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsResetMessages call s:NeomakeTestsResetMessages()$/;"	c
NeomakeTestsResetMessages	plugged/neomake/tests/include/init.vim	/^function! s:NeomakeTestsResetMessages()$/;"	f
NeomakeTestsSetPATH	plugged/neomake/tests/include/init.vim	/^function! g:NeomakeTestsSetPATH(path) abort$/;"	f
NeomakeTestsSetVimMessagesMarker	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsSetVimMessagesMarker()$/;"	f
NeomakeTestsSkip	plugged/neomake/tests/include/init.vim	/^command! -nargs=1 NeomakeTestsSkip call vader#log('SKIP: ' . <args>)$/;"	c
NeomakeTestsWaitForFinishedJobs	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForFinishedJobs call s:wait_for_jobs("!get(v:val, 'finished')")$/;"	c
NeomakeTestsWaitForMessage	plugged/neomake/tests/include/init.vim	/^command! -nargs=+ NeomakeTestsWaitForMessage call s:wait_for_message(<args>)$/;"	c
NeomakeTestsWaitForNextFinishedJob	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForNextFinishedJob call s:wait_for_finished_job()$/;"	c
NeomakeTestsWaitForNextMessage	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForNextMessage call s:wait_for_next_message()$/;"	c
NeomakeTestsWaitForRemovedJobs	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForRemovedJobs call s:wait_for_jobs('')$/;"	c
NeomakeToggle	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeToggle call s:toggle(g:)$/;"	c
NeomakeToggleBuffer	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeToggleBuffer call s:toggle(b:)$/;"	c
NeomakeToggleTab	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeToggleTab call s:toggle(t:)$/;"	c
NextPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NextPlugin.js	/^function NextPlugin(source, target) {$/;"	c
NextPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var NextPlugin = require(".\/NextPlugin");$/;"	v
NodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^function NodeJsInputFileSystem() {}$/;"	f
NodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^module.exports = NodeJsInputFileSystem;$/;"	c
NodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var NodeJsInputFileSystem = require(".\/NodeJsInputFileSystem");$/;"	v
NodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var NodeJsInputFileSystem = require(".\/NodeJsInputFileSystem");$/;"	v
OBJS	plugged/vimproc.vim/make_msvc.mak	/^OBJS = $(OUTDIR)\/proc_w32.obj$/;"	m
OCKER_VIM	plugged/neomake/Makefile	/^	make docker_test DOCKER_VIM=neovim-master$/;"	m
OPEN_MAX	plugged/vimproc.vim/src/fakepoll.h	26;"	d
OUTDIR	plugged/vimproc.vim/make_msvc.mak	/^OUTDIR = $(SRCDIR)\\obj$(CPU)$/;"	m
Obj	plugged/tern_for_vim/node_modules/tern/test/cases/arrow.js	/^}$/;"	c
OnNeomakeCountsChanged	plugged/neomake/tests/include/init.vim	/^  function! s:OnNeomakeCountsChanged(context)$/;"	f
OnNeomakeJobFinished	plugged/neomake/tests/include/init.vim	/^  function! s:OnNeomakeJobFinished(context)$/;"	f
OneScope	plugged/vim-javascript/indent/javascript.vim	/^function s:OneScope()$/;"	f
OpenResult	plugged/deoplete-typescript/after/plugin/nvim_typescript.vim	/^    function! s:OpenResult(line)$/;"	f
OtherClass	plugged/tern_for_vim/node_modules/tern/test/cases/mixin.js	/^function OtherClass() {}$/;"	c
OtherClass	plugged/tern_for_vim/node_modules/tern/test/cases/mixin.js	/^function OtherClass() {}$/;"	f
PATH	plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PATH	plugged/tern_for_vim/node_modules/tern/doc/Makefile	/^	PATH=..\/node_modules\/codemirror\/bin:$(PATH) asciidoc --backend=html5 -o manual.html manual.txt$/;"	m
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PLATFORM	plugged/vimproc.vim/Makefile	/^            PLATFORM = mingw32$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^            PLATFORM = mingw64$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = bsd$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = cygwin$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = mac$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = sunos$/;"	m
PLATFORM	plugged/vimproc.vim/Makefile	/^        PLATFORM = unix$/;"	m
POLLERR	plugged/vimproc.vim/src/fakepoll.h	39;"	d
POLLHUP	plugged/vimproc.vim/src/fakepoll.h	50;"	d
POLLIN	plugged/vimproc.vim/src/fakepoll.h	37;"	d
POLLNORM	plugged/vimproc.vim/src/fakepoll.h	42;"	d
POLLNVAL	plugged/vimproc.vim/src/fakepoll.h	51;"	d
POLLOUT	plugged/vimproc.vim/src/fakepoll.h	38;"	d
POLLPRI	plugged/vimproc.vim/src/fakepoll.h	43;"	d
POLLRDBAND	plugged/vimproc.vim/src/fakepoll.h	45;"	d
POLLRDNORM	plugged/vimproc.vim/src/fakepoll.h	44;"	d
POLLWRBAND	plugged/vimproc.vim/src/fakepoll.h	47;"	d
POLLWRNORM	plugged/vimproc.vim/src/fakepoll.h	46;"	d
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PY2	plugged/tern_for_vim/script/tern.py	/^PY2 = int(sys.version[0]) == 2$/;"	v
Parent	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class Parent(logger.LoggingMixin):$/;"	c
ParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseCino	plugged/vim-javascript/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
ParsePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ParsePlugin.js	/^function ParsePlugin(source, target) {$/;"	c
ParsePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ParsePlugin = require(".\/ParsePlugin");$/;"	v
Parser	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var Parser = function Parser(options, input, startPos) {$/;"	f	function:Position
Parser	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var Parser = function Parser(options, input, startPos) {$/;"	m	class:Position
Parser	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^};$/;"	c
PassThrough	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_passthrough.js	/^function PassThrough(options) {$/;"	f
PassThrough	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_passthrough.js	/^}$/;"	c
Position	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^};$/;"	c
PreviousToken	plugged/vim-javascript/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
Process	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^class Process(asyncio.SubprocessProtocol):$/;"	c
ProcessEntries	plugged/neomake/autoload/neomake.vim	/^function! s:ProcessEntries(jobinfo, entries, ...) abort$/;"	f
ProcessJobOutput	plugged/neomake/autoload/neomake.vim	/^function! s:ProcessJobOutput(jobinfo, lines, source, ...) abort$/;"	f
ProcessPendingOutput	plugged/neomake/autoload/neomake.vim	/^function! s:ProcessPendingOutput(jobinfo, lines, source) abort$/;"	f
Project	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^}$/;"	c
Project	plugged/tern_for_vim/script/tern.py	/^class Project(object):$/;"	c
Pure	plugged/vim-javascript/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
Quux	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^function Quux() {}$/;"	f
ReadClassPathFile	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:ReadClassPathFile(_classpathFile) abort$/;"	f
ReadClasspathFile	plugged/neomake/autoload/neomake/makers/ft/java/classpath.py	/^def ReadClasspathFile(fn):$/;"	f
ReadStream	plugged/tern_for_vim/node_modules/graceful-fs/legacy-streams.js	/^  function ReadStream (path, options) {$/;"	c
ReadStream$open	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^  function ReadStream$open () {$/;"	f	function:function
Readable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^var Readable = require('.\/_stream_readable');$/;"	v
Readable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function Readable(options) {$/;"	c
ReadableState	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function ReadableState(options, stream) {$/;"	c
ReadableStream	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^var ReadableStream = stream.Readable;$/;"	v
RedirectStream	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^class RedirectStream(io.IOBase):$/;"	c
RegisterJobOutput	plugged/neomake/autoload/neomake.vim	/^function! s:RegisterJobOutput(jobinfo, lines, source) abort$/;"	f
Resolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^function Resolver(fileSystem) {$/;"	c
Resolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var Resolver = require(".\/Resolver");$/;"	v
ResolverFactory	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var ResolverFactory = require(".\/ResolverFactory");$/;"	v
ResolverFactory	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^var ResolverFactory = require("enhanced-resolve").ResolverFactory;$/;"	v
ResultPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var ResultPlugin = require(".\/ResultPlugin");$/;"	v
ResultPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResultPlugin.js	/^function ResultPlugin(source) {$/;"	c
RunNeomake	plugged/neomake/tests/include/init.vim	/^command! -nargs=* RunNeomake Neomake <args>$/;"	c
RunNeomakeProject	plugged/neomake/tests/include/init.vim	/^command! -nargs=* RunNeomakeProject NeomakeProject <args>$/;"	c
RunNeomakeSh	plugged/neomake/tests/include/init.vim	/^command! -nargs=* RunNeomakeSh call RunNeomakeSh(<q-args>)$/;"	c
RunNeomakeSh	plugged/neomake/tests/include/init.vim	/^function! RunNeomakeSh(...)$/;"	f
SHELL	plugged/neomake/Makefile	/^SHELL:=$(bash) -o pipefail$/;"	m
SID_PREFIX	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:SID_PREFIX() abort$/;"	f
SRC	plugged/vimproc.vim/make_android.mak	/^SRC=src\/proc.c src\/ptytty.c$/;"	m
SRC	plugged/vimproc.vim/make_bsd.mak	/^SRC=src\/proc.c$/;"	m
SRC	plugged/vimproc.vim/make_cygwin.mak	/^SRC=src\/proc.c$/;"	m
SRC	plugged/vimproc.vim/make_mac.mak	/^SRC=src\/proc.c$/;"	m
SRC	plugged/vimproc.vim/make_mingw32.mak	/^SRC=src\/proc_w32.c$/;"	m
SRC	plugged/vimproc.vim/make_mingw64.mak	/^SRC=src\/proc_w32.c$/;"	m
SRC	plugged/vimproc.vim/make_sunos.mak	/^SRC=src\/proc.c src\/ptytty.c$/;"	m
SRC	plugged/vimproc.vim/make_unix.mak	/^SRC=src\/proc.c$/;"	m
SRCDIR	plugged/vimproc.vim/make_msvc.mak	/^SRCDIR = src$/;"	m
SUFFIX	plugged/vimproc.vim/make_unix.mak	/^	SUFFIX=linux$(if $(wildcard \/lib*\/ld-linux*64.so.2),64,32)$/;"	m
SUFFIX	plugged/vimproc.vim/make_unix.mak	/^	SUFFIX=unix$/;"	m
SYS	plugged/vimproc.vim/Makefile	/^    SYS := $(shell gcc -dumpmachine)$/;"	m
SafeBuffer	plugged/tern_for_vim/node_modules/safe-buffer/index.js	/^function SafeBuffer (arg, encodingOrOffset, length) {$/;"	f	function:function
SafeBuffer.alloc	plugged/tern_for_vim/node_modules/safe-buffer/index.js	/^}$/;"	f
SafeBuffer.allocUnsafe	plugged/tern_for_vim/node_modules/safe-buffer/index.js	/^}$/;"	f
SafeBuffer.allocUnsafeSlow	plugged/tern_for_vim/node_modules/safe-buffer/index.js	/^}$/;"	f
SearchForSymbolsWithPattern	plugged/deoplete-typescript/after/plugin/nvim_typescript.vim	/^    function! s:SearchForSymbolsWithPattern(pattern)$/;"	f
SearchLoop	plugged/vim-javascript/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
SelectJavascript	plugged/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
SkipFunc	plugged/vim-javascript/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
Source	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-typescript/rplugin/python3/denite/source/TSDocumentSymbol.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-typescript/rplugin/python3/denite/source/TSProjectFiles.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-typescript/rplugin/python3/denite/source/TSWorkspaceSymbol.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-typescript/rplugin/python3/deoplete/sources/typescript.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^class Source(Base):$/;"	c
SourceInitError	plugged/deoplete.nvim/rplugin/python3/deoplete/exceptions.py	/^class SourceInitError(Exception):$/;"	c
SourceLocation	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var SourceLocation = function SourceLocation(p, start, end) {$/;"	f	function:Position
SourceLocation	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var SourceLocation = function SourceLocation(p, start, end) {$/;"	m	class:Position
Storage	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^function Storage(duration) {$/;"	c
Stream	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var Stream = require('.\/internal\/streams\/stream');$/;"	v
Stream	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var Stream = require('.\/internal\/streams\/stream');$/;"	v
Stream	plugged/tern_for_vim/node_modules/readable-stream/readable.js	/^var Stream = require('stream');$/;"	v
String	plugged/tern_for_vim/node_modules/tern/doc/demo/polyfill.js	/^  };$/;"	c
String	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^Array.prototype.slice.apply([1, 2, 3], [1]); \/\/: [number]$/;"	c
StringDecoder	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var StringDecoder;$/;"	v
StringDecoder	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function StringDecoder(encoding) {$/;"	c
Sub1	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Sub1() {}$/;"	c
Sub1	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Sub1() {}$/;"	f
Sub2	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Sub2() {}$/;"	c
Sub2	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Sub2() {}$/;"	f
Sub3	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Sub3() {}$/;"	c
Sub3	plugged/tern_for_vim/node_modules/tern/test/cases/protoname.js	/^function Sub3() {}$/;"	f
SymlinkPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var SymlinkPlugin = require(".\/SymlinkPlugin");$/;"	v
SymlinkPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SymlinkPlugin.js	/^function SymlinkPlugin(source, target) {$/;"	c
SynAt	plugged/vim-javascript/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
SyncNodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var SyncNodeJsInputFileSystem = require(".\/SyncNodeJsInputFileSystem");$/;"	v
SyncNodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^function SyncNodeJsInputFileSystem() {}$/;"	f
SyncNodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^module.exports = SyncNodeJsInputFileSystem;$/;"	c
SyncNodeJsInputFileSystem	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var SyncNodeJsInputFileSystem = require(".\/SyncNodeJsInputFileSystem");$/;"	v
SyncNodeJsInputFileSystem	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^var SyncNodeJsInputFileSystem = require("enhanced-resolve\/lib\/SyncNodeJsInputFileSystem");$/;"	v
SyntaxCheckers_typescript_tsuquyomi_GetLocList	plugged/tsuquyomi/syntax_checkers/typescript/tsuquyomi.vim	/^function! SyntaxCheckers_typescript_tsuquyomi_GetLocList() dict abort$/;"	f
SyntaxCheckers_typescript_tsuquyomi_IsAvailable	plugged/tsuquyomi/syntax_checkers/typescript/tsuquyomi.vim	/^function! SyntaxCheckers_typescript_tsuquyomi_IsAvailable() dict abort$/;"	f
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TARGET	plugged/vimproc.vim/make_android.mak	/^TARGET=lib\/vimproc_unix.so$/;"	m
TARGET	plugged/vimproc.vim/make_bsd.mak	/^TARGET=lib\/vimproc_$(SUFFIX).so$/;"	m
TARGET	plugged/vimproc.vim/make_cygwin.mak	/^TARGET=lib\/vimproc_cygwin.dll$/;"	m
TARGET	plugged/vimproc.vim/make_mac.mak	/^TARGET=lib\/vimproc_mac.so$/;"	m
TARGET	plugged/vimproc.vim/make_mingw32.mak	/^TARGET=lib\/vimproc_win32.dll$/;"	m
TARGET	plugged/vimproc.vim/make_mingw64.mak	/^TARGET=lib\/vimproc_win64.dll$/;"	m
TARGET	plugged/vimproc.vim/make_msvc.mak	/^TARGET = WINNT$/;"	m
TARGET	plugged/vimproc.vim/make_sunos.mak	/^TARGET=lib\/vimproc_unix.so$/;"	m
TARGET	plugged/vimproc.vim/make_unix.mak	/^TARGET=lib\/vimproc_$(SUFFIX).so$/;"	m
TESTS	plugged/neomake/Makefile	/^TESTS:=$(wildcard tests\/*.vader tests\/*\/*.vader)$/;"	m
TESTS_FUGITIVE_DIR	plugged/neomake/Makefile	/^TESTS_FUGITIVE_DIR:=$(NEOMAKE_TESTS_DEP_PLUGINS_DIR)\/vim-fugitive$/;"	m
TESTS_VADER_DIR	plugged/neomake/Makefile	/^TESTS_VADER_DIR:=$(NEOMAKE_TESTS_DEP_PLUGINS_DIR)\/vader$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^  TEST_VIM:=nvim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^  TEST_VIM:=vim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testnvim: TEST_VIM:=nvim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testnvim_interactive: TEST_VIM:=nvim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testvim: TEST_VIM:=vim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testvim_interactive: TEST_VIM:=vim -X$/;"	m
TEST_VIMRC	plugged/neomake/Makefile	/^TEST_VIMRC:=tests\/vim\/vimrc$/;"	m
TEST_VIM_PREFIX	plugged/neomake/Makefile	/^TEST_VIM_PREFIX:=SHELL=$(bash)$/;"	m
THEMIS_ARGS	plugged/deoplete.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	plugged/deoplete.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	plugged/deoplete.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
THEMIS_VIM	plugged/vimproc.vim/tools/appveyor.bat	/^set THEMIS_VIM=%APPVEYOR_BUILD_FOLDER%\\vim%VIMVER%-kaoriya-win%BIT%\\vim.exe$/;"	v
TSSearch	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^  command! -nargs=1 TSSearch call s:TSSearch(<q-args>) "}}}$/;"	c
TSSearch	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^  function! s:TSSearch(query) "{{{$/;"	f
TSSearchFZF	plugged/deoplete-typescript/after/plugin/nvim_typescript.vim	/^    command! -nargs=1 TSSearchFZF call s:SearchForSymbolsWithPattern(<q-args>)$/;"	c
Tapable	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^var Tapable = require("tapable");$/;"	v
Tapable	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^function Tapable() {$/;"	c
Tapable.mixin	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^}$/;"	f
TempCtor	plugged/tern_for_vim/node_modules/inherits/inherits_browser.js	/^    var TempCtor = function () {}$/;"	c
TernShutDown	plugged/tern_for_vim/autoload/tern.vim	/^augroup TernShutDown$/;"	a
Thing	plugged/tern_for_vim/node_modules/tern/test/condense/add_to_old.js	/^function Thing() {}$/;"	f
Token	plugged/vim-javascript/indent/javascript.vim	/^function s:Token()$/;"	f
TokenType	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var TokenType = function TokenType(label, conf) {$/;"	f	function:var
Transform	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_passthrough.js	/^var Transform = require('.\/_stream_transform');$/;"	v
Transform	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^function Transform(options) {$/;"	c
TryNextPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var TryNextPlugin = require(".\/TryNextPlugin");$/;"	v
TryNextPlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/TryNextPlugin.js	/^function TryNextPlugin(source, message, target) {$/;"	c
TryStack	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! s:TryStack(maker) abort$/;"	f
TsuReloadProject	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuReloadProject       : call tsuquyomi#reloadProject()$/;"	c
TsuStartServer	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuStartServer        : call tsuquyomi#startServer()$/;"	c
TsuStatusServer	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuStatusServer       : echom tsuquyomi#statusServer()$/;"	c
TsuStopServer	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuStopServer         : call tsuquyomi#stopServer()$/;"	c
TsuquyomiReloadProject	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuquyomiReloadProject : call tsuquyomi#reloadProject()$/;"	c
TsuquyomiStartServer	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuquyomiStartServer  : call tsuquyomi#startServer()$/;"	c
TsuquyomiStatusServer	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuquyomiStatusServer : echom tsuquyomi#statusServer()$/;"	c
TsuquyomiStopServer	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^command! TsuquyomiStopServer   : call tsuquyomi#stopServer()$/;"	c
Type	plugged/tern_for_vim/node_modules/tern/test/cases/replace_bogus_prop.js	/^function Type() {}$/;"	c
Type	plugged/tern_for_vim/node_modules/tern/test/cases/replace_bogus_prop.js	/^function Type() {}$/;"	f
UNAME_S	plugged/vimproc.vim/Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
Unlock	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
UnsafeCachePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var UnsafeCachePlugin = require(".\/UnsafeCachePlugin");$/;"	v
UnsafeCachePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js	/^function UnsafeCachePlugin(source, filterPredicate, cache, target) {$/;"	c
UpdateDub	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! s:UpdateDub() abort$/;"	f
Usage	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
UseFilePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var UseFilePlugin = require(".\/UseFilePlugin");$/;"	v
UseFilePlugin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UseFilePlugin.js	/^function UseFilePlugin(source, filename, target) {$/;"	c
VADER	plugged/neomake/Makefile	/^VADER:=Vader!$/;"	m
VADER	plugged/neomake/Makefile	/^_run_interactive: VADER:=Vader$/;"	m
VADER_ARGS	plugged/neomake/Makefile	/^VADER_ARGS=tests\/all.vader$/;"	m
VADER_OPTIONS	plugged/neomake/Makefile	/^VADER_OPTIONS:=-q$/;"	m
VIMHELPLINT_VIM	plugged/neomake/Makefile	/^vimhelplint: export VIMHELPLINT_VIM:=vim$/;"	m
VIMLINT_BIN	plugged/neomake/Makefile	/^VIMLINT_BIN=$(shell command -v vimlint 2>\/dev\/null || echo build\/vimlint\/bin\/vimlint.sh -l build\/vimlint -p build\/vimlparser)$/;"	m
VIMLINT_OPTIONS	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1 -e 'EVL103.a:_.*=1'$/;"	m
VIMPROC	plugged/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win32$/;"	m
VIMPROC	plugged/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win64$/;"	m
VIM_ARGS	plugged/neomake/Makefile	/^VIM_ARGS='+$(VADER) $(VADER_OPTIONS) $(VADER_ARGS)'$/;"	m
VIM_ARGS	plugged/neomake/Makefile	/^runnvim: VIM_ARGS:=$/;"	m
VIM_ARGS	plugged/neomake/Makefile	/^runvim: VIM_ARGS:=$/;"	m
VINT_BIN	plugged/neomake/Makefile	/^VINT_BIN=$(shell command -v vint 2>\/dev\/null || echo build\/vint\/bin\/vint)$/;"	m
VP_BUFSIZE	plugged/vimproc.vim/src/proc.c	129;"	d	file:
VP_BUFSIZE	plugged/vimproc.vim/src/proc_w32.c	123;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/src/proc.c	189;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/src/proc.c	212;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/src/proc_w32.c	249;"	d	file:
VP_CHR_TO_OFLAG	plugged/vimproc.vim/src/proc_w32.c	272;"	d	file:
VP_DUP_HANDLE	plugged/vimproc.vim/src/proc_w32.c	505;"	d	file:
VP_DUP_HANDLE	plugged/vimproc.vim/src/proc_w32.c	630;"	d	file:
VP_EOV	plugged/vimproc.vim/src/vimstack.c	29;"	d	file:
VP_EOV_STR	plugged/vimproc.vim/src/vimstack.c	30;"	d	file:
VP_ERRMSG_SIZE	plugged/vimproc.vim/src/vimstack.c	35;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/src/proc.c	511;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/src/proc.c	659;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/src/proc.c	683;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/src/proc.c	823;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/src/proc_w32.c	504;"	d	file:
VP_GOTO_ERROR	plugged/vimproc.vim/src/proc_w32.c	631;"	d	file:
VP_HEADER_SIZE	plugged/vimproc.vim/src/vimstack.c	36;"	d	file:
VP_INITIAL_BUFSIZE	plugged/vimproc.vim/src/vimstack.c	34;"	d	file:
VP_NUMFMT_BUFSIZE	plugged/vimproc.vim/src/vimstack.c	33;"	d	file:
VP_NUM_BUFSIZE	plugged/vimproc.vim/src/vimstack.c	32;"	d	file:
VP_POLLIN	plugged/vimproc.vim/src/proc.c	302;"	d	file:
VP_POLLIN	plugged/vimproc.vim/src/proc.c	388;"	d	file:
VP_PTYTTY_H_	plugged/vimproc.vim/src/ptytty.h	2;"	d
VP_READ_BUFSIZE	plugged/vimproc.vim/src/proc.c	130;"	d	file:
VP_READ_BUFSIZE	plugged/vimproc.vim/src/proc_w32.c	124;"	d	file:
VP_RETURN_IF_FAIL	plugged/vimproc.vim/src/vimstack.c	38;"	d	file:
VP_SET_NONBLOCK_IF_NEEDED	plugged/vimproc.vim/src/proc.c	293;"	d	file:
VP_SET_NONBLOCK_IF_NEEDED	plugged/vimproc.vim/src/proc.c	295;"	d	file:
VP_STACK_NULL	plugged/vimproc.vim/src/vimstack.c	52;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	plugged/vimproc.vim/src/proc.c	1112;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	plugged/vimproc.vim/src/proc.c	1268;"	d	file:
VP_STACK_PUSH_SIGNAME	plugged/vimproc.vim/src/proc.c	1110;"	d	file:
VP_STACK_PUSH_SIGNAME	plugged/vimproc.vim/src/proc.c	1267;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/src/proc.c	223;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/src/proc.c	273;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/src/proc_w32.c	283;"	d	file:
VP_STR_TO_OFLAG	plugged/vimproc.vim/src/proc_w32.c	333;"	d	file:
VimProcBang	plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcBang$/;"	c
VimProcInstall	plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=* VimProcInstall$/;"	c
VimProcRead	plugged/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcRead$/;"	c
WIFCONTINUED	plugged/vimproc.vim/src/proc.c	65;"	d	file:
WIFCONTINUED	plugged/vimproc.vim/src/proc.c	67;"	d	file:
WINVER	plugged/vimproc.vim/make_msvc.mak	/^WINVER = 0x0500$/;"	m
WINVER	plugged/vimproc.vim/src/proc_w32.c	37;"	d	file:
Writable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^var Writable = require('.\/_stream_writable');$/;"	v
Writable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function Writable(options) {$/;"	c
WritableState	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function WritableState(options, stream) {$/;"	c
WritableStream	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^var WritableStream = stream.Writable;$/;"	v
WriteReq	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function WriteReq(chunk, encoding, cb) {$/;"	c
WriteStream	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^  function WriteStream (path, options) {$/;"	f	function:function.ReadStream$open
WriteStream	plugged/tern_for_vim/node_modules/graceful-fs/legacy-streams.js	/^  function WriteStream (path, options) {$/;"	c
WriteStream$open	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^  function WriteStream$open () {$/;"	f	function:function.ReadStream$open
\	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    "'":      "'",$/;"	p	class:escapes
_	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var _ = function(obj) {$/;"	c
_	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.after	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.bind	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var ctor = function(){};$/;"	f
_.bindAll	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.chain	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.clone	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.compact	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.compose	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.countBy	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.debounce	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.defaults	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.defer	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.delay	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.difference	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.extend	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.findWhere	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.flatten	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.groupBy	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.has	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.identity	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.indexOf	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.initial	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.intersection	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.invert	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.invoke	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isArguments	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  if (!_.isArguments(arguments)) {$/;"	f
_.isBoolean	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isElement	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isEmpty	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isEqual	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isFinite	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  }$/;"	f
_.isFunction	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  if (typeof (\/.\/) !== 'function') {$/;"	f
_.isNaN	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isNull	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isObject	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.isUndefined	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.last	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.lastIndexOf	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.max	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.memoize	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.min	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.mixin	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.noConflict	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.omit	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.once	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.pairs	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.partial	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.pick	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.pluck	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.random	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.range	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.reject	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.result	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  });$/;"	f
_.shuffle	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.size	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.sortBy	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.sortedIndex	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.tap	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.throttle	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.times	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.toArray	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.union	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.uniqueId	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var idCounter = 0;$/;"	f
_.values	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.where	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.without	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.wrap	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_.zip	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  };$/;"	f
_COVIMERAGE	plugged/neomake/Makefile	/^_COVIMERAGE=$(if $(filter-out 0,$(NEOMAKE_DO_COVERAGE)),covimerage run --append --no-report ,)$/;"	m
_DOCKER_VIM_TARGETS	plugged/neomake/Makefile	/^_DOCKER_VIM_TARGETS:=$(addprefix docker_test-,$(DOCKER_VIMS))$/;"	m
_ECHO_DOCKER_VIMS	plugged/neomake/Makefile	/^_ECHO_DOCKER_VIMS:=ls \/vim-build\/bin | grep vim | sort$/;"	m
_FAKE_POLL_H	plugged/vimproc.vim/src/fakepoll.h	17;"	d
_FIXTURES_INPUT	plugged/neomake/Makefile	/^_FIXTURES_INPUT:=$(wildcard tests\/fixtures\/input\/*\/*)$/;"	m
_FIXTURES_OUTPUT	plugged/neomake/Makefile	/^_FIXTURES_OUTPUT:=$(patsubst tests\/fixtures\/input\/%,tests\/fixtures\/output\/%,$(addsuffix .stdout,$(_FIXTURES_INPUT)) $(addsuffix .stderr,$(_FIXTURES_INPUT)))$/;"	m
_GNU_SOURCE	plugged/vimproc.vim/src/ptytty.c	5;"	d	file:
_POSIX_	plugged/vimproc.vim/src/proc_w32.c	49;"	d	file:
_REDIR_STDOUT	plugged/neomake/Makefile	/^_REDIR_STDOUT:=2>&1 <\/dev\/null >\/dev\/null $(_SED_HIGHLIGHT_ERRORS)$/;"	m
_REDIR_STDOUT	plugged/neomake/Makefile	/^_run_interactive: _REDIR_STDOUT:=$/;"	m
_SED_HIGHLIGHT_ERRORS	plugged/neomake/Makefile	/^_SED_HIGHLIGHT_ERRORS:=| contrib\/highlight-log --compact vader$/;"	m
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  function! s:_SID() abort$/;"	f
_TESTS_REL_AND_ABS	plugged/neomake/Makefile	/^_TESTS_REL_AND_ABS:=$(call uniq,$(abspath $(TESTS)) $(TESTS))$/;"	m
_WIN32_IE	plugged/vimproc.vim/make_msvc.mak	/^_WIN32_IE = 0x0500$/;"	m
_WIN32_WINNT	plugged/vimproc.vim/src/proc_w32.c	40;"	d	file:
_XOPEN_SOURCE	plugged/vimproc.vim/src/proc.c	8;"	d	file:
__BSD_VISIBLE	plugged/vimproc.vim/src/proc.c	72;"	d	file:
__del__	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def __del__(self):$/;"	m	class:Source	file:
__del__	plugged/tern_for_vim/script/tern.py	/^  def __del__(self):$/;"	m	class:Project	file:
__eq__	plugged/tern_for_vim/script/tern.py	/^    def __eq__(self, other):$/;"	m	class:tern_cmp_to_key.K	file:
__extends	plugged/tern_for_vim/node_modules/tern/test/cases/extends.js	/^var __extends = function(child, parent) {$/;"	f
__ge__	plugged/tern_for_vim/script/tern.py	/^    def __ge__(self, other):$/;"	m	class:tern_cmp_to_key.K	file:
__gt__	plugged/tern_for_vim/script/tern.py	/^    def __gt__(self, other):$/;"	m	class:tern_cmp_to_key.K	file:
__init__	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-typescript/rplugin/python3/denite/source/TSDocumentSymbol.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-typescript/rplugin/python3/denite/source/TSProjectFiles.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-typescript/rplugin/python3/denite/source/TSWorkspaceSymbol.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-typescript/rplugin/python3/deoplete/sources/typescript.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def __init__(self, vim):$/;"	m	class:DeopleteHandlers
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def __init__(self, vim):$/;"	m	class:Child
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def __init__(self, vim):$/;"	m	class:Deoplete
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def __init__(self, handler):$/;"	m	class:RedirectStream
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def __init__(self, vim, name=''):$/;"	m	class:DeopleteLogFilter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def __init__(self, vim, context):$/;"	m	class:Parent
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def __init__(self, plugin):$/;"	m	class:Process
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/tern_for_vim/script/tern.py	/^    def __init__(self, obj, *args):$/;"	m	class:tern_cmp_to_key.K
__init__	plugged/tern_for_vim/script/tern.py	/^  def __init__(self, dir):$/;"	m	class:Project
__le__	plugged/tern_for_vim/script/tern.py	/^    def __le__(self, other):$/;"	m	class:tern_cmp_to_key.K	file:
__lt__	plugged/tern_for_vim/script/tern.py	/^    def __lt__(self, other):$/;"	m	class:tern_cmp_to_key.K	file:
__ne__	plugged/tern_for_vim/script/tern.py	/^    def __ne__(self, other):$/;"	m	class:tern_cmp_to_key.K	file:
__proto__	plugged/tern_for_vim/node_modules/tern/test/cases/objectlit.js	/^var baz = {$/;"	p	class:baz
__proto__	plugged/tern_for_vim/node_modules/tern/test/cases/super.js	/^var obj = {$/;"	p	class:obj
_add_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_filter(self, path):$/;"	m	class:Child
_add_parent	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _add_parent(self, context):$/;"	m	class:Deoplete
_add_source	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_source(self, path):$/;"	m	class:Child
_check_recache	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _check_recache(self, context):$/;"	m	class:Deoplete
_classCallCheck	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }$/;"	f
_compare	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_ctx	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def _ctx(complete_str, ignorecase=True, camelcase=True):$/;"	f
_default_compare	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^Duplex.prototype._destroy = function (err, cb) {$/;"	m	class:Duplex
_destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype._destroy = function (err, cb) {$/;"	m	class:Readable
_destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^Transform.prototype._destroy = function (err, cb) {$/;"	m	class:Transform
_destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype._destroy = function (err, cb) {$/;"	m	class:Writable
_dot_to_sharp	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _enable_logging(self):$/;"	m	class:Child
_encode_dict	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
_encode_list	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
_exists_autoload_func_with_source	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
_extract_files	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_false	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_false() abort$/;"	f
_file2module	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_file2module(file) abort$/;"	f
_finish	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._finish = function () {$/;"	m	class:Glob
_finish	plugged/tern_for_vim/node_modules/glob/sync.js	/^GlobSync.prototype._finish = function () {$/;"	m	class:GlobSync
_function	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  function! s:_function(fstr) abort$/;"	f
_gather_async_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_async_results(self, result, source):$/;"	m	class:Child
_gather_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_results(self, context):$/;"	m	class:Child
_get	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _get(self, queue_id):$/;"	m	class:Parent
_get_builtin_module	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
_get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def _get_complete_position(self, context, current_ft, filetype):$/;"	m	class:Source
_get_cpsm_result	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _get_cpsm_result(self, candidates, pattern):$/;"	m	class:Filter
_get_dictionaries	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _get_dictionaries(self, context):$/;"	m	class:Source
_get_module	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_get_module(name) abort dict$/;"	f
_get_sources	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_sources(self):$/;"	m	class:Child
_get_tagfiles	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _get_tagfiles(self, context):$/;"	m	class:Source
_global_vital_files	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_global_vital_files() abort$/;"	f
_handleOldOptions	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
_import	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_import(name) abort dict$/;"	f
_import_func_name	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_init_parents	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _init_parents(self, context):$/;"	m	class:Deoplete
_internal_get_pty	plugged/vimproc.vim/src/ptytty.c	/^_internal_get_pty(int *master, char **path)$/;"	f	file:
_internal_get_tty	plugged/vimproc.vim/src/ptytty.c	/^_internal_get_tty(int *slave, const char *path,$/;"	f	file:
_internal_login_tty	plugged/vimproc.vim/src/ptytty.c	/^_internal_login_tty(int fd, const char *path,$/;"	f	file:
_isUint8Array	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function _isUint8Array(obj) {$/;"	f
_isUint8Array	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function _isUint8Array(obj) {$/;"	f
_is_skip	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _is_skip(self, context, source):$/;"	m	class:Child
_itersource	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _itersource(self, context):$/;"	m	class:Child
_load_filters	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_filters(self, context):$/;"	m	class:Deoplete
_load_sources	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_sources(self, context):$/;"	m	class:Deoplete
_logger	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    _logger = None  # type: logging.Logger$/;"	v	class:LoggingMixin
_longest_path_that_exists	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _longest_path_that_exists(self, context, input_str):$/;"	m	class:Source
_makeAbs	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._makeAbs = function (f) {$/;"	m	class:Glob.Glob
_makeAbs	plugged/tern_for_vim/node_modules/glob/sync.js	/^GlobSync.prototype._makeAbs = function (f) {$/;"	m	class:GlobSync
_makeTssRequest	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function _makeTssRequest(commandName, args) {$/;"	f
_make_cache	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_cache	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_candidate	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _make_candidate(self, line):$/;"	m	class:Source
_merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _merge_results(self, context, queue_id):$/;"	m	class:Child
_merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _merge_results(self, context):$/;"	m	class:Deoplete
_module_path	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_module_path(name) abort$/;"	f
_module_sid	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_sid_base_dir	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_normalizeEncoding	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function _normalizeEncoding(enc) {$/;"	f
_null	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_null() abort$/;"	f
_on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _on_event(self, context):$/;"	m	class:Child
_pad_with_char	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_path2project_directory_git	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_process	plugged/tern_for_vim/node_modules/glob/sync.js	/^GlobSync.prototype._process = function (pattern, index, inGlobStar) {$/;"	m	class:GlobSync
_processReaddir	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {$/;"	m	class:Glob.Glob.Glob.Glob.Glob
_processReaddir	plugged/tern_for_vim/node_modules/glob/sync.js	/^GlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {$/;"	m	class:GlobSync
_processSimple	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._processSimple = function (prefix, index, cb) {$/;"	m	class:Glob.Glob
_process_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _process_filter(self, f, context, max_candidates):$/;"	m	class:Child
_profile_end	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_end(self, name):$/;"	m	class:Child
_profile_start	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_start(self, context, name):$/;"	m	class:Child
_put	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name, args):$/;"	m	class:Parent
_read	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  this._read = function (n) {$/;"	f
_read	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype._read = function (n) {$/;"	m	class:Readable
_read	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^Transform.prototype._read = function (n) {$/;"	m	class:Transform
_readJson	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^		this._readJson = function(name, callback) {$/;"	m	class:this
_readdir	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._readdir = function (abs, inGlobStar, cb) {$/;"	m	class:Glob.Glob.Glob.Glob.Glob.Glob.Glob.Glob
_readdirEntries	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._readdirEntries = function (abs, entries, cb) {$/;"	m	class:Glob.Glob.Glob.Glob.Glob.Glob.Glob.Glob
_realpath	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._realpath = function () {$/;"	m	class:Glob
_realpathSet	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype._realpathSet = function (index, cb) {$/;"	m	class:Glob
_redir	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_redir(cmd) abort$/;"	f
_remove	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype._remove = function(_path, name, testFn) {$/;"	m	class:MemoryFileSystem
_replace	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_resolve	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
_result	plugged/vimproc.vim/src/proc.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_result	plugged/vimproc.vim/src/proc_w32.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_runtime	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_runtime(path) abort$/;"	f
_search_tern_project_dir	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def _search_tern_project_dir(self):$/;"	m	class:Source
_self_vital_files	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_self_vital_files() abort$/;"	f
_set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Child
_set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Deoplete
_sfuncname	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_sid	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_source	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:_source(path) abort$/;"	f
_split_by_wcswidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_start_process	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self, context):$/;"	m	class:Parent
_stop	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:_stop(i, ...) abort$/;"	f
_substitute_path	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _substitute_path(self, context, path):$/;"	m	class:Source
_target	plugged/vimproc.vim/tools/appveyor.bat	/^  set _target=$/;"	v
_target	plugged/vimproc.vim/tools/appveyor.bat	/^  set _target=_test$/;"	v
_tern_projects	plugged/tern_for_vim/script/tern.py	/^_tern_projects = {}$/;"	v
_transform	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_passthrough.js	/^PassThrough.prototype._transform = function (chunk, encoding, cb) {$/;"	m	class:PassThrough
_transform	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^Transform.prototype._transform = function (chunk, encoding, cb) {$/;"	m	class:Transform
_true	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_true() abort$/;"	f
_uint8ArrayToBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function _uint8ArrayToBuffer(chunk) {$/;"	f
_uint8ArrayToBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function _uint8ArrayToBuffer(chunk) {$/;"	f
_undestroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype._undestroy = destroyImpl.undestroy;$/;"	m	class:Readable
_undestroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype._undestroy = destroyImpl.undestroy;$/;"	m	class:Writable
_unify_path	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  function! s:_uniq(list) abort$/;"	f
_update_result	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _update_result(self, result, context_input, next_input):$/;"	m	class:Child
_use_previous_result	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _use_previous_result(self, context, result, is_volatile):$/;"	m	class:Child
_vital_created	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_created	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_loaded	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_write	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _write(self, stdout, expr):$/;"	m	class:Child
_write	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^Transform.prototype._write = function (chunk, encoding, cb) {$/;"	m	class:Transform
_write	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype._write = function (chunk, encoding, cb) {$/;"	m	class:Writable
_writev	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype._writev = null;$/;"	m	class:Writable
a	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^var a = [1, 2, 3]; \/\/: [number]$/;"	v
a	plugged/tern_for_vim/node_modules/tern/test/cases/computedprop.js	/^var obj = {a: "bar", b: "baz"};$/;"	p	class:x.bar
a	plugged/tern_for_vim/node_modules/tern/test/cases/computedprop.js	/^x[foo()] = {a: 10, b: 20};$/;"	p	class:x
a	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^Ctor1.prototype = {a: 1};$/;"	p	class:Ctor1
a	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var singleton = {a: 10, b: 20}.  \/\/+ a, b$/;"	p	class:new
a	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var a = getSomething();$/;"	v
a	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/dir1/index.js	/^exports.foo = {a: 10};$/;"	p	class:exports.foo
a	plugged/tern_for_vim/node_modules/tern/test/cases/objnames.js	/^Ctor1.prototype = {a: 1};$/;"	p	class:Ctor1
a	plugged/tern_for_vim/node_modules/tern/test/cases/objnames.js	/^var singleton = {a: 10, b: 20}; \/\/: singleton$/;"	p	class:singleton
a	plugged/tern_for_vim/node_modules/tern/test/cases/underscore.js	/^var cloneObjOrig = {a: 1}, cloneObjCopy = _.clone(cloneObjOrig);$/;"	p	class:cloneObjOrig
a	plugged/tern_for_vim/node_modules/tern/test/cases/underscore.js	/^var extendObj = {a: 1, b: true};$/;"	p	class:extendObj
a	plugged/tern_for_vim/node_modules/tern/test/condense/fn.js	/^function a(){}$/;"	f
abc	plugged/tern_for_vim/node_modules/tern/test/cases/cautiouspropagation.js	/^grabbag[bar()] = {abc: 10};$/;"	p	class:grabbag
abc	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var abc = 20;$/;"	v
abc	plugged/tern_for_vim/node_modules/tern/test/cases/fn_arguments.js	/^function abc() {$/;"	f
abc	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var abc = function() {$/;"	c
abort	plugged/tern_for_vim/node_modules/glob/glob.js	/^Glob.prototype.abort = function () {$/;"	m	class:Glob.Glob
abort_next_makers	plugged/neomake/autoload/neomake.vim	/^function! s:abort_next_makers(make_id) abort$/;"	f
absoluteWinRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/join.js	/^var absoluteWinRegExp = \/^[A-Z]:([\\\\\\\/]|$)\/i;$/;"	v
abspath	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:abspath(path) abort$/;"	f
acorn	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var acorn = require("acorn");$/;"	v
addChunk	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function addChunk(stream, state, chunk, addToFront) {$/;"	f
addListener	plugged/deoplete-ternjs/tests/test.js	/^MYAPP.event = {$/;"	m	class:MYAPP.event
addListener	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.addListener = Readable.prototype.on;$/;"	m	class:Readable
addLooseExports	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function addLooseExports(parse, Parser, plugins) {$/;"	f	function:function.parseExpressionAt
add_db	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
add_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_filter(self, path):$/;"	m	class:Parent
add_pending_output	plugged/neomake/autoload/neomake.vim	/^function! s:add_pending_output(jobinfo, source, lines) abort$/;"	f
add_source	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_source(self, path):$/;"	m	class:Parent
addfile	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  rename: function() { project.server.rename(project.editor) },$/;"	m	class:commands
afterInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	function afterInnerCallback(err, result) {$/;"	f	function:function
afterTransform	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^  this._transformState = {$/;"	p	class:Transform._transformState
afterTransform	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^function afterTransform(er, data) {$/;"	f
afterWrite	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function afterWrite(stream, state, finished, cb) {$/;"	f
again	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var again = 10;$/;"	v
age	plugged/tern_for_vim/node_modules/tern/test/cases/hint-objlit.js	/^function age(person) { return 2014 - person.age; }$/;"	f
aha	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var aha = "";$/;"	v
all	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
allowHashBang	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  allowImportExportEverywhere: false,$/;"	p	class:getLineInfo.defaultOptions
allowHashBang	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  allowImportExportEverywhere: false,$/;"	p	class:from
allowImportExportEverywhere	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  allowReturnOutsideFunction: false,$/;"	p	class:getLineInfo.defaultOptions
allowImportExportEverywhere	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  allowReturnOutsideFunction: false,$/;"	p	class:from
allowReserved	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  onTrailingComma: null,$/;"	p	class:getLineInfo.defaultOptions
allowReserved	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  onTrailingComma: null,$/;"	p	class:from
allowReturnOutsideFunction	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  allowReserved: null,$/;"	p	class:getLineInfo.defaultOptions
allowReturnOutsideFunction	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  allowReserved: null,$/;"	p	class:from
alphasort	plugged/tern_for_vim/node_modules/glob/common.js	/^function alphasort (a, b) {$/;"	f	function:function
already_queued_actions	plugged/neomake/autoload/neomake.vim	/^function! s:already_queued_actions(jobinfo) abort$/;"	f
an	plugged/tern_for_vim/node_modules/tern/test/condense/double_ref.js	/^var a = {an: "object"};$/;"	p	class:a
ancestor	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function ancestor(node, visitors, base, state) {$/;"	f	function:simple
and	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:and(xs) abort$/;"	f
another	plugged/tern_for_vim/node_modules/tern/test/cases/finddef.js	/^function another(arg) {$/;"	f
any	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js	/^AliasFieldPlugin.prototype.apply = function(resolver) {$/;"	m	class:AliasFieldPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasPlugin.js	/^AliasPlugin.prototype.apply = function(resolver) {$/;"	m	class:AliasPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AppendPlugin.js	/^AppendPlugin.prototype.apply = function(resolver) {$/;"	m	class:AppendPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CloneBasenamePlugin.js	/^CloneBasenamePlugin.prototype.apply = function(resolver) {$/;"	m	class:CloneBasenamePlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^ConcordExtensionsPlugin.prototype.apply = function(resolver) {$/;"	m	class:ConcordExtensionsPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js	/^ConcordMainPlugin.prototype.apply = function(resolver) {$/;"	m	class:ConcordMainPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^ConcordModulesPlugin.prototype.apply = function(resolver) {$/;"	m	class:ConcordModulesPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js	/^DescriptionFilePlugin.prototype.apply = function(resolver) {$/;"	m	class:DescriptionFilePlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js	/^DirectoryExistsPlugin.prototype.apply = function(resolver) {$/;"	m	class:DirectoryExistsPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileExistsPlugin.js	/^FileExistsPlugin.prototype.apply = function(resolver) {$/;"	m	class:FileExistsPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileKindPlugin.js	/^FileKindPlugin.prototype.apply = function(resolver) {$/;"	m	class:FileKindPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js	/^JoinRequestPlugin.prototype.apply = function(resolver) {$/;"	m	class:JoinRequestPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/LogInfoPlugin.js	/^LogInfoPlugin.prototype.apply = function(resolver) {$/;"	m	class:LogInfoPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/MainFieldPlugin.js	/^MainFieldPlugin.prototype.apply = function(resolver) {$/;"	m	class:MainFieldPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleAppendPlugin.js	/^ModuleAppendPlugin.prototype.apply = function(resolver) {$/;"	m	class:ModuleAppendPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleKindPlugin.js	/^ModuleKindPlugin.prototype.apply = function(resolver) {$/;"	m	class:ModuleKindPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js	/^ModulesInHierachicDirectoriesPlugin.prototype.apply = function(resolver) {$/;"	m	class:ModulesInHierachicDirectoriesPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js	/^ModulesInRootPlugin.prototype.apply = function(resolver) {$/;"	m	class:ModulesInRootPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NextPlugin.js	/^NextPlugin.prototype.apply = function(resolver) {$/;"	m	class:NextPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ParsePlugin.js	/^ParsePlugin.prototype.apply = function(resolver) {$/;"	m	class:ParsePlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResultPlugin.js	/^ResultPlugin.prototype.apply = function(resolver) {$/;"	m	class:ResultPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SymlinkPlugin.js	/^SymlinkPlugin.prototype.apply = function(resolver) {$/;"	m	class:SymlinkPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/TryNextPlugin.js	/^TryNextPlugin.prototype.apply = function(resolver) {$/;"	m	class:TryNextPlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js	/^UnsafeCachePlugin.prototype.apply = function(resolver) {$/;"	m	class:UnsafeCachePlugin
apply	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UseFilePlugin.js	/^UseFilePlugin.prototype.apply = function(resolver) {$/;"	m	class:UseFilePlugin
apply	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.apply = function apply() {$/;"	m	class:Tapable
applyPlugins	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPlugins = function applyPlugins(name) {$/;"	m	class:Tapable
applyPlugins0	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPlugins0 = function applyPlugins0(name) {$/;"	m	class:Tapable
applyPlugins1	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPlugins1 = function applyPlugins1(name, param) {$/;"	m	class:Tapable
applyPlugins2	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPlugins2 = function applyPlugins2(name, param1, param2) {$/;"	m	class:Tapable
applyPluginsAsyncSeries	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsAsyncSeries = Tapable.prototype.applyPluginsAsync = function applyPluginsAsyncSeries(name) {$/;"	m	class:Tapable
applyPluginsAsyncSeries1	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsAsyncSeries1 = function applyPluginsAsyncSeries1(name, param, callback) {$/;"	m	class:Tapable
applyPluginsAsyncSeriesBailResult	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsAsyncSeriesBailResult = function applyPluginsAsyncSeriesBailResult(name) {$/;"	m	class:Tapable
applyPluginsAsyncSeriesBailResult1	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsAsyncSeriesBailResult1 = function applyPluginsAsyncSeriesBailResult1(name, param, callback) {$/;"	m	class:Tapable
applyPluginsAsyncWaterfall	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsAsyncWaterfall = function applyPluginsAsyncWaterfall(name, init, callback) {$/;"	m	class:Tapable
applyPluginsBailResult	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsBailResult = function applyPluginsBailResult(name) {$/;"	m	class:Tapable
applyPluginsBailResult1	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsBailResult1 = function applyPluginsBailResult1(name, param) {$/;"	m	class:Tapable
applyPluginsBailResult2	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsBailResult2 = function applyPluginsBailResult2(name, param1, param2) {$/;"	m	class:Tapable
applyPluginsBailResult3	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsBailResult3 = function applyPluginsBailResult3(name, param1, param2, param3) {$/;"	m	class:Tapable
applyPluginsBailResult4	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsBailResult4 = function applyPluginsBailResult4(name, param1, param2, param3, param4) {$/;"	m	class:Tapable
applyPluginsBailResult5	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsBailResult5 = function applyPluginsBailResult5(name, param1, param2, param3, param4, param5) {$/;"	m	class:Tapable
applyPluginsParallel	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsParallel = function applyPluginsParallel(name) {$/;"	m	class:Tapable
applyPluginsParallelBailResult	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsParallelBailResult = function applyPluginsParallelBailResult(name) {$/;"	m	class:Tapable
applyPluginsParallelBailResult1	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsParallelBailResult1 = function applyPluginsParallelBailResult1(name, param, callback) {$/;"	m	class:Tapable
applyPluginsWaterfall	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsWaterfall = function applyPluginsWaterfall(name, init) {$/;"	m	class:Tapable
applyPluginsWaterfall0	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsWaterfall0 = function applyPluginsWaterfall0(name, init) {$/;"	m	class:Tapable
applyPluginsWaterfall1	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsWaterfall1 = function applyPluginsWaterfall1(name, init, param) {$/;"	m	class:Tapable
applyPluginsWaterfall2	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.applyPluginsWaterfall2 = function applyPluginsWaterfall2(name, init, param1, param2) {$/;"	m	class:Tapable
arg5	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var arg5 = 1 < 2 ? Promise.resolve(10) : 20;$/;"	v
args	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^args = parser.parse_args()$/;"	v
arguments	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^            command: commandName,$/;"	p	class:const
arguments	plugged/tern_for_vim/node_modules/tern/test/cases/arguments.js	/^var arguments = 1; \/\/: number$/;"	v
arr	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var arr = 6;$/;"	v
arr2.	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var arr2 = new Array(1, 3, 5, 7);$/;"	f
arrayParamProperties	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function arrayParamProperties(employees) {$/;"	f
asAsync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^function asAsync(fn, context) {$/;"	f
ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
assert	plugged/tern_for_vim/node_modules/core-util-is/test.js	/^var assert = require('tap');$/;"	v
asset_time	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^    asset_time = time.strptime(asset['updated_at'], '%Y-%m-%dT%H:%M:%SZ')$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AppendPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CloneBasenamePlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileExistsPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileKindPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/LogInfoPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/MainFieldPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleAppendPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleKindPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NextPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ParsePlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResultPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SymlinkPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/TryNextPlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UseFilePlugin.js	/^var assign = require("object-assign");$/;"	v
assign	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var assign = require("object-assign");$/;"	v
assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
asyncContextResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var asyncContextResolver = ResolverFactory.createResolver({$/;"	v
asyncLoaderResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var asyncLoaderResolver = ResolverFactory.createResolver({$/;"	v
asyncResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var asyncResolver = ResolverFactory.createResolver({$/;"	v
asyncWrite	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;$/;"	v
attach_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def attach_vim(serveraddr):$/;"	f
auto-complete	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defadvice auto-complete (around add-tern-ac-candidates first activate)$/;"	f
auto_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def auto_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
automake_delayed_cb	plugged/neomake/autoload/neomake/configure.vim	/^function! s:automake_delayed_cb(timer) abort$/;"	f
b	plugged/tern_for_vim/node_modules/tern/test/cases/computedprop.js	/^var obj = {a: "bar", b: "baz"};$/;"	p	class:x.bar
b	plugged/tern_for_vim/node_modules/tern/test/cases/computedprop.js	/^x[foo()] = {a: 10, b: 20};$/;"	p	class:x
b	plugged/tern_for_vim/node_modules/tern/test/cases/effects.js	/^var b = [];$/;"	v
b	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var singleton = {a: 10, b: 20}.  \/\/+ a, b$/;"	p	class:new
b	plugged/tern_for_vim/node_modules/tern/test/cases/objectlit.js	/^  __proto__: null,$/;"	p	class:baz
b	plugged/tern_for_vim/node_modules/tern/test/cases/objnames.js	/^var singleton = {a: 10, b: 20}; \/\/: singleton$/;"	p	class:singleton
b	plugged/tern_for_vim/node_modules/tern/test/cases/underscore.js	/^var extendObj = {a: 1, b: true};$/;"	p	class:extendObj
b	plugged/tern_for_vim/node_modules/tern/test/condense/double_ref.js	/^var b = a;$/;"	v
b	plugged/tern_for_vim/node_modules/tern/test/condense/recursive.js	/^var b = {};$/;"	v
b:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^  let b:Filepath = s:V.import('System.Filepath')$/;"	v
b:current_syntax	plugged/neomake/syntax/neomake/qf.vim	/^let b:current_syntax = 'neomake_qf'$/;"	v
b:current_syntax	plugged/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:did_indent	plugged/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:result	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^    let b:result = tsuquyomi#tsClient#tsDefinition(file, 3, 1) $/;"	v
b:result	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^    let b:result= tsuquyomi#tsClient#tsDefinition(file, 2, 15) $/;"	v
b:undo_ftplugin	plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_indent	plugged/vim-javascript/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b_stat	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var types = {$/;"	p	class:TokContext.types
b_stat	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^export const types = {$/;"	p	class:export
balanced	plugged/tern_for_vim/node_modules/balanced-match/index.js	/^function balanced(a, b, str) {$/;"	f
balanced	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var balanced = require('balanced-match');$/;"	v
bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
bar	autoload/plug.vim	/^function! s:bar()$/;"	f
bar	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^  makeString: function() { return "hi"; },$/;"	p	class:Foo
bar	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var base = {foo: 10, bar: 20, foo2: { a: 10, b: "test" } };$/;"	p	class:friend.friend.firs.firstname.friend.ch.changeName.changeName
bar	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var bar = function(a, b) { return goop(); };$/;"	f
bar	plugged/tern_for_vim/node_modules/tern/test/cases/object_create.js	/^var base = {foo: 10, bar: 20};$/;"	p	class:base
bar	plugged/tern_for_vim/node_modules/tern/test/cases/proto.js	/^  makeString: function() { return "hi"; },$/;"	p	class:Foo
bar	plugged/tern_for_vim/node_modules/tern/test/condense/basic.js	/^  foo: 20,$/;"	p	class:y
base	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.CatchClause	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.Class	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^base.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, "Class"); }$/;"	f
base.ConditionalExpression	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.ExportAllDeclaration	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.ForInit	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.ForStatement	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.IfStatement	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^  function (node, st, c) { return c(node.expression, st, "Expression"); }$/;"	f
base.ImportDeclaration	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.LabeledStatement	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.MemberExpression	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.Pattern	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^base.ScopeExpression = function (node, st, c) { return c(node, st, "Expression"); }$/;"	f
base.ScopeBody	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.ScopeExpression	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^base.ScopeBody = function (node, st, c) { return c(node, st, "Statement"); }$/;"	f
base.SwitchStatement	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base.TryStatement	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^  function (node, st, c) { return c(node.argument, st, "Expression"); }$/;"	f
base.VariableDeclarator	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^}$/;"	f
base64End	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function base64End(buf) {$/;"	f
base64Text	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function base64Text(buf, i) {$/;"	c
baseUrl	plugged/tern_for_vim/node_modules/tern/test/cases/requirejs/main.js	/^var c3 = {$/;"	p	class:c3
basename	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CloneBasenamePlugin.js	/^var basename = require(".\/getPaths").basename;$/;"	v
basename	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/getPaths.js	/^module.exports.basename = function basename(path) {$/;"	f
basename	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:basename(path) abort$/;"	f
bash	plugged/neomake/Makefile	/^bash:=$(shell command -v bash 2>\/dev\/null)$/;"	m
baz	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var baz = "hi";$/;"	v
baz	plugged/tern_for_vim/node_modules/tern/test/cases/order_of_definition.js	/^foo.bar = {baz: baz};$/;"	p	class:foo.bar
beforeExpr	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var beforeExpr = {beforeExpr: true};$/;"	p	class:var.beforeExpr
beforeExpr	plugged/tern_for_vim/node_modules/acorn/src/tokentype.js	/^const beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true}$/;"	p	class:const
beforeInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	function beforeInnerCallback(err, result) {$/;"	f	function:function
binary_search	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_begin(l, prefix):$/;"	f
binary_search_end	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_end(l, prefix):$/;"	f
binary_search_lines_by_prefix	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^def binary_search_lines_by_prefix(prefix, filename):$/;"	f
bind_makers_for_job	plugged/neomake/autoload/neomake/core.vim	/^function! s:bind_makers_for_job(options, makers) abort$/;"	f
binop	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function binop(name, prec) {$/;"	f	function:function
binop	plugged/tern_for_vim/node_modules/acorn/src/tokentype.js	/^function binop(name, prec) {$/;"	f
bl	plugged/tern_for_vim/node_modules/memory-fs/test/MemoryFileSystem.js	/^var bl = require("bl");$/;"	v
blah	plugged/tern_for_vim/node_modules/tern/test/cases/finddef.js	/^function blah() {}$/;"	f
blah	plugged/tern_for_vim/node_modules/tern/test/cases/hint-objlit.js	/^var poison = {focus: 1, blah: 2, nothing: 3};$/;"	p	class:poison
bogus	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var bogus = abcdef();$/;"	v
born	plugged/tern_for_vim/node_modules/tern/test/cases/hint-objlit.js	/^var person = {name: "harry", born: 1980};$/;"	p	class:person
break	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
breaker	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var breaker = {};$/;"	v
browser	plugged/tern_for_vim/node_modules/tern/test/cases/webpack/node_modules/foo/browser.js	/^module.exports = {browser: true}$/;"	p	class:module.exports
browser	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var defData = {$/;"	p	class:defData
buf	plugged/vimproc.vim/src/vimstack.c	/^    char *buf;   \/* stack buffer *\/$/;"	m	struct:vp_stack_t	file:
buffer_fragment	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def buffer_fragment(self):$/;"	m	class:Source
buffer_slice	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def buffer_slice(self, buf, start, end):$/;"	m	class:Source
bug	plugged/tern_for_vim/node_modules/tern/test/cases/order_of_definition.js	/^var baz = {bug: function(o) {$/;"	m	class:baz
buildCopy	plugged/tern_for_vim/node_modules/tern/test/cases/copyprops.js	/^function buildCopy(o) {$/;"	f
build_go_files	init.vim	/^function! s:build_go_files()$/;"	f
bytepos2charpos	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def bytepos2charpos(encoding, input, pos):$/;"	f
c	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^  ;(function c(node, st, override) {$/;"	f	function:simple
c	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^  ;(function c(node, st, override) {$/;"	f	function:simple.ancestor
c	plugged/tern_for_vim/node_modules/tern/test/cases/destructure.js	/^let {c, d} = {c: "hello", d: true}$/;"	p
c	plugged/tern_for_vim/node_modules/tern/test/cases/effects.js	/^var c = [];$/;"	v
c	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var c = somethingElse();$/;"	v
c1	plugged/tern_for_vim/node_modules/tern/test/cases/requirejs/main.js	/^var c1 = {$/;"	v
c2	plugged/tern_for_vim/node_modules/tern/test/cases/requirejs/main.js	/^var c2 = {$/;"	v
c3	plugged/tern_for_vim/node_modules/tern/test/cases/requirejs/main.js	/^var c3 = {$/;"	v
cache_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
callFinal	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function callFinal(stream, state) {$/;"	f
callback	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^      isBuf: isBuf,$/;"	p	class:state.lastBufferedRequest
callbackWrapper	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/createInnerCallback.js	/^			var callbackWrapper = function callbackWrapper() {$/;"	f	function:var
cdUp	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js	/^function cdUp(directory) {$/;"	f
ce	plugged/tern_for_vim/node_modules/errno/custom.js	/^  var ce = function (type, proto) {$/;"	f	function:module.exports
char_range	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
charpos2bytepos	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charpos2bytepos(encoding, input, pos):$/;"	f
charwidth	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charwidth(c):$/;"	f
checkOpenAndMessage	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:checkOpenAndMessage(filelist)$/;"	f
checkTicks	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^Storage.prototype.checkTicks = function() {$/;"	m	class:Storage
check_custom_option	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_option(old_var, new_var) abort$/;"	f
check_custom_var	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_var(source_name, old_var, new_var) abort$/;"	f
check_errors	plugged/neomake/contrib/vim-checks	/^check_errors() {$/;"	f
check_global_tsserver	plugged/deoplete-typescript/autoload/health/nvim_typescript.vim	/^function! s:check_global_tsserver() abort "{{{$/;"	f
check_local_tsserver	plugged/deoplete-typescript/autoload/health/nvim_typescript.vim	/^function! s:check_local_tsserver() abort "{{{$/;"	f
check_ls	plugged/vimproc.vim/test/system.vim	/^function! s:check_ls() abort$/;"	f
check_neovim	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_neovim() abort$/;"	f
check_node	plugged/deoplete-typescript/autoload/health/nvim_typescript.vim	/^function! s:check_node() abort "{{{$/;"	f
check_omnifunc	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:check_omnifunc(context) abort$/;"	f
check_required_node_for_nvim_typescript	plugged/deoplete-typescript/autoload/health/nvim_typescript.vim	/^function! s:check_required_node_for_nvim_typescript() abort "{{{$/;"	f
check_required_python_for_deoplete	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_python_for_deoplete() abort$/;"	f
check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
check_t_list	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_t_list() abort$/;"	f
check_timers	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_timers() abort$/;"	f
checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
childrenIgnored	plugged/tern_for_vim/node_modules/glob/common.js	/^function childrenIgnored (self, path) {$/;"	f	function:function
chmodFix	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function chmodFix (orig) {$/;"	f	function:patchLutimes
chmodFixSync	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function chmodFixSync (orig) {$/;"	f	function:patchLchmod
chomp	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chop	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chownErOk	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function chownErOk (er) {$/;"	f
chownFix	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function chownFix (orig) {$/;"	f	function:function
chownFixSync	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function chownFixSync (orig) {$/;"	f	function:function
chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
chunk	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^    state.lastBufferedRequest = {$/;"	p	class:state.lastBufferedRequest
chunkInvalid	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function chunkInvalid(state, chunk) {$/;"	f
clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
clean_action_queue	plugged/neomake/autoload/neomake.vim	/^function! s:clean_action_queue(job_or_make_info) abort$/;"	f
clean_action_queue_augroup	plugged/neomake/autoload/neomake.vim	/^function! s:clean_action_queue_augroup() abort$/;"	f
clean_for_new_make	plugged/neomake/autoload/neomake.vim	/^function! s:clean_for_new_make(make_info) abort$/;"	f
clean_make_info	plugged/neomake/autoload/neomake.vim	/^function! s:clean_make_info(make_info, ...) abort$/;"	f
clean_qf_annotations	plugged/neomake/autoload/neomake/quickfix.vim	/^function! s:clean_qf_annotations() abort$/;"	f
cleanup	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function cleanup() {$/;"	f	function:function
clear	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  BufferList.prototype.clear = function clear() {$/;"	m	class:BufferList
clear	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clearBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function clearBuffer(stream, state) {$/;"	f
clear_cache	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:clear_cache(bufnr) abort$/;"	f
close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:close() dict "{{{$/;"	f
close	plugged/vimproc.vim/src/proc_w32.c	183;"	d	file:
closeFromList	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:closeFromList(filelist)$/;"	f
close_all	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:close_all(self) abort "{{{$/;"	f
close_allfd	plugged/vimproc.vim/src/proc.c	/^close_allfd(int fds[3][2])$/;"	f	file:
closed_fdopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:closed_fdopen(f_close, f_read, f_write) abort "{{{$/;"	f
closureArray	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var closureArray = anotherThing();$/;"	v
closureMap	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var closureMap = yetAnotherThing();$/;"	v
cm#sources#typescript#refresh	plugged/deoplete-typescript/autoload/cm/sources/typescript.vim	/^func! cm#sources#typescript#refresh(info, ctx)$/;"	f
cm#sources#typescript#register	plugged/deoplete-typescript/autoload/cm/sources/typescript.vim	/^func! cm#sources#typescript#register()$/;"	f
cmd.close	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.close() abort "{{{$/;"	f
cmd.open	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.open() abort "{{{$/;"	f
cmd.system	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.system(cmd) abort "{{{$/;"	f
cmp	plugged/tern_for_vim/script/tern.py	/^    def cmp(a, b):$/;"	f
cnt	plugged/vimproc.vim/tools/benchmark.vim	/^let cnt = 25$/;"	v
code	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^    let code = tsuquyomi#es6import#checkExternalModule('InternalModule', s:input_file, 1)$/;"	v
code	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^    let code = tsuquyomi#es6import#checkExternalModule('NS', s:input_file, 1)$/;"	v
code	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^    let code = tsuquyomi#es6import#checkExternalModule('__NO_MODULE__', s:input_file, 1)$/;"	v
code	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^    let code = tsuquyomi#es6import#checkExternalModule('external-module', s:input_file, 1)$/;"	v
code	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^    let code = tsuquyomi#es6import#checkExternalModule('external-module\/alt', s:input_file, 1)$/;"	v
codePointToString	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function codePointToString(code) {$/;"	f	function:pp$7.readCodePoint
codePointToString	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^function codePointToString(code) {$/;"	f	function:pp.readCodePoint
combinations	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
command	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^            type: 'request',$/;"	p	class:const
command_maker_base._bind_args	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._bind_args() abort dict$/;"	f
command_maker_base._get_argv	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._get_argv(jobinfo) abort dict$/;"	f
command_maker_base._get_fname_for_buffer	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._get_fname_for_buffer(jobinfo) abort$/;"	f
command_maker_base._get_tempfilename	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._get_tempfilename(jobinfo) abort dict$/;"	f
common_head	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
comp_alias	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:comp_alias(alias1, alias2)$/;"	f
compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
completation	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def completation(self, pos):$/;"	m	class:Source
complete	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^var commands = {$/;"	m	class:function.initProject.commands
completion_async	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_async(timer) abort$/;"	f
completion_begin	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_begin(event) abort$/;"	f
completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def completion_begin(self, context):$/;"	m	class:Deoplete
completion_timer_start	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_start(event) abort$/;"	f
completion_timer_stop	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_stop() abort$/;"	f
computeNewHighWaterMark	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function computeNewHighWaterMark(n) {$/;"	f
computed	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var result = {computed : -Infinity, value: -Infinity};$/;"	p	class:result
computed	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var result = {computed : Infinity, value: Infinity};$/;"	p	class:result
concat	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  BufferList.prototype.concat = function concat(n) {$/;"	m	class:BufferList
concat	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concatMap	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var concatMap = require('concat-map');$/;"	v
concatMap	plugged/tern_for_vim/node_modules/concat-map/example/map.js	/^var concatMap = require('..\/');$/;"	v
concatMap	plugged/tern_for_vim/node_modules/concat-map/test/map.js	/^var concatMap = require('..\/');$/;"	v
concord	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^var concord = require(".\/concord");$/;"	v
concord	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js	/^var concord = require(".\/concord");$/;"	v
concord	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^var concord = require(".\/concord");$/;"	v
condenseDir	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^var condenseDir = "test\/condense";$/;"	v
config	plugged/tern_for_vim/node_modules/util-deprecate/browser.js	/^function config (name) {$/;"	f
configure_buffer	plugged/neomake/autoload/neomake/configure.vim	/^function! s:configure_buffer(bufnr, ...) abort$/;"	f
conj	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
connection_made	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def connection_made(self, transport):$/;"	m	class:Process
cons	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
constructor	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.constructor = Resolver;$/;"	m	class:Resolver
constructor	plugged/tern_for_vim/node_modules/inherits/inherits_browser.js	/^    ctor.prototype.constructor = ctor$/;"	m	class:TempCtor
contains	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:contains(path, base) abort$/;"	f
contains_multibyte	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
context	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	var obj = {$/;"	p	class:var.obj
convert2candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2candidates(l):$/;"	f
convert2list	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2list(expr):$/;"	f
convertDetailEntry	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function convertDetailEntry(nvim, entry) {$/;"	f
convertEntry	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function convertEntry(nvim, entry) {$/;"	f
convertToCandidate	plugged/deoplete-typescript/rplugin/python3/denite/source/TSDocumentSymbol.py	/^    def convertToCandidate(self, symbols):$/;"	m	class:Source
convertToCandidate	plugged/deoplete-typescript/rplugin/python3/denite/source/TSProjectFiles.py	/^    def convertToCandidate(self, symbols):$/;"	m	class:Source
convertToDisplayString	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function convertToDisplayString(displayParts) {$/;"	f
convert_args	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:convert_args(args) abort "{{{$/;"	f
copyBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^function copyBuffer(src, target, offset) {$/;"	f
copyFromBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function copyFromBuffer(n, list) {$/;"	f
copyFromBufferString	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function copyFromBufferString(n, list) {$/;"	f
copyProperties	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^function copyProperties(from, to) {$/;"	f
copyProps.from	plugged/tern_for_vim/node_modules/safe-buffer/index.js	/^}$/;"	f
cork	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.cork = function () {$/;"	m	class:Writable
create	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.create = function create(options) {$/;"	f
createDeferredPromise	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function createDeferredPromise() {$/;"	f
createHeadingFromNavitem	plugged/tsuquyomi/autoload/unite/sources/outline/typescript.vim	/^function! s:createHeadingFromNavitem(navitem)$/;"	f
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/FileExistsPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleAppendPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModuleKindPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js	/^var createInnerCallback = require(".\/createInnerCallback");$/;"	v
createInnerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/createInnerCallback.js	/^module.exports = function createInnerCallback(callback, options, message, messageOptional) {$/;"	f
createIteratorCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/forEachBail.js	/^	function createIteratorCallback(i) {$/;"	f	function:module.exports
createNodeRecursive	plugged/tsuquyomi/autoload/unite/sources/outline/typescript.vim	/^function! s:createNodeRecursive(parent_node, navitem_list)$/;"	f
createReadStream	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^  function createReadStream (path, options) {$/;"	f	function:function.ReadStream$open.WriteStream$open
createReadStream	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.createReadStream = function(path, options) {$/;"	m	class:MemoryFileSystem
createRoot	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^function createRoot() {$/;"	f
createSeqment	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^function createSeqment() {$/;"	f
createSimple	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^function createSimple() {$/;"	f
createSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.create.sync = function createSync(options) {$/;"	f
createWriteStream	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^  function createWriteStream (path, options) {$/;"	f	function:function.ReadStream$open.WriteStream$open
createWriteStream	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.createWriteStream = function(path, options) {$/;"	m	class:MemoryFileSystem
create_dirs_for_file	plugged/neomake/autoload/neomake.vim	/^function! s:create_dirs_for_file(fpath) abort$/;"	f
create_locqf_list	plugged/neomake/autoload/neomake.vim	/^function! s:create_locqf_list(jobinfo) abort$/;"	f
critical	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def critical(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
ctermid	plugged/vimproc.vim/src/proc.c	82;"	d	file:
ctor	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^      var self = new ctor;$/;"	c
ctor	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var ctor = function(){};$/;"	f
ctor	plugged/tern_for_vim/node_modules/tern/test/cases/extends.js	/^  function ctor() { this.constructor = child; }$/;"	c
ctor	plugged/tern_for_vim/node_modules/tern/test/cases/extends.js	/^  function ctor() { this.constructor = child; }$/;"	c	class:__extends
curTest	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^var curTest;$/;"	v
currentDirectoryNixEndRegExp1	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var currentDirectoryNixEndRegExp1 = \/^\\\/+\\.$\/;$/;"	v
currentDirectoryNixEndRegExp2	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var currentDirectoryNixEndRegExp2 = \/\\\/+\\.$\/;$/;"	v
currentDirectoryNixMiddleRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var currentDirectoryNixMiddleRegExp = \/\\\/+(\\.\\\/)+\/;$/;"	v
currentDirectoryWinEndRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var currentDirectoryWinEndRegExp = \/\\\\\\.$\/;$/;"	v
currentDirectoryWinMiddleRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var currentDirectoryWinMiddleRegExp = \/\\\\(\\.\\\\)+\/;$/;"	v
current_compiler	plugged/vim-javascript/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
cursor_moved	plugged/neomake/autoload/neomake/quickfix.vim	/^function! s:cursor_moved() abort$/;"	f
cursormoved_delayed_cb	plugged/neomake/autoload/neomake.vim	/^function! s:cursormoved_delayed_cb(...) abort$/;"	f
cygwin	plugged/vimproc.vim/tools/appveyor.bat	/^:cygwin$/;"	l
cygwin_test	plugged/vimproc.vim/tools/appveyor.bat	/^:cygwin_test$/;"	l
d	plugged/tern_for_vim/node_modules/tern/test/cases/destructure.js	/^let {c, d} = {c: "hello", d: true}$/;"	p
d	plugged/tern_for_vim/node_modules/tern/test/cases/effects.js	/^var d;$/;"	v
data	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^    var entry = { data: v, next: null };$/;"	p	class:BufferList.var.entry
data	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^    var entry = { data: v, next: this.head };$/;"	p	class:BufferList.var.entry
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def debug(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def debug(vim, expr):$/;"	f
debug	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^Minimatch.prototype.debug = function () {}$/;"	m	class:Minimatch
debug	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var debug = void 0;$/;"	v
debug	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^} else {$/;"	f
debug	plugged/vimproc.vim/src/proc.c	/^const int debug = 0;$/;"	v
debug	plugged/vimproc.vim/src/proc_w32.c	/^const int debug = 0;$/;"	v
debugCallback	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function debugCallback(err) {$/;"	f	function:rethrow
debugLog	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! s:debugLog(msg)$/;"	f
debugUtil	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var debugUtil = require('util');$/;"	v
debug_log	plugged/neomake/autoload/neomake/configure.vim	/^function! s:debug_log(msg, ...) abort$/;"	f
debug_processes	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:debug_processes() abort$/;"	f
decode	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
decodeChunk	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function decodeChunk(state, chunk, encoding) {$/;"	f
decode_list	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:decode_list(str) abort$/;"	f
decode_size	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:decode_size(str, off) abort$/;"	f
default	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        default=os.getenv('AUTH_TOKEN'),$/;"	v
define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
define_completion_via_timer	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_completion_via_timer(event) abort$/;"	f
define_highlights	plugged/neomake/plugin/neomake.vim	/^function! s:define_highlights() abort$/;"	f
define_on_event	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_on_event(event) abort$/;"	f
define_signals	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:define_signals() abort$/;"	f
delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
deleteCommand	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! s:deleteCommand()$/;"	f
delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
deoplete#cancel_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#cancel_popup() abort$/;"	f
deoplete#close_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#close_popup() abort$/;"	f
deoplete#complete_common_string	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#complete_common_string() abort$/;"	f
deoplete#custom#_get	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get() abort$/;"	f
deoplete#custom#_get_buffer	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_buffer() abort$/;"	f
deoplete#custom#_get_filetype_option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_filetype_option(name, filetype, default) abort$/;"	f
deoplete#custom#_get_option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_option(name) abort$/;"	f
deoplete#custom#_get_source_var	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_source_var(source_name) abort$/;"	f
deoplete#custom#_init	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init() abort$/;"	f
deoplete#custom#_init_buffer	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init_buffer() abort$/;"	f
deoplete#custom#buffer_option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_option(name_or_dict, ...) abort$/;"	f
deoplete#custom#option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#option(name_or_dict, ...) abort$/;"	f
deoplete#custom#set	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#set(source_name, option_name, value) abort$/;"	f
deoplete#custom#source	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#source(source_name, option_name, value) abort$/;"	f
deoplete#custom#var	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#var(source_name, var_name, value) abort$/;"	f
deoplete#disable	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#disable() abort$/;"	f
deoplete#enable	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable() abort$/;"	f
deoplete#enable_logging	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable_logging(level, logfile) abort$/;"	f
deoplete#handler#_async_timer_start	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_start() abort$/;"	f
deoplete#handler#_async_timer_stop	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_stop() abort$/;"	f
deoplete#handler#_do_complete	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_do_complete() abort$/;"	f
deoplete#handler#_init	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_init() abort$/;"	f
deoplete#handler#_skip_next_completion	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_skip_next_completion() abort$/;"	f
deoplete#init#_channel	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel() abort$/;"	f
deoplete#init#_channel_initialized	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel_initialized() abort$/;"	f
deoplete#init#_context	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_context(event, sources) abort$/;"	f
deoplete#init#_custom_variables	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_custom_variables() abort$/;"	f
deoplete#init#_disable_handler	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_disable_handler() abort$/;"	f
deoplete#init#_enable_handler	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_enable_handler() abort$/;"	f
deoplete#init#_initialize	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_initialize() abort$/;"	f
deoplete#init#_is_handler_enabled	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_is_handler_enabled() abort$/;"	f
deoplete#init#_option	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_option() abort$/;"	f
deoplete#init#_prev_completion	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_prev_completion() abort$/;"	f
deoplete#initialize	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#initialize() abort$/;"	f
deoplete#is_enabled	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#is_enabled() abort$/;"	f
deoplete#manual_complete	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#manual_complete(...) abort$/;"	f
deoplete#mapping#_complete	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete() abort$/;"	f
deoplete#mapping#_complete_common_string	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete_common_string() abort$/;"	f
deoplete#mapping#_completefunc	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_completefunc(findstart, base) abort$/;"	f
deoplete#mapping#_dummy_complete	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_dummy_complete() abort$/;"	f
deoplete#mapping#_init	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_init() abort$/;"	f
deoplete#mapping#_restore_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_restore_completeopt() abort$/;"	f
deoplete#mapping#_rpcrequest_wrapper	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_rpcrequest_wrapper(sources) abort$/;"	f
deoplete#mapping#_set_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_set_completeopt() abort$/;"	f
deoplete#mapping#_undo_completion	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_undo_completion() abort$/;"	f
deoplete#mappings#cancel_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#cancel_popup() abort$/;"	f
deoplete#mappings#close_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#close_popup() abort$/;"	f
deoplete#mappings#manual_complete	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#manual_complete(...) abort$/;"	f
deoplete#mappings#refresh	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#refresh() abort$/;"	f
deoplete#mappings#smart_close_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#smart_close_popup() abort$/;"	f
deoplete#mappings#undo_completion	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#undo_completion() abort$/;"	f
deoplete#refresh	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#refresh() abort$/;"	f
deoplete#send_event	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#send_event(event) abort$/;"	f
deoplete#smart_close_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#smart_close_popup() abort$/;"	f
deoplete#toggle	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#toggle() abort$/;"	f
deoplete#undo_completion	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#undo_completion() abort$/;"	f
deoplete#util#convert2list	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#convert2list(expr) abort$/;"	f
deoplete#util#get_context_filetype	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_context_filetype(input, event) abort$/;"	f
deoplete#util#get_input	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_input(event) abort$/;"	f
deoplete#util#get_keyword_pattern	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_keyword_pattern(filetype, keyword_patterns) abort$/;"	f
deoplete#util#get_next_input	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_next_input(event) abort$/;"	f
deoplete#util#get_prev_event	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_prev_event() abort$/;"	f
deoplete#util#get_syn_names	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_syn_names() abort$/;"	f
deoplete#util#has_yarp	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#has_yarp() abort$/;"	f
deoplete#util#neovim_version	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#neovim_version() abort$/;"	f
deoplete#util#print_debug	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_debug(string) abort$/;"	f
deoplete#util#print_error	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_error(string, ...) abort$/;"	f
deoplete#util#print_warning	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_warning(string) abort$/;"	f
deoplete#util#rpcnotify	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#rpcnotify(event, context) abort$/;"	f
deoplete#util#split	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#split(string) abort$/;"	f
deoplete#util#string	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#string(expr) abort$/;"	f
deoplete#util#uniq	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#uniq(list) abort$/;"	f
deoplete#util#versioncmp	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#versioncmp(a, b) abort$/;"	f
deoplete#util#vimoption2python	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python(option) abort$/;"	f
deoplete#util#vimoption2python_not	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python_not(option) abort$/;"	f
deoplete_auto_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_auto_completion_begin(context):$/;"	f
deoplete_enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_enable_logging(context):$/;"	f
deoplete_init	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_init():$/;"	f
deoplete_manual_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_manual_completion_begin(context):$/;"	f
deoplete_on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_on_event(context):$/;"	f
deprecate	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var internalUtil = {$/;"	p	class:internalUtil
deprecate	plugged/tern_for_vim/node_modules/util-deprecate/browser.js	/^function deprecate (fn, msg) {$/;"	f
deprecated	plugged/tern_for_vim/node_modules/util-deprecate/browser.js	/^  function deprecated() {$/;"	f	function:deprecate
description	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        description='Download the latest KaoriYa Vim from the GitHub release')$/;"	v
destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.destroy = destroyImpl.destroy;$/;"	m	class:Readable
destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.destroy = destroyImpl.destroy;$/;"	m	class:Writable
destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/destroy.js	/^function destroy(err, cb) {$/;"	c
destroy	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/destroy.js	/^module.exports = {$/;"	p	class:module.exports
destroyImpl	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var destroyImpl = require('.\/internal\/streams\/destroy');$/;"	v
destroyImpl	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var destroyImpl = require('.\/internal\/streams\/destroy');$/;"	v
detain_winsock	plugged/vimproc.vim/src/proc_w32.c	/^detain_winsock()$/;"	f	file:
did_javascript_syn_inits	plugged/vim-javascript/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-javascript/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
diff	autoload/plug.vim	/^function! s:diff()$/;"	f
diffidx	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
directSourceFile	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  sourceFile: null,$/;"	p	class:getLineInfo.defaultOptions
directSourceFile	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  sourceFile: null,$/;"	p	class:from
directory	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^		module: false,$/;"	p	class:Resolver.part
directoryRegExp	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^var directoryRegExp = \/[\\\/\\\\]$\/i;$/;"	v
dirname	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:dirname(path) abort$/;"	f
dirname	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:dirname(path) abort$/;"	f
dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
disable	plugged/neomake/plugin/neomake.vim	/^function! s:disable(scope, disabled) abort$/;"	f
disabled_for_ft	plugged/neomake/autoload/neomake/configure.vim	/^function! s:disabled_for_ft(bufnr, ...) abort$/;"	f
display	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^        let display = display.part.text$/;"	v
display	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^      let display = ''$/;"	v
display_status	plugged/neomake/plugin/neomake.vim	/^function! s:display_status() abort$/;"	f
display_texts	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^    let display_texts = []$/;"	v
do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
doResolve	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.doResolve = function doResolve(type, request, message, callback) {$/;"	m	class:Resolver
doWrite	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function doWrite(stream, state, writev, len, chunk, encoding, cb) {$/;"	f
do_clean_make_info	plugged/neomake/autoload/neomake.vim	/^function! s:do_clean_make_info(make_info) abort$/;"	f
do_postponed_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! s:do_postponed_automake() abort$/;"	f
doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
doc	plugged/tern_for_vim/node_modules/tern/test/cases/node/main.js	/^var doc = require("mod1\/doc");$/;"	v
done	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^function done(stream, er, data) {$/;"	f
doubleSlashNixRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var doubleSlashNixRegExp = \/\\\/+\/g;$/;"	v
doubleSlashWinRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var doubleSlashWinRegExp = \/\\\\+\/g;$/;"	v
dp_main	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^dp_main = os.path.join(os.path.dirname(__file__), 'dp_main.py')$/;"	v
dstring	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dummyIdent	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.dummyIdent = function dummyIdent () {$/;"	m	class:LooseParser
e_which	plugged/tern_for_vim/node_modules/tern/test/cases/browser.js	/^var e_which;$/;"	v
e_which	plugged/tern_for_vim/node_modules/tern/test/cases/hint_browser.js	/^var e_which;$/;"	v
each	plugged/tern_for_vim/node_modules/tern/test/cases/generic_each.js	/^var each = function(obj, iterator, context) {$/;"	f
ecmaVersion	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var defaultOptions = {$/;"	p	class:getLineInfo.defaultOptions
ecmaVersion	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^export const defaultOptions = {$/;"	p	class:from
embrace	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function embrace(str) {$/;"	f
emitErrorNT	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/destroy.js	/^function emitErrorNT(self, err) {$/;"	f
emitReadable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function emitReadable(stream) {$/;"	f
emitReadable_	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function emitReadable_(stream) {$/;"	f
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def enable_logging(self, context):$/;"	m	class:DeopleteHandlers
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def enable_logging(self):$/;"	m	class:Deoplete
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def enable_logging(self):$/;"	m	class:Parent
encode	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
encode_list	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:encode_list(arr) abort$/;"	f
encode_size	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:encode_size(n) abort$/;"	f
encoding	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^      chunk: chunk,$/;"	p	class:state.lastBufferedRequest
end	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^      if (replace === true) replace = {start: pos, end: pos, type: tokTypes.name, value: "✖"}$/;"	p	class:this$1.resetTo
end	plugged/tern_for_vim/node_modules/acorn/src/loose/tokenize.js	/^      if (replace === true) replace = {start: pos, end: pos, type: tt.name, value: "✖"}$/;"	p	class:this.resetTo
end	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.end = function (chunk, encoding, cb) {$/;"	m	class:Writable
end	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^StringDecoder.prototype.end = utf8End;$/;"	m	class:StringDecoder
endReadable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function endReadable(stream) {$/;"	f
endReadableNT	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function endReadableNT(state, stream) {$/;"	f
endWritable	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function endWritable(stream, state, cb) {$/;"	f
ends_with	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
enqueue	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^function enqueue (elem) {$/;"	f	function:function
ensureDirectories	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function ensureDirectories(path) {$/;"	f
ensureTick	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^Storage.prototype.ensureTick = function() {$/;"	m	class:Storage
environments	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var nodeContext = {$/;"	p	class:nodeContext
eq	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var eq = function(a, b, aStack, bStack) {$/;"	f
eq	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^function eq(a, b, msg) { if (a != b) fail(msg || a + " != " + b); }$/;"	f
err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
err	plugged/tern_for_vim/node_modules/errno/custom.js	/^  }$/;"	c
error	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def error(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
error	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error(vim, expr):$/;"	f
error	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:error(msg)$/;"	f
error	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! s:error(msg)$/;"	f
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_tb(vim, msg):$/;"	f
error_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_vim(vim, msg):$/;"	f
errors	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^var errors = require("errno");$/;"	v
esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
escClose	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var escClose = '\\0CLOSE'+Math.random()+'\\0';$/;"	v
escComma	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var escComma = '\\0COMMA'+Math.random()+'\\0';$/;"	v
escOpen	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var escOpen = '\\0OPEN'+Math.random()+'\\0';$/;"	v
escPeriod	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var escPeriod = '\\0PERIOD'+Math.random()+'\\0';$/;"	v
escSlash	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^var escSlash = '\\0SLASH'+Math.random()+'\\0';$/;"	v
escape	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def escape(expr):$/;"	f
escape	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var entityMap = {$/;"	p	class:entityMap
escape	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var entityRegexes = {$/;"	p	class:entityRegexes
escapeBraces	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function escapeBraces(str) {$/;"	f
escape_file_searching	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
evaluate	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  _.templateSettings = {$/;"	p	class:_.templateSettings
events	plugged/vimproc.vim/src/fakepoll.h	/^    short events;                   \/* events of interest on fd *\/$/;"	m	struct:pollfd
exception	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def exception(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
exists	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.exists = function(path, callback) {$/;"	m	class:MemoryFileSystem
exists	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:exists(name) abort dict$/;"	f
existsSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.existsSync = function(_path) {$/;"	m	class:MemoryFileSystem
exit_handler	plugged/neomake/autoload/neomake.vim	/^function! s:exit_handler(jobinfo, data) abort$/;"	f
expand	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def expand(path):$/;"	f
expand	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function expand(str, isTop) {$/;"	f
expandTop	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function expandTop(str) {$/;"	f
expect	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.expect = function expect (type) {$/;"	m	class:LooseParser
export	plugged/tern_for_vim/node_modules/acorn/src/util.js	/^export function isArray(obj) {$/;"	c
exports.a	plugged/tern_for_vim/node_modules/tern/test/condense/node_export_function_a.js	/^exports.a = function(){};$/;"	f
exports.addFile	plugged/tern_for_vim/node_modules/tern/test/util.js	/^var files = 0, tests = 0, failed = 0;$/;"	f
exports.addTest	plugged/tern_for_vim/node_modules/tern/test/util.js	/^exports.addFile = function() { ++files; };$/;"	f
exports.b	plugged/tern_for_vim/node_modules/tern/test/cases/node_exports.js	/^exports.a = 10;$/;"	f
exports.b	plugged/tern_for_vim/node_modules/tern/test/condense/node_simple.js	/^exports.a = 10;$/;"	f
exports.createResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^var LogInfoPlugin = require(".\/LogInfoPlugin");$/;"	f
exports.failure	plugged/tern_for_vim/node_modules/tern/test/util.js	/^exports.addTest = function() { ++tests; };$/;"	f
exports.hasFailed	plugged/tern_for_vim/node_modules/tern/test/util.js	/^};$/;"	f
exports.hello	plugged/tern_for_vim/node_modules/tern/test/cases/node/localfile.js	/^exports.hello = function() { return 10; };$/;"	f
exports.realpath	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^};$/;"	f
exports.realpathSync	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^}$/;"	f
exports.resolve	plugged/tern_for_vim/node_modules/tern/test/util.js	/^var projectDir = path.resolve(__dirname, "..");$/;"	f
exports.runTests	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^}$/;"	f
exports.runTests	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^function eq(a, b, msg) { if (a != b) fail(msg || a + " != " + b); }$/;"	f
exports.runTests	plugged/tern_for_vim/node_modules/tern/test/reload.js	/^}$/;"	f
exports.runTests	plugged/tern_for_vim/node_modules/tern/test/timeout.js	/^var fs = require("fs");$/;"	f
exports.subdepFunc	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/node_modules/subdep1/subdep1.js	/^exports.subdepFunc = function(){};$/;"	f
ext	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^function ext (a, b) {$/;"	f
extend	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^Parser.prototype.extend = function extend (name, f) {$/;"	m	class:Parser
extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
f	plugged/tern_for_vim/node_modules/once/once.js	/^  var f = function () {$/;"	f	function:function.onceStrict
f	plugged/tern_for_vim/node_modules/once/once.js	/^  var f = function () {$/;"	f	function:var
f	plugged/tern_for_vim/node_modules/tern/test/cases/bind.js	/^function f(a, b, c, d) { return a + b + c + d; }$/;"	f
f	plugged/tern_for_vim/node_modules/tern/test/cases/infinite-expansion.js	/^var f = function(n) {$/;"	f
f1	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/doc.js	/^module.exports = {$/;"	m	class:module.exports
f2	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var f2 = function (arr3) {arr3. }("foo bar baz".split(" ")); \/\/+ pop, ... @32$/;"	f
f3	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var f3 = function (arr4) {arr4. }("test string"); \/\/+ charAt, ... @32$/;"	f	function:f2
fail	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^function fail(msg) { throw curTest + ": " + msg; }$/;"	f
falseFn	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function falseFn() { return false; }$/;"	f
fastFilter	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^function fastFilter(fun\/*, thisArg*\/) {$/;"	f
fatal	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    fatal = critical$/;"	v	class:LoggingMixin
fd	plugged/vimproc.vim/src/fakepoll.h	/^    int fd;                         \/* file desc to poll *\/$/;"	m	struct:pollfd
fd_set_nonblock	plugged/vimproc.vim/src/proc.c	/^fd_set_nonblock(int fd)$/;"	f	file:
fdopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen(fd, f_close, f_read, f_write) abort "{{{$/;"	f
fdopen_pgroup	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pgroup(proc, fd, f_close, f_read, f_write) abort "{{{$/;"	f
fdopen_pipes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pipes(fd, f_close, f_read, f_write) abort "{{{$/;"	f
fdopen_pty	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pty(fd_stdin, fd_stdout, f_close, f_read, f_write) abort "{{{$/;"	f
file	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^		directory: false,$/;"	p	class:Resolver.part
file	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^var file = fs.readFileSync(util.resolve("test\/data\/large.js"), "utf8");$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule_writing.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsCompletions.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^    let file = b:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/definitionTest.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsGetCodeFixes.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/codeFixTest.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsGetSupportedCodeFixes.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule_writing.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule_writing.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsGeterrForProject.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/samplePrjs\/errorPrj\/main.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsNavBar.spec.vim	/^    let file = substitute(s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule.ts'), '\\\\', '\/', 'g')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsNavto.spec.vim	/^    let file = substitute(s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule.ts'), '\\\\', '\/', 'g')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsProjectInfo.spec.vim	/^    let file = substitute(s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/samplePrjs\/prj001\/main.ts'), '\\\\', '\/', 'g')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsQuickinfo.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/referencesTestA.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsReload.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/SimpleModule.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/renameTest.ts')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^    let file = substitute(s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/signatureHelpTest_overload.ts'), '\\\\', '\/', 'g')$/;"	v
file	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^    let file = substitute(s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/signatureHelpTest_writing.ts'), '\\\\', '\/', 'g')$/;"	v
fileA	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^    let fileA = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/referencesTestA.ts')$/;"	v
fileA	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let fileA = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/referencesTestA.ts')$/;"	v
fileB	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^    let fileB = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/referencesTestB.ts')$/;"	v
fileB	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let fileB = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/referencesTestB.ts')$/;"	v
files	plugged/tern_for_vim/node_modules/tern/test/util.js	/^var files = 0, tests = 0, failed = 0;$/;"	v
files	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^    let files = [file]$/;"	v
fillLast	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^StringDecoder.prototype.fillLast = function (buf) {$/;"	m	class:StringDecoder
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def filter(self, context):$/;"	m	class:Base
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def filter(self, record):$/;"	m	class:DeopleteLogFilter
filter_py_warning	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! s:filter_py_warning(v) abort$/;"	f
finalize	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:finalize() abort$/;"	f
find	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findDoc	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^Project.prototype = {$/;"	m	class:Project
findDubRoot	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! s:findDubRoot() abort$/;"	f
findExportingFileForModule	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:findExportingFileForModule(module, current_module_file, module_directory_path)$/;"	f
findFileInParent	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:findFileInParent(what, where) abort " {{{2$/;"	f
findNodeAfter	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function findNodeAfter(node, pos, test, base, state) {$/;"	f	function:Found
findNodeAround	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function findNodeAround(node, pos, test, base, state) {$/;"	f	function:Found
findNodeAt	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function findNodeAt(node, start, end, test, base, state) {$/;"	f	function:Found
findNodeBefore	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function findNodeBefore(node, pos, test, base, state) {$/;"	f	function:Found
find_index	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
find_rplugins	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def find_rplugins(context, source):$/;"	f
finddocs	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  jumptodef: function() { project.server.jumpToDef(project.editor) },$/;"	m	class:commands
findtype	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  finddocs: function() { project.server.showDocs(project.editor) },$/;"	m	class:commands
finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^  this.finish = function () {$/;"	m	class:CorkedRequest
finishMaybe	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function finishMaybe(stream, state) {$/;"	f
finishNode	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.finishNode = function finishNode (node, type) {$/;"	m	class:LooseParser
finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
finished	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^Storage.prototype.finished = function(name) {$/;"	m	class:Storage
flatten	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var flatten = function(input, shallow, output) {$/;"	f
flatten	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flow	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function flow(stream) {$/;"	f
flush	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:flush()$/;"	f
fn2	plugged/tern_for_vim/node_modules/tern/test/cases/autothis.js	/^Bar.prototype.fn2 = function() {$/;"	m	class:Bar
fn2	plugged/tern_for_vim/node_modules/tern/test/cases/autothis.js	/^Date.prototype.fn2 = Bar.prototype.fn2;$/;"	m	class:Date
focus	plugged/tern_for_vim/node_modules/tern/test/cases/hint-objlit.js	/^var poison = {focus: 1, blah: 2, nothing: 3};$/;"	p	class:poison
foldl	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foo	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var foo = 10;$/;"	v
foo	plugged/tern_for_vim/node_modules/tern/test/cases/global_this.js	/^var foo = 10;$/;"	v
foo	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var base = {foo: 10, bar: 20, foo2: { a: 10, b: "test" } };$/;"	p	class:friend.friend.firs.firstname.friend.ch.changeName.changeName
foo	plugged/tern_for_vim/node_modules/tern/test/cases/indirect_class.js	/^var sup = {$/;"	m	class:sup
foo	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function foo(a, b) { return hohoho(); }$/;"	f
foo	plugged/tern_for_vim/node_modules/tern/test/cases/object_create.js	/^var base = {foo: 10, bar: 20};$/;"	p	class:base
foo	plugged/tern_for_vim/node_modules/tern/test/cases/order_of_definition.js	/^var foo = {};$/;"	v
foo	plugged/tern_for_vim/node_modules/tern/test/cases/replace_bogus_prop.js	/^Type.prototype.foo = "hi";$/;"	m	class:Type
foo	plugged/tern_for_vim/node_modules/tern/test/condense/add_to_old.js	/^Element.prototype.foo = new Thing;$/;"	m	class:Element
foo	plugged/tern_for_vim/node_modules/tern/test/condense/basic.js	/^var y = {$/;"	p	class:y
foo	plugged/tern_for_vim/node_modules/tern/test/condense/function_prop.js	/^foo = function() {};$/;"	f
foo2	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var base = {foo: 10, bar: 20, foo2: { a: 10, b: "test" } };$/;"	p	class:friend.friend.firs.firstname.friend.ch.changeName.changeName
foodMeApp	plugged/tern_for_vim/node_modules/tern/test/cases/angular_service.js	/^var foodMeApp = angular.module('foodMeApp');$/;"	v
forEach	plugged/tern_for_vim/node_modules/tern/test/cases/generic_each.js	/^  if (Array.prototype.forEach && obj.forEach === Array.prototype.forEach) {$/;"	m
forEachBail	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordExtensionsPlugin.js	/^var forEachBail = require(".\/forEachBail");$/;"	v
forEachBail	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js	/^var forEachBail = require(".\/forEachBail");$/;"	v
forEachBail	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js	/^var forEachBail = require(".\/forEachBail");$/;"	v
forEachBail	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SymlinkPlugin.js	/^var forEachBail = require(".\/forEachBail");$/;"	v
forEachBail	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/forEachBail.js	/^module.exports = function forEachBail(array, iterator, callback) {$/;"	f
forkpty	plugged/vimproc.vim/src/ptytty.c	/^forkpty(int *amaster, char *name,$/;"	f
format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
formatter._substitute	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:formatter._substitute(m) abort$/;"	f
formatter.format	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:formatter.format(f, args) abort$/;"	f
formatter.running_job_names	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:formatter.running_job_names() abort$/;"	f
fromList	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function fromList(n, state) {$/;"	f
fromListPartial	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function fromListPartial(n, list, hasStrings) {$/;"	f
fs	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^var fs = require("graceful-fs");$/;"	v
fs	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^var fs = require("graceful-fs");$/;"	v
fs	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^var fs = require('fs');$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^var fs = require('fs');$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/cases/node/main.js	/^var fs = require("fs"), crypto = require("crypto"), tls = require("tls"), util = require("util");$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^var fs = require("fs"), path = require("path");$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var fs = require("fs");$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^var fs = require("fs");$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var fs = require("fs"), path = require("path");$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/timeout.js	/^var fs = require("fs");$/;"	v
fs	plugged/tern_for_vim/node_modules/tern/test/util.js	/^var fs = require("fs"), path = require("path");$/;"	v
fs.lchmod	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^  if (!fs.lchmod) {$/;"	f
fs.lchmod	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function patchLchmod (fs) {$/;"	f	function:function
fs.lchmodSync	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^    }$/;"	f
fs.lchown	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^  if (!fs.lchown) {$/;"	f
fs.lchownSync	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^    }$/;"	f
fs.lutimes	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^  if (constants.hasOwnProperty("O_SYMLINK")) {$/;"	f	function:patchLchmod
fs.lutimes	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^  } else {$/;"	f
fs.lutimesSync	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^    }$/;"	f
full_buffer	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def full_buffer(self):$/;"	m	class:Source
func	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^  name: 'foo',$/;"	m	class:obj
func-generate-fixture	plugged/neomake/Makefile	/^define func-generate-fixture$/;"	m
func-run-vim	plugged/neomake/Makefile	/^define func-run-vim$/;"	m
funcref	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:funcref(funcname) abort$/;"	f
functionBogus	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function functionBogus(a) { return hohoho(); }$/;"	f
fuzzy_escape	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def fuzzy_escape(string, camelcase):$/;"	f
g:ackprg	init.vim	/^let g:ackprg = 'ag --vimgrep'$/;"	v
g:airline#extensions#tabline#enabled	init.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#tab_nr_type	init.vim	/^let g:airline#extensions#tabline#tab_nr_type = 1$/;"	v
g:airline_section_x	init.vim	/^let g:airline_section_x = '%{PencilMode()}'$/;"	v
g:deoplete#auto_complete_start_length	init.vim	/^let g:deoplete#auto_complete_start_length = 1$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-ternjs/tests/ternjs-deoplete-conflict.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-ternjs/tests/ternjs-deoplete.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#enable_at_startup	init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-ternjs/tests/ternjs-deoplete-conflict.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-ternjs/tests/ternjs-deoplete.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_debug	plugged/deoplete-ternjs/tests/ternjs-deoplete.vim	/^let g:deoplete#enable_debug=1$/;"	v
g:deoplete#omni#functions	init.vim	/^let g:deoplete#omni#functions = {}$/;"	v
g:deoplete#omni#functions	init.vim	/^let g:deoplete#omni#functions.javascript = ['tern#Complete', 'jspc#omni']$/;"	v
g:deoplete#sources#ternjs#tern_bin	plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim	/^let g:deoplete#sources#ternjs#tern_bin = get(g:, 'deoplete#sources#ternjs#tern_bin', 'tern') $/;"	v
g:doesnotexist_maker	plugged/neomake/tests/include/init.vim	/^let g:doesnotexist_maker = {'exe': 'doesnotexist'}$/;"	v
g:entry_maker	plugged/neomake/tests/include/init.vim	/^let g:entry_maker = {'name': 'entry_maker'}$/;"	v
g:error_maker	plugged/neomake/tests/include/init.vim	/^let g:error_maker = NeomakeTestsCommandMaker('error-maker', 'echo error; false')$/;"	v
g:error_maker	plugged/neomake/tests/include/init.vim	/^let g:error_maker.errorformat = '%E%m'$/;"	v
g:go_auto_type_info	init.vim	/^let g:go_auto_type_info = 1$/;"	v
g:go_fmt_command	init.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_fmt_experimental	init.vim	/^let g:go_fmt_experimental = 1$/;"	v
g:go_gocode_unimported_packages	init.vim	/^let g:go_gocode_unimported_packages = 1$/;"	v
g:go_highlight_chan_whitespace_error	init.vim	/^let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	init.vim	/^let g:go_highlight_extra_types= 1$/;"	v
g:go_highlight_fields	init.vim	/^let g:go_highlight_fields= 1$/;"	v
g:go_highlight_functions	init.vim	/^let g:go_highlight_functions= 1$/;"	v
g:go_highlight_generate_tags	init.vim	/^let g:go_highlight_generate_tags = 1$/;"	v
g:go_highlight_methods	init.vim	/^let g:go_highlight_methods= 1$/;"	v
g:go_highlight_operators	init.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_types	init.vim	/^let g:go_highlight_types= 1$/;"	v
g:go_list_type	init.vim	/^let g:go_list_type = "quickfix"$/;"	v
g:go_metalinter_autosave	init.vim	/^let g:go_metalinter_autosave = 1$/;"	v
g:go_term_height	init.vim	/^let g:go_term_height = 8$/;"	v
g:go_term_mode	init.vim	/^let g:go_term_mode = "split"$/;"	v
g:gutentags_add_default_project_roots	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:indent_guides_auto_colors	init.vim	/^let g:indent_guides_auto_colors = 1$/;"	v
g:indent_guides_guide_size	init.vim	/^let g:indent_guides_guide_size = 2$/;"	v
g:indent_guides_start_level	init.vim	/^let g:indent_guides_start_level = 2$/;"	v
g:js_fmt_autosave	init.vim	/^let g:js_fmt_autosave = 0$/;"	v
g:js_fmt_command	init.vim	/^let g:js_fmt_command = "jsfmt"$/;"	v
g:lexical#dictionary	init.vim	/^let g:lexical#dictionary    = ['\/usr\/share\/dict\/words']$/;"	v
g:lexical#spell	init.vim	/^let g:lexical#spell         = 1$/;"	v
g:lexical#thesaurus	init.vim	/^let g:lexical#thesaurus     = ['~\/.config\/nvim\/thesaurus\/MobyThesaurus.txt']$/;"	v
g:lexical#thesaurus_key	init.vim	/^let g:lexical#thesaurus_key = '<leader>T'$/;"	v
g:loaded_deoplete	plugged/deoplete.nvim/plugin/deoplete.vim	/^let g:loaded_deoplete = 1$/;"	v
g:loaded_deoplete_ternjs	plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim	/^let g:loaded_deoplete_ternjs = 1$/;"	v
g:loaded_gutentags	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_neomake	plugged/neomake/plugin/neomake.vim	/^let g:loaded_neomake = 1$/;"	v
g:loaded_neomake_java_javac_maker	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:loaded_neomake_java_javac_maker = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_syntastic_tsuquyomi_syntax_checker	plugged/tsuquyomi/syntax_checkers/typescript/tsuquyomi.vim	/^let g:loaded_syntastic_tsuquyomi_syntax_checker = 1$/;"	v
g:loaded_tsuquyomi	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:loaded_tsuquyomi = 1$/;"	v
g:loaded_vimproc	plugged/vimproc.vim/plugin/vimproc.vim	/^let g:loaded_vimproc = 1$/;"	v
g:neomake	plugged/neomake/autoload/neomake/configure.vim	/^let g:neomake = get(g:, 'neomake', {})$/;"	v
g:neomake	plugged/neomake/autoload/neomake/configure.vim	/^let g:neomake.automake = get(g:neomake, 'automake', {})$/;"	v
g:neomake#compat#dev_null	plugged/neomake/autoload/neomake/compat.vim	/^    let g:neomake#compat#dev_null = 'NUL'$/;"	v
g:neomake#compat#dev_null	plugged/neomake/autoload/neomake/compat.vim	/^    let g:neomake#compat#dev_null = '\/dev\/null'$/;"	v
g:neomake#config#undefined	plugged/neomake/autoload/neomake/config.vim	/^let g:neomake#config#undefined = {}$/;"	v
g:neomake#core#command_maker_base	plugged/neomake/autoload/neomake/core.vim	/^let g:neomake#core#command_maker_base = {}$/;"	v
g:neomake#jobinfo#base	plugged/neomake/autoload/neomake/jobinfo.vim	/^let g:neomake#jobinfo#base = s:jobinfo_base$/;"	v
g:neomake#makers#ft#c#project_root_files	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^let g:neomake#makers#ft#c#project_root_files = ['configure', 'CMakeLists.txt']$/;"	v
g:neomake#statusline#_s	plugged/neomake/autoload/neomake/statusline.vim	/^let g:neomake#statusline#_s = s:$/;"	v
g:neomake_css_enabled_makers	init.vim	/^let g:neomake_css_enabled_makers = ['csslint']$/;"	v
g:neomake_erlang_erlc_target_dir	plugged/neomake/autoload/neomake/makers/ft/erlang.vim	/^    let g:neomake_erlang_erlc_target_dir = tempname()$/;"	v
g:neomake_html_enabled_makers	init.vim	/^let g:neomake_html_enabled_makers = ['w3']$/;"	v
g:neomake_java_ant_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_ant_executable =$/;"	v
g:neomake_java_checker_home	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_checker_home = fnamemodify(expand('<sfile>'), ':p:h:gs?\\\\?\/?')$/;"	v
g:neomake_java_checkstyle_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_checkstyle_executable =$/;"	v
g:neomake_java_checkstyle_xml	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_checkstyle_xml =$/;"	v
g:neomake_java_gradle_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_gradle_executable =$/;"	v
g:neomake_java_javac_ant_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_ant_classpath =$/;"	v
g:neomake_java_javac_ant_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_ant_ftime =$/;"	v
g:neomake_java_javac_autoload_ant_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_ant_classpath =$/;"	v
g:neomake_java_javac_autoload_eclipse_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_eclipse_classpath =$/;"	v
g:neomake_java_javac_autoload_gradle_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_gradle_classpath =$/;"	v
g:neomake_java_javac_autoload_maven_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_maven_classpath =$/;"	v
g:neomake_java_javac_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_classpath =$/;"	v
g:neomake_java_javac_delete_output	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_delete_output =$/;"	v
g:neomake_java_javac_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_executable =$/;"	v
g:neomake_java_javac_gradle_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_gradle_classpath =$/;"	v
g:neomake_java_javac_gradle_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_gradle_ftime =$/;"	v
g:neomake_java_javac_maven_pom_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_classpath =$/;"	v
g:neomake_java_javac_maven_pom_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_ftime =$/;"	v
g:neomake_java_javac_maven_pom_properties	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_properties = {}$/;"	v
g:neomake_java_javac_maven_pom_tags	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:neomake_java_javac_options	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_options =$/;"	v
g:neomake_java_javac_outputdir	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_outputdir =$/;"	v
g:neomake_java_maven_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_maven_executable =$/;"	v
g:neomake_java_maven_options	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_maven_options =$/;"	v
g:neomake_javascript_enabled_makers	init.vim	/^let g:neomake_javascript_enabled_makers = ['eslint']$/;"	v
g:neomake_open_list	init.vim	/^let g:neomake_open_list = 2$/;"	v
g:neomake_place_signs	plugged/neomake/plugin/neomake.vim	/^    let g:neomake_place_signs = 0$/;"	v
g:neomake_place_signs	plugged/neomake/plugin/neomake.vim	/^    let g:neomake_place_signs = get(g:, 'neomake_place_signs', 1)$/;"	v
g:neomake_test_countschanged	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_countschanged = []$/;"	v
g:neomake_test_inc_maker	plugged/neomake/tests/include/init.vim	/^let g:neomake_test_inc_maker = {$/;"	v
g:neomake_test_inc_maker_counter	plugged/neomake/tests/include/init.vim	/^let g:neomake_test_inc_maker_counter = 0$/;"	v
g:neomake_test_jobfinished	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_jobfinished = []$/;"	v
g:nvim_typescript#completion_mark	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#completion_mark =$/;"	v
g:nvim_typescript#debug_enabled	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#debug_enabled =$/;"	v
g:nvim_typescript#debug_settings	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#debug_settings =$/;"	v
g:nvim_typescript#default_mappings	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#default_mappings =$/;"	v
g:nvim_typescript#follow_dir_change	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#follow_dir_change =$/;"	v
g:nvim_typescript#javascript_support	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#javascript_support =$/;"	v
g:nvim_typescript#kind_symbols	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#kind_symbols =$/;"	v
g:nvim_typescript#loaded	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#loaded = 1$/;"	v
g:nvim_typescript#loc_list_item_truncate_after	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#loc_list_item_truncate_after =$/;"	v
g:nvim_typescript#max_completion_detail	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#max_completion_detail =$/;"	v
g:nvim_typescript#server_options	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#server_options =$/;"	v
g:nvim_typescript#server_path	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#server_path =$/;"	v
g:nvim_typescript#signature_complete	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#signature_complete =$/;"	v
g:nvim_typescript#ts_version	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#ts_version = 'typescript@2.4.0'$/;"	v
g:nvim_typescript#tsimport#template	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#tsimport#template =$/;"	v
g:nvim_typescript#type_info_on_hold	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#type_info_on_hold =$/;"	v
g:nvim_typescript#version	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#version = '1.4.0'$/;"	v
g:nvim_typescript#vue_support	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let g:nvim_typescript#vue_support =$/;"	v
g:pencil#mode_indicators	init.vim	/^let g:pencil#mode_indicators = {'hard': '␍', 'auto': 'ª', 'soft': '⤸', 'off': '',}$/;"	v
g:pencil#textwidth	init.vim	/^let g:pencil#textwidth = 74$/;"	v
g:pencil#wrapModeDefault	init.vim	/^let g:pencil#wrapModeDefault = 'hard'$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:python3_host_prog	init.vim	/^let g:python3_host_prog = '\/usr\/bin\/python3'$/;"	v
g:python3_host_skip_check	init.vim	/^let g:python3_host_skip_check = 1$/;"	v
g:python_host_prog	init.vim	/^let g:python_host_prog = '\/usr\/bin\/python'$/;"	v
g:sleep_efm_maker	plugged/neomake/tests/include/init.vim	/^let g:sleep_efm_maker = {$/;"	v
g:sleep_maker	plugged/neomake/tests/include/init.vim	/^let g:sleep_maker = NeomakeTestsCommandMaker('sleep-maker', 'sleep .05; echo slept')$/;"	v
g:success_maker	plugged/neomake/tests/include/init.vim	/^let g:success_maker = NeomakeTestsCommandMaker('success-maker', 'echo success')$/;"	v
g:success_maker	plugged/neomake/tests/include/init.vim	/^let g:success_maker.errorformat = '%-Gsuccess'$/;"	v
g:tern#arguments	init.vim	/^let g:tern#arguments = ["--persistent"]$/;"	v
g:tern#arguments	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern#arguments = []$/;"	v
g:tern#command	init.vim	/^let g:tern#command = ["ternjs"]$/;"	v
g:tern#command	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern#command = ["node", expand('<sfile>:h') . '\/..\/node_modules\/tern\/bin\/tern', '--no-port-file']$/;"	v
g:tern#filetypes	init.vim	/^let g:tern#filetypes = [ 'jsx', 'pug', 'vue', 'js', 'html' ]$/;"	v
g:tern#filetypes	plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim	/^let g:tern#filetypes = [$/;"	v
g:tern_map_keys	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_map_keys = 0$/;"	v
g:tern_map_prefix	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_map_prefix = '<LocalLeader>'$/;"	v
g:tern_request_query	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_request_query = {}$/;"	v
g:tern_request_timeout	init.vim	/^let g:tern_request_timeout = 1$/;"	v
g:tern_request_timeout	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_request_timeout = 1$/;"	v
g:tern_set_omni_function	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_set_omni_function = 1$/;"	v
g:tern_show_argument_hints	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_show_argument_hints = 'no'$/;"	v
g:tern_show_loc_after_refs	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_show_loc_after_refs = 1$/;"	v
g:tern_show_loc_after_rename	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_show_loc_after_rename = 1$/;"	v
g:tern_show_signature_in_pum	init.vim	/^let g:tern_show_signature_in_pum = 0$/;"	v
g:tern_show_signature_in_pum	plugged/tern_for_vim/autoload/tern.vim	/^  let g:tern_show_signature_in_pum = 0$/;"	v
g:tex_flavour	init.vim	/^let g:tex_flavour = "context"$/;"	v
g:true_maker	plugged/neomake/tests/include/init.vim	/^let g:true_maker = NeomakeTestsCommandMaker('true-maker', 'true')$/;"	v
g:tsuquyomi_auto_open	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_auto_open =$/;"	v
g:tsuquyomi_baseurl_import_path	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_baseurl_import_path = $/;"	v
g:tsuquyomi_case_sensitive_imports	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_case_sensitive_imports =$/;"	v
g:tsuquyomi_completion_case_sensitive	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_completion_case_sensitive = $/;"	v
g:tsuquyomi_completion_chunk_size	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_completion_chunk_size = $/;"	v
g:tsuquyomi_completion_detail	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_completion_detail = $/;"	v
g:tsuquyomi_completion_preview	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_completion_preview = $/;"	v
g:tsuquyomi_debug	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_debug = $/;"	v
g:tsuquyomi_definition_split	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_definition_split =$/;"	v
g:tsuquyomi_disable_quickfix	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_disable_quickfix =$/;"	v
g:tsuquyomi_ignore_missing_modules	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_ignore_missing_modules =$/;"	v
g:tsuquyomi_import_curly_spacing	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_import_curly_spacing =$/;"	v
g:tsuquyomi_javascript_support	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_javascript_support =$/;"	v
g:tsuquyomi_locale	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_locale =$/;"	v
g:tsuquyomi_nodejs_path	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_nodejs_path = $/;"	v
g:tsuquyomi_save_onrename	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_save_onrename =$/;"	v
g:tsuquyomi_search_term_min_length	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_search_term_min_length =$/;"	v
g:tsuquyomi_semicolon_import	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_semicolon_import =$/;"	v
g:tsuquyomi_shortest_import_path	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_shortest_import_path = $/;"	v
g:tsuquyomi_single_quote_import	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_single_quote_import =$/;"	v
g:tsuquyomi_tsserver_debug	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_tsserver_debug = $/;"	v
g:tsuquyomi_tsserver_path	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_tsserver_path =$/;"	v
g:tsuquyomi_use_dev_node_module	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_use_dev_node_module =$/;"	v
g:tsuquyomi_use_local_typescript	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_use_local_typescript =$/;"	v
g:tsuquyomi_use_vimproc	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_use_vimproc =$/;"	v
g:tsuquyomi_waittime_after_open	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let g:tsuquyomi_waittime_after_open = $/;"	v
g:vimproc#dll_path	plugged/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc#dll_path =$/;"	v
g:vimproc#lexer#token_type	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let g:vimproc#lexer#token_type = {$/;"	v
g:vimproc_password_pattern	plugged/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc_password_pattern = g:vimproc#password_pattern$/;"	v
ga	init.vim	/^nmap ga <Plug>(EasyAlign)$/;"	m
garbage_collect	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:garbage_collect(is_force) abort "{{{$/;"	f
gatherTags	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function gatherTags(posts) {$/;"	f
gather_candidates	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-typescript/rplugin/python3/denite/source/TSDocumentSymbol.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-typescript/rplugin/python3/denite/source/TSProjectFiles.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-typescript/rplugin/python3/denite/source/TSWorkspaceSymbol.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-typescript/rplugin/python3/deoplete/sources/typescript.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def gather_candidates(self, context):$/;"	m	class:Base
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
generate	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function generate() {$/;"	f
get	plugged/neomake/autoload/neomake/config.vim	/^function! s:get(dict, parts, prefixes) abort$/;"	f
getBaseUrlImportPath	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:getBaseUrlImportPath(module_absolute_path)$/;"	f
getBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^WritableState.prototype.getBuffer = function getBuffer() {$/;"	m	class:WritableState
getCacheId	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js	/^function getCacheId(request) {$/;"	f
getCodeFixesAtCursor	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getCodeFixesAtCursor(args) {$/;"	f
getCompletionDetails	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getCompletionDetails(args) {$/;"	f
getCompletions	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getCompletions(args) {$/;"	f
getCurrentImports	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function getCurrentImports(client, inspectedFile) {$/;"	f
getDef	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getDef(args) {$/;"	f
getDefs	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^function getDefs(text) {$/;"	f
getDocumentSymbols	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getDocumentSymbols(args) {$/;"	f
getEvent	plugged/deoplete-ternjs/tests/test.js	/^    },$/;"	m	class:MYAPP.event
getExtensions	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function getExtensions(context, configuration) {$/;"	f
getField	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js	/^function getField(content, field) {$/;"	f
getField	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function getField(context, configuration, field) {$/;"	f
getGlobRegExp	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function getGlobRegExp(glob) {$/;"	f
getImportCandidates	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function getImportCandidates(client, currentFile, cursorPosition) {$/;"	f
getInnerRequest	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js	/^var getInnerRequest = require(".\/getInnerRequest");$/;"	v
getInnerRequest	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/AliasPlugin.js	/^var getInnerRequest = require(".\/getInnerRequest");$/;"	v
getInnerRequest	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js	/^var getInnerRequest = require(".\/getInnerRequest");$/;"	v
getKind	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function getKind(nvim, kind) {$/;"	f
getKind	plugged/deoplete-typescript/rplugin/python3/denite/source/TSDocumentSymbol.py	/^    def getKind(self,kind):$/;"	m	class:Source
getLayout	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function getLayout(name, ctx) {$/;"	f
getLineInfo	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function getLineInfo(input, offset) {$/;"	f	function:SourceLocation
getLocale	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function getLocale(procEnv) {$/;"	f
getLogger	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def getLogger(name):$/;"	f
getMain	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function getMain(context, configuration) {$/;"	f
getName	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var o = {$/;"	m	class:o
getOptions	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function getOptions(opts) {$/;"	f	function:SourceLocation
getParams	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function getParams(members, separator) {$/;"	f
getPathWithSkippedRoot	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:getPathWithSkippedRoot(path)$/;"	f
getPaths	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ModulesInHierachicDirectoriesPlugin.js	/^var getPaths = require(".\/getPaths");$/;"	v
getPaths	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SymlinkPlugin.js	/^var getPaths = require(".\/getPaths");$/;"	v
getPaths	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/getPaths.js	/^module.exports = function getPaths(path) {$/;"	f
getPlugins	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^function getPlugins(text) {$/;"	f
getProjectInfo	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getProjectInfo(args) {$/;"	f
getServerPath	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getServerPath() {$/;"	f
getShortenedPath	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:getShortenedPath(splitted_absolute_path, previous_shortened_path, module_identifier)$/;"	f
getShortestImportPath	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:getShortestImportPath(absolute_path, module_identifier, relative_path)$/;"	f
getSignature	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getSignature(args) {$/;"	f
getSymbolRefs	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getSymbolRefs(args) {$/;"	f
getTsconfig	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:getTsconfig(module_absolute_path)$/;"	f
getTypeDef	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getTypeDef(args) {$/;"	f
getURL	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function getURL(config, post) {$/;"	f
getWorkspaceSymbols	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function getWorkspaceSymbols(args) {$/;"	f
get_complete_position	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete-typescript/rplugin/python3/deoplete/sources/typescript.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_complete_position(self, context):$/;"	m	class:Base
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
get_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_custom(custom, source_name, key, default):$/;"	f
get_filetype_var	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_filetype_var(self, filetype, var_name):$/;"	m	class:Base
get_keyword_under_cursor	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:get_keyword_under_cursor()$/;"	f
get_last_status	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_left_events	plugged/neomake/autoload/neomake.vim	/^    function! s:get_left_events() abort$/;"	f
get_makeprg_maker	plugged/neomake/autoload/neomake.vim	/^function! s:get_makeprg_maker() abort$/;"	f
get_maker_info	plugged/neomake/autoload/neomake/debug.vim	/^function! s:get_maker_info(...) abort$/;"	f
get_makers_for_pattern	plugged/neomake/autoload/neomake.vim	/^    function! s:get_makers_for_pattern(pattern) abort$/;"	f
get_oldstyle_setting	plugged/neomake/autoload/neomake/utils.vim	/^function! s:get_oldstyle_setting(key, maker, default, ft, bufnr, maker_only) abort$/;"	f
get_setting	plugged/neomake/autoload/neomake/configure.vim	/^function! s:get_setting(name, default) abort$/;"	f
get_sphinx_srcdir	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! s:get_sphinx_srcdir() abort$/;"	f
get_syn_names	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_syn_names(vim):$/;"	f
get_winwidth	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:get_winwidth() abort$/;"	f
getbufvar	plugged/neomake/autoload/neomake/configure.vim	/^function! s:getbufvar(bufnr, name, default) abort$/;"	f
getchar	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar_safe	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getlines	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def getlines(vim, start=1, end='$'):$/;"	f
gh_release_url	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^gh_release_url = 'https:\/\/api.github.com\/repos\/' + repo_name + '\/releases\/latest'$/;"	v
git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob.hasMagic	plugged/tern_for_vim/node_modules/glob/glob.js	/^}$/;"	f
globCache	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^var globCache = {};$/;"	v
globToRegExp	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^var globToRegExp = require(".\/globToRegExp").globToRegExp;$/;"	v
globToRegExp	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^function globToRegExp(glob) {$/;"	f
globUnescape	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^function globUnescape (s) {$/;"	f	function:function
glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
global_deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    global_deoplete = Deoplete(vim)$/;"	v
globpath	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
globruntime	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def globruntime(runtimepath, path):$/;"	f
go$readdir	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^  function go$readdir (args) {$/;"	f
goop	plugged/tern_for_vim/node_modules/tern/test/cases/infinite-expansion.js	/^function goop(n) {$/;"	f
gotResolvedLink	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function gotResolvedLink(resolvedLink) {$/;"	f
gotStat	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function gotStat(err, stat) {$/;"	f	function:exports.realpath
gotTarget	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function gotTarget(err, target, base) {$/;"	f
grabbag	plugged/tern_for_vim/node_modules/tern/test/cases/cautiouspropagation.js	/^var grabbag = {};$/;"	v
group	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var group = function(obj, value, context, behavior) {$/;"	f
group_by	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
gsub	plugged/neomake/autoload/neomake/utils.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gte	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function gte(i, y) {$/;"	f
gutentags#add_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_io_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_io_cb(chan, msg) abort$/;"	f
gutentags#error	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#remove_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
h	plugged/tern_for_vim/node_modules/tern/test/cases/bind.js	/^function h(a) { return {a: a, th: this}; }$/;"	f
hallo	plugged/tern_for_vim/node_modules/tern/test/cases/autothis.js	/^Bar.prototype.hallo = function() {$/;"	m	class:Bar
handle_cmd_result	plugged/neomake/contrib/run-tests-watch	/^handle_cmd_result() {$/;"	f
handle_get_list_entries	plugged/neomake/autoload/neomake.vim	/^function! s:handle_get_list_entries(jobinfo, ...) abort$/;"	f
handle_locqf_list_for_finished_jobs	plugged/neomake/autoload/neomake.vim	/^function! s:handle_locqf_list_for_finished_jobs(make_info) abort$/;"	f
handle_next_job	plugged/neomake/autoload/neomake.vim	/^function! s:handle_next_job(prev_jobinfo) abort$/;"	f
has	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
hasFrontMatter	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function hasFrontMatter(file) {$/;"	f
hasFrontMatter2	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function highlightCode2(code, lang) { if (!lang) return code; if (!CodeMirror.modes.hasOwnProperty(lang)) { try { require("codemirror\/mode\/" + lang + "\/" + lang); } catch(e) { console.log(e.toString());CodeMirror.modes[lang] = false; } } if (CodeMirror.modes[lang]) { var html = ""; CodeMirror.runMode(code, lang, function(token, style) { if (style) html += "<span class=\\"cm-" + style + "\\">" + Mold.escapeHTML(token) + "<\/span>"; else html += Mold.escapeHTML(token); }); return html; } else return code; } function hasFrontMatter2(file) { var fd = fs.openSync(file, "r"); var b = new Buffer(4); var ret = fs.readSync(fd, b, 0, 4, 0) == 4 && b.toString() == "---\\n"; fs.closeSync(fd); return ret; } function readFrontMatter2(file) { if (\/^---\\n\/.test(file)) { var end = file.search(\/\\n---\\n\/); if (end != -1) return {front: yaml.load(file.slice(4, end + 1)) || {}, main: file.slice(end + 5)}; } return {front: {}, main: file}; } function readPosts2(config) { var posts = []; fs.readdirSync("_posts\/").forEach(function(file) { var d = file.match(\/^(\\d{4})-(\\d\\d?)-(\\d\\d?)-(.+)\\.(md|link)$\/); var split = readFrontMatter(fs.readFileSync("_posts\/" + file, "utf8")); var post = split.front; post.date = new Date(d[1], d[2] - 1, d[3]); post.name = d[4]; if (!post.tags) post.tags = []; if (!post.tags.forEach && post.tags.split) post.tags = post.tags.split(\/\\s+\/); if (d[5] == "md") { post.content = marked(split.main); post.url = getURL(config, post); } else if (d[5] == "link") { var escd = Mold.escapeHTML(post.url); post.content = "<p>Read this post at <a href=\\"" + escd + "\\">" + escd + "<\/a>.<\/p>"; post.isLink = true; } posts.push(post); }); posts.sort(function(a, b){return b.date - a.date;}); return posts; }$/;"	f
hasOwnProperty	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  return Object.prototype.hasOwnProperty.call(obj, propName)$/;"	m	class:var.function.return
hasOwnProperty	plugged/tern_for_vim/node_modules/acorn/src/util.js	/^  return Object.prototype.hasOwnProperty.call(obj, propName)$/;"	m	class:export
hasOwnProperty	plugged/tern_for_vim/node_modules/glob/common.js	/^  return Object.prototype.hasOwnProperty.call(obj, field)$/;"	m	class:return
hasPlugins	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.hasPlugins = function hasPlugins(name) {$/;"	m	class:Tapable
hasUnpiped	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  var unpipeInfo = { hasUnpiped: false };$/;"	p	class:Readable.var.unpipeInfo
has_common_items	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_index	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_vimproc	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^function! s:has_vimproc() abort$/;"	f
hash	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
hd2list	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2list(hd) abort$/;"	f
hd2str	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str(hd) abort$/;"	f
hd2str_lua	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str_lua(hd) abort$/;"	f
health#deoplete#check	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! health#deoplete#check() abort$/;"	f
health#nvim_typescript#check	plugged/deoplete-typescript/autoload/health/nvim_typescript.vim	/^function! health#nvim_typescript#check() abort$/;"	f
hello	plugged/tern_for_vim/node_modules/tern/test/cases/empty_overridden_prop.js	/^Class.prototype.hello = "string";$/;"	m	class:Class
hello	plugged/tern_for_vim/node_modules/tern/test/cases/findref.js	/^function hello(a, b) {$/;"	f
help	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        help='architecture to download')$/;"	v
help	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        help='filename to save')$/;"	v
help	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        help='overwrite the download file')$/;"	v
hide	plugged/tern_for_vim/node_modules/tern/test/cases/finddef.js	/^function hide() { return obj.prop2; }$/;"	f
highlightCode	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function highlightCode(code, lang) {$/;"	f
highlightCode2	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function highlightCode2(code, lang) { if (!lang) return code; if (!CodeMirror.modes.hasOwnProperty(lang)) { try { require("codemirror\/mode\/" + lang + "\/" + lang); } catch(e) { console.log(e.toString());CodeMirror.modes[lang] = false; } } if (CodeMirror.modes[lang]) { var html = ""; CodeMirror.runMode(code, lang, function(token, style) { if (style) html += "<span class=\\"cm-" + style + "\\">" + Mold.escapeHTML(token) + "<\/span>"; else html += Mold.escapeHTML(token); }); return html; } else return code; } function hasFrontMatter2(file) { var fd = fs.openSync(file, "r"); var b = new Buffer(4); var ret = fs.readSync(fd, b, 0, 4, 0) == 4 && b.toString() == "---\\n"; fs.closeSync(fd); return ret; } function readFrontMatter2(file) { if (\/^---\\n\/.test(file)) { var end = file.search(\/\\n---\\n\/); if (end != -1) return {front: yaml.load(file.slice(4, end + 1)) || {}, main: file.slice(end + 5)}; } return {front: {}, main: file}; } function readPosts2(config) { var posts = []; fs.readdirSync("_posts\/").forEach(function(file) { var d = file.match(\/^(\\d{4})-(\\d\\d?)-(\\d\\d?)-(.+)\\.(md|link)$\/); var split = readFrontMatter(fs.readFileSync("_posts\/" + file, "utf8")); var post = split.front; post.date = new Date(d[1], d[2] - 1, d[3]); post.name = d[4]; if (!post.tags) post.tags = []; if (!post.tags.forEach && post.tags.split) post.tags = post.tags.split(\/\\s+\/); if (d[5] == "md") { post.content = marked(split.main); post.url = getURL(config, post); } else if (d[5] == "link") { var escd = Mold.escapeHTML(post.url); post.content = "<p>Read this post at <a href=\\"" + escd + "\\">" + escd + "<\/a>.<\/p>"; post.isLink = true; } posts.push(post); }); posts.sort(function(a, b){return b.date - a.date;}); return posts; }$/;"	f
howMuchToRead	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function howMuchToRead(n, state) {$/;"	f
i	plugged/tern_for_vim/node_modules/tern/test/cases/bind.js	/^var o = {i: i};$/;"	p	class:o
i	plugged/tern_for_vim/node_modules/tern/test/cases/destructure.js	/^;({i, j, k: [l, ...m]} = {i: 1, j: false, k: ["a", "b"]})$/;"	p
iconv	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
idCounter	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var idCounter = 0;$/;"	v
identity	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function identity(e) {$/;"	f
ignore	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function ignore(_node, _st, _c) {}$/;"	f	function:Found
ignore	plugged/tern_for_vim/node_modules/acorn/src/walk/index.js	/^function ignore(_node, _st, _c) {}$/;"	f
ignoreMap	plugged/tern_for_vim/node_modules/glob/common.js	/^function ignoreMap (pattern) {$/;"	f	function:setupIgnores
import	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:import(name, ...) abort dict$/;"	f
import_pattern	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import_pattern = re.compile(import_re)$/;"	v
import_plugin	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def import_plugin(path, source, classname):$/;"	f
incCount	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:incCount(counts, item, buf) abort$/;"	f
index	plugged/tern_for_vim/node_modules/tern/test/cases/webpack/component/foo.js	/^module.exports = {index: true}$/;"	p	class:module.exports
index	plugged/tern_for_vim/node_modules/tern/test/cases/webpack/node_modules/foo/index.js	/^module.exports = {index: true}$/;"	p	class:module.exports
index	plugged/tern_for_vim/node_modules/tern/test/cases/webpack/node_modules/modu/index.js	/^module.exports = { index: true}$/;"	p	class:module.exports
index	plugged/tern_for_vim/node_modules/tern/test/cases/webpack/node_modules/xyz/index.js	/^module.exports = {index: false}$/;"	p	class:module.exports
indexOf	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function indexOf(xs, x) {$/;"	f
indexOf	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^String.prototype.indexOf.bind("abcde", "a"); \/\/: fn(from?: number) -> number$/;"	m	class:String
infer	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var infer = require("..\/lib\/infer");$/;"	v
infer	plugged/tern_for_vim/node_modules/tern/test/timeout.js	/^var infer = require("..\/lib\/infer");$/;"	v
infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
info	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def info(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
inherits	plugged/tern_for_vim/node_modules/inherits/inherits_browser.js	/^  module.exports = function inherits(ctor, superCtor) {$/;"	f
init	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^init = False$/;"	v
init	plugged/tern_for_vim/node_modules/tern/lib/def.js	/^  tern.def = {init: mod};$/;"	p
init	plugged/tern_for_vim/node_modules/tern/test/cases/simple.js	/^function init(v) {$/;"	f
init_channel	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def init_channel(self, args):$/;"	m	class:DeopleteHandlers
init_internal_variables	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:init_internal_variables() abort$/;"	f
initialize	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def initialize(self):$/;"	m	class:Source
inner	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  function inner(node) {$/;"	f
inner	plugged/tern_for_vim/node_modules/tern/test/cases/cautiouspropagation.js	/^var inner = 55 || grabbag[quux()];$/;"	v
innerCallback	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	function innerCallback(err, result) {$/;"	f	function:function
innerFunc1	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^  function innerFunc1() {$/;"	f	function:function
input_helper	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inst	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var inst;$/;"	v
install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
install_vim	plugged/vimproc.vim/tools/appveyor.bat	/^:install_vim$/;"	l
intersect	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
isAbsolutePath	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^function isAbsolutePath(path) {$/;"	f
isArray	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isArray(arg) {$/;"	f
isArray	plugged/tern_for_vim/node_modules/isarray/test.js	/^var isArray = require('.\/');$/;"	v
isArray	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var isArray = require('isarray');$/;"	v
isArray	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^function isArray(v) {$/;"	f
isBoolean	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isBoolean(arg) {$/;"	f
isBuf	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^      encoding: encoding,$/;"	p	class:state.lastBufferedRequest
isConditionMatched	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isConditionMatched(context, condition) {$/;"	f
isCurrentVersionHighter	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function isCurrentVersionHighter(val) {$/;"	f
isDate	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isDate(d) {$/;"	f
isDir	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function isDir(item) {$/;"	f
isDirectory	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.isDirectory = function isDirectory(path) {$/;"	m	class:Resolver
isEnvironment	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isEnvironment(context, env) {$/;"	f
isError	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isError(e) {$/;"	f
isFile	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function isFile(item) {$/;"	f
isFunction	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isFunction(arg) {$/;"	f
isGlobMatched	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isGlobMatched(glob, relativePath) {$/;"	f
isIdentifierChar	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function isIdentifierChar(code, astral) {$/;"	f	function:function
isIdentifierStart	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function isIdentifierStart(code, astral) {$/;"	f	function:function
isIgnored	plugged/tern_for_vim/node_modules/glob/common.js	/^function isIgnored (self, path) {$/;"	f	function:function
isKeyMatched	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isKeyMatched(context, key) {$/;"	f
isKeyword	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^Parser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };$/;"	m	class:Parser
isModule	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.isModule = function isModule(path) {$/;"	m	class:Resolver
isNull	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isNull(arg) {$/;"	f
isNullOrUndefined	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isNullOrUndefined(arg) {$/;"	f
isNumber	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isNumber(arg) {$/;"	f
isObject	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isObject(arg) {$/;"	f
isPadded	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function isPadded(el) {$/;"	f
isPaused	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.isPaused = function () {$/;"	m	class:Readable
isPrimitive	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isPrimitive(arg) {$/;"	f
isRegExp	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isRegExp(re) {$/;"	f
isReservedWord	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^Parser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };$/;"	m	class:Parser
isResourceTypeMatched	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isResourceTypeMatched(baseType, testedType) {$/;"	f
isResourceTypeSupported	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isResourceTypeSupported(context, type) {$/;"	f
isString	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isString(arg) {$/;"	f
isSymbol	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isSymbol(arg) {$/;"	f
isSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.isSync = function() {$/;"	m	class:CachedInputFileSystem
isSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^NodeJsInputFileSystem.prototype.isSync = function() {$/;"	m	class:NodeJsInputFileSystem
isSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^SyncNodeJsInputFileSystem.prototype.isSync = function() {$/;"	m	class:SyncNodeJsInputFileSystem
isTypeMatched	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function isTypeMatched(baseType, testedType) {$/;"	f
isUndefined	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function isUndefined(arg) {$/;"	f
isWindows	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^var isWindows = process.platform === 'win32';$/;"	v
is_absolute	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! s:is_absolute(path) abort$/;"	f
is_absolute	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^  function! s:is_absolute(path) abort$/;"	f
is_available	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:is_available() abort$/;"	f
is_case_tolerant	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:is_case_tolerant() abort$/;"	f
is_case_tolerant	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:is_case_tolerant() abort$/;"	f
is_cygwin	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_debug_enabled	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    is_debug_enabled = False$/;"	v	class:LoggingMixin
is_dict	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_exiting	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_exiting() abort$/;"	f
is_float	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_list	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_mac	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_null_device	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:is_null_device(filename) abort$/;"	f
is_number	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_pseudo_device	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:is_pseudo_device(filename) abort "{{{$/;"	f
is_relative	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:is_relative(path) abort$/;"	f
is_root_directory	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! s:is_root_directory(path) abort$/;"	f
is_skip	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip(event) abort$/;"	f
is_skip_text	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_text(event) abort$/;"	f
is_string	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
is_valid_identifier	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:is_valid_identifier(symbol_str)$/;"	f
is_valid_identifier	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:is_valid_identifier(symbol_str)$/;"	f
is_window	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^is_window = platform.system() == "Windows"$/;"	v
is_windows	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:is_windows() abort$/;"	f
j	plugged/tern_for_vim/node_modules/tern/test/cases/bind.js	/^function j() { return this; }$/;"	f
j	plugged/tern_for_vim/node_modules/tern/test/cases/destructure.js	/^;({i, j, k: [l, ...m]} = {i: 1, j: false, k: ["a", "b"]})$/;"	p
jaja	plugged/tern_for_vim/node_modules/tern/test/cases/finddef.js	/^var jaja = 40;$/;"	v
javascript_syntax_detection	plugged/vim-javascript/ftdetect/javascript.vim	/^augroup javascript_syntax_detection$/;"	a
job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
jobinfo_base.as_string	plugged/neomake/autoload/neomake/jobinfo.vim	/^function! s:jobinfo_base.as_string() abort$/;"	f
jobinfo_base.cd	plugged/neomake/autoload/neomake/jobinfo.vim	/^function! s:jobinfo_base.cd(...) abort$/;"	f
jobinfo_base.cd_back	plugged/neomake/autoload/neomake/jobinfo.vim	/^function! s:jobinfo_base.cd_back() abort$/;"	f
jobinfo_base.get_pid	plugged/neomake/autoload/neomake/jobinfo.vim	/^function! s:jobinfo_base.get_pid() abort$/;"	f
join	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.join = function(path, request) {$/;"	m	class:Resolver
join	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.join = require(".\/join");$/;"	m	class:MemoryFileSystem
join	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  BufferList.prototype.join = function join(s) {$/;"	m	class:BufferList
join	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:join(...) abort$/;"	f
join	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:join(...) abort$/;"	f
joinParts	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:joinParts(displayParts)$/;"	f
joinPartsIgnoreBreak	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:joinPartsIgnoreBreak(displayParts, replaceString)$/;"	f
join_posix_lines	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
jsFile	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^  function jsFile(f) {$/;"	f	function:exports.runTests
jsonFile	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^function jsonFile(name) { return util.resolve(condenseDir + "\/" + name.replace(\/\\.js$\/, ".json")); }$/;"	f
json_null	plugged/neomake/autoload/neomake/compat.vim	/^    function! s:json_null() abort$/;"	f
jumptodef	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  complete: function() { project.server.complete(project.editor) },$/;"	m	class:commands
justify_equal_spacing	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	plugged/tern_for_vim/node_modules/tern/test/cases/destructure.js	/^;({i, j, k: [l, ...m]} = {i: 1, j: false, k: ["a", "b"]})$/;"	p
kProxyEvents	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];$/;"	v
keywordRegexp	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function keywordRegexp(words) {$/;"	f	function:Position
keywordRegexp	plugged/tern_for_vim/node_modules/acorn/src/state.js	/^function keywordRegexp(words) {$/;"	f
kill	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:kill(i) abort$/;"	f
kill_vimjob_cb	plugged/neomake/autoload/neomake.vim	/^function! s:kill_vimjob_cb(timer) abort$/;"	f
kill_with_childs	plugged/neomake/contrib/run-tests-watch	/^kill_with_childs() {$/;"	f
kill_yarp	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:kill_yarp() abort$/;"	f
kind	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var loopLabel = {kind: "loop"};$/;"	p	class:pp.loopLabel
kind	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var switchLabel = {kind: "switch"};$/;"	p	class:pp.switchLabel
kind	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^const loopLabel = {kind: "loop"}, switchLabel = {kind: "switch"}$/;"	p
kind	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^const loopLabel = {kind: "loop"}, switchLabel = {kind: "switch"}$/;"	p	class:const
kw	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function kw(name, options) {$/;"	f	function:function
last	plugged/tern_for_vim/node_modules/tern/test/cases/simple_generic.js	/^function last(arr) { return arr[arr.length - 1]; }$/;"	f
last_find	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^def last_find(s, needles):$/;"	f
last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
lasterror	plugged/vimproc.vim/src/proc_w32.c	/^lasterror()$/;"	f	file:
lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
later	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^      var later = function() {$/;"	f	function:_.debounce
later	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var later = function() {$/;"	f	function:_.throttle
layouts	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var layouts = {};$/;"	v
lengthof	plugged/vimproc.vim/src/proc_w32.c	72;"	d	file:
levenshtein_distance	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lexer.advance	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.advance() abort$/;"	f
lexer.lex_digit	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.lex_digit() abort$/;"	f
lexer.skip_spaces	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.skip_spaces() abort$/;"	f
lexer.token	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.token() abort$/;"	f
lexer.value	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.value() abort$/;"	f
lexical	init.vim	/^augroup lexical$/;"	a
libcall	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall(func, args) abort "{{{$/;"	f
libcall_raw_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_read(func, args) abort "{{{$/;"	f
libcall_raw_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_write(func, args) abort "{{{$/;"	f
lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
lines	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:lines(str) abort$/;"	f
list2hd	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:list2hd(lis) abort$/;"	f
list2str	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:list2str(lis) abort$/;"	f
litecorrect	init.vim	/^augroup litecorrect$/;"	a
load	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:load(...) abort dict$/;"	f
loadDescriptionFile	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js	/^function loadDescriptionFile(resolver, directory, filenames, callback) {$/;"	f
load_external_module	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def load_external_module(file, module):$/;"	f
load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
loaded_matchparen	init.vim	/^let loaded_matchparen=1$/;"	v
loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
locations	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  allowHashBang: false,$/;"	p	class:getLineInfo.defaultOptions
locations	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  allowHashBang: false,$/;"	p	class:from
lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log	plugged/deoplete-typescript/rplugin/python3/deoplete/sources/typescript.py	/^    def log(self, message):$/;"	m	class:Source
log	plugged/neomake/autoload/neomake/log.vim	/^function! s:log(level, msg, ...) abort$/;"	f
log	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	var log = [];$/;"	v
log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
logAsString	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	function logAsString() {$/;"	f
log_format	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_format = '%(asctime)s %(levelname)-8s [%(process)d] (%(name)s) %(message)s'$/;"	v
log_message_cooldown	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_message_cooldown = 0.5$/;"	v
loggingCallbackWrapper	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/createInnerCallback.js	/^	function loggingCallbackWrapper() {$/;"	f	function:module.exports
loggingCallbackWrapper.log	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/createInnerCallback.js	/^	var theLog = [];$/;"	f
login_tty	plugged/vimproc.vim/src/ptytty.c	/^login_tty(int fd)$/;"	f
logmethod	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def logmethod(func):$/;"	f
logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
lookupIterator	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var lookupIterator = function(value) {$/;"	f
lp	plugged/tern_for_vim/node_modules/acorn/src/loose/expression.js	/^}$/;"	m
lp	plugged/tern_for_vim/node_modules/acorn/src/loose/statement.js	/^}$/;"	m
lp.parsePropertyAccessor	plugged/tern_for_vim/node_modules/acorn/src/loose/expression.js	/^}$/;"	f
lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
lseek	plugged/vimproc.vim/src/proc_w32.c	186;"	d	file:
lte	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function lte(i, y) {$/;"	f
m.Minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^  }$/;"	f
m1	plugged/tern_for_vim/node_modules/tern/test/cases/mixin.js	/^function m1() {}$/;"	f
m2	plugged/tern_for_vim/node_modules/tern/test/cases/mixin.js	/^function m2() {}$/;"	f
main	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main(self, name, args, queue_id):$/;"	m	class:Child
main	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def main(serveraddr):$/;"	f
main_loop	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main_loop(self, stdout):$/;"	m	class:Child
main_syntax	plugged/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
major	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^        Client.tsConfigVersion = {$/;"	p	class:Client.tsConfigVersion
make	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function make(funcs, base) {$/;"	f	function:Found
make	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^Minimatch.prototype.make = make$/;"	m	class:Minimatch
makeClass	plugged/tern_for_vim/node_modules/tern/test/cases/indirect_class.js	/^function makeClass(methods) {$/;"	f
makeMonkey	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^function makeMonkey() { return "monkey"; }$/;"	f
makeRe	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^Minimatch.prototype.makeRe = makeRe$/;"	m	class:Minimatch
makeString	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^Foo.prototype = {$/;"	m	class:Foo
makeString	plugged/tern_for_vim/node_modules/tern/test/cases/proto.js	/^Foo.prototype = {$/;"	m	class:Foo
makeTest	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function makeTest(test) {$/;"	f	function:simple
makeTest	plugged/tern_for_vim/node_modules/acorn/src/walk/index.js	/^function makeTest(test) {$/;"	f
make_request	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def make_request(self, doc, silent):$/;"	m	class:Source
maker_from_command._get_argv	plugged/neomake/autoload/neomake/utils.vim	/^function! s:maker_from_command._get_argv(jobinfo) abort dict$/;"	f
maker_from_command.fn	plugged/neomake/autoload/neomake/utils.vim	/^function! s:maker_from_command.fn(_options) dict abort$/;"	f
makeres	plugged/tern_for_vim/node_modules/inflight/inflight.js	/^function makeres (key) {$/;"	f	function:function
manual_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def manual_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
manual_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
map	plugged/tern_for_vim/node_modules/tern/test/cases/arrow.js	/^Obj.prototype.map = function() {$/;"	m	class:Obj
map	plugged/tern_for_vim/node_modules/tern/test/cases/simple_generic.js	/^function map(arr, f) {$/;"	f
map_accum	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
marked	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var marked = require("marked");$/;"	v
matchGlob	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function matchGlob(glob, relativePath) {$/;"	f
matchModule	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function matchModule(context, configuration, request) {$/;"	f
matchType	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function matchType(context, configuration, relativePath) {$/;"	f
max	plugged/vimproc.vim/tools/leak_check.vim	/^let max = 2048$/;"	v
max_by	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
maybeCallback	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^function maybeCallback(cb) {$/;"	f
maybeMatch	plugged/tern_for_vim/node_modules/balanced-match/index.js	/^function maybeMatch(reg, str) {$/;"	f
maybeReadMore	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function maybeReadMore(stream, state) {$/;"	f
maybeReadMore_	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function maybeReadMore_(stream, state) {$/;"	f
maybe_reconfigure_buffer	plugged/neomake/autoload/neomake/configure.vim	/^function! s:maybe_reconfigure_buffer(bufnr) abort$/;"	f
memoizedJoin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^var memoizedJoin = {};$/;"	v
memoryFsJoin	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^var memoryFsJoin = require("memory-fs\/lib\/join");$/;"	v
mergeFilteredToArray	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ResolverFactory.js	/^function mergeFilteredToArray(array, filter) {$/;"	f
merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self, context):$/;"	m	class:Parent
message	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	var message = "resolve '" + request + "' in '" + path + "'";$/;"	v
meta	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.meta = function(_path) {$/;"	m	class:MemoryFileSystem
min_by	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mingw	plugged/vimproc.vim/tools/appveyor.bat	/^:mingw$/;"	l
mingw_test	plugged/vimproc.vim/tools/appveyor.bat	/^:mingw_test$/;"	l
minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^function minimatch (p, pattern, options) {$/;"	f
minimatch	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	m	class:Minimatch.var
minimatch.braceExpand	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	f	function:Minimatch.Minimatch
minimatch.defaults	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	f
minimatch.makeRe	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^}$/;"	f
missingCallback	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function missingCallback(err) {$/;"	f	function:rethrow
mixinTapable	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.mixin = function mixinTapable(pt) {$/;"	f
mkdirSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.mkdirSync = function(_path) {$/;"	m	class:MemoryFileSystem
mkdirpSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.mkdirpSync = function(_path) {$/;"	m	class:MemoryFileSystem
mod1	plugged/tern_for_vim/node_modules/tern/test/cases/node/main.js	/^var mod1 = require("mod1");$/;"	v
mod2	plugged/tern_for_vim/node_modules/tern/test/cases/node/main.js	/^var mod2 = require("mod1\/mainfile.js");$/;"	v
module	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^		query: "",$/;"	p	class:Resolver.part
module	plugged/tern_for_vim/node_modules/tern/test/cases/node/main.js	/^var module = {};$/;"	v
module.exports	plugged/tern_for_vim/node_modules/concat-map/index.js	/^module.exports = function (xs, fn) {$/;"	f
module.exports	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/createInnerCallback.js	/^\/*$/;"	f
module.exports	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/forEachBail.js	/^\/*$/;"	f
module.exports	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/getPaths.js	/^}$/;"	f
module.exports	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^});$/;"	f
module.exports	plugged/tern_for_vim/node_modules/errno/custom.js	/^}$/;"	f
module.exports	plugged/tern_for_vim/node_modules/inherits/inherits_browser.js	/^if (typeof Object.create === 'function') {$/;"	f
module.exports	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryNixEndRegExp3 = \/^\\\/+\\.\\.$\/;$/;"	f
module.exports	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^if (util && util.inspect && util.inspect.custom) {$/;"	c
module.exports	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^}$/;"	f
module.exports	plugged/tern_for_vim/node_modules/resolve-from/index.js	/^var Module = require('module');$/;"	f
module.exports	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/reassign_exports.js	/^module.exports = function() {};$/;"	f
module.exports	plugged/tern_for_vim/node_modules/tern/test/condense/node_fn_export.js	/^module.exports = function(a) { return a; };$/;"	f
module.exports.basename	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/getPaths.js	/^};$/;"	f
module.exports.context	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^});$/;"	f
module.exports.context.sync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^});$/;"	f
module.exports.create	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^};$/;"	f
module.exports.create.sync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^};$/;"	f
module.exports.f2	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/doc.js	/^};$/;"	f
module.exports.loader	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^});$/;"	f
module.exports.loader.sync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^});$/;"	f
module.exports.sync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^});$/;"	f
modules	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^    unsafeCache: true,$/;"	p	class:getResolver.config
msvc	plugged/vimproc.vim/tools/appveyor.bat	/^:msvc$/;"	l
msvc_test	plugged/vimproc.vim/tools/appveyor.bat	/^:msvc_test$/;"	l
msys2	plugged/vimproc.vim/tools/appveyor.bat	/^:msys2$/;"	l
msys2_test	plugged/vimproc.vim/tools/appveyor.bat	/^:msys2_test$/;"	l
my	plugged/tern_for_vim/node_modules/tern/test/condense/proto.js	/^var x = {my: "object"};$/;"	p	class:x
myBitset	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var myBitset = getABitset();$/;"	v
myObj	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var myObj;$/;"	v
myalias	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var myalias = Date;$/;"	v
mycmp	plugged/tern_for_vim/script/tern.py	/^  def mycmp(a,b):$/;"	f	function:tern_rename
mymod	plugged/tern_for_vim/node_modules/tern/test/cases/node/main.js	/^var mymod = require("mymod");$/;"	v
n	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    '\\r':     'r',$/;"	p	class:escapes
n	plugged/tern_for_vim/node_modules/tern/test/cases/infinite-expansion.js	/^var f = function(n) {$/;"	c
nReadingNextTick	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function nReadingNextTick(self) {$/;"	f
name	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^  getName: function() { return this.name; },$/;"	p	class:o
name	plugged/tern_for_vim/node_modules/tern/test/cases/hint-objlit.js	/^var person = {name: "harry", born: 1980};$/;"	p	class:person
name	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var obj = {$/;"	p	class:obj
name	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^    var fdata = {type: "part", name: "file", text: text, offset: start};$/;"	p	class:exports.runTests.fdata
name	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        name = args.filename$/;"	v
name	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^        name = asset['name']$/;"	v
names	autoload/plug.vim	/^function! s:names(...)$/;"	f
nativeForEach	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var$/;"	v
needFinish	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function needFinish(state) {$/;"	f
needMoreData	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function needMoreData(state) {$/;"	f
need_to_postpone_loclist	plugged/neomake/autoload/neomake.vim	/^function! s:need_to_postpone_loclist(jobinfo) abort$/;"	f
need_to_postpone_output_processing	plugged/neomake/autoload/neomake.vim	/^function! s:need_to_postpone_output_processing(jobinfo) abort$/;"	f
neomake#CancelAllMakes	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelAllMakes(...) abort$/;"	f
neomake#CancelJob	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelJob(job_id, ...) abort$/;"	f
neomake#CancelJobs	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelJobs(bang) abort$/;"	f
neomake#CancelMake	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelMake(make_id, ...) abort$/;"	f
neomake#CursorMoved	plugged/neomake/autoload/neomake.vim	/^function! neomake#CursorMoved() abort$/;"	f
neomake#CursorMovedDelayed	plugged/neomake/autoload/neomake.vim	/^function! neomake#CursorMovedDelayed() abort$/;"	f
neomake#DisplayInfo	plugged/neomake/autoload/neomake.vim	/^function! neomake#DisplayInfo(...) abort$/;"	f
neomake#EchoCurrentError	plugged/neomake/autoload/neomake.vim	/^function! neomake#EchoCurrentError(...) abort$/;"	f
neomake#GetCurrentErrorMsg	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetCurrentErrorMsg() abort$/;"	f
neomake#GetEnabledMakers	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetEnabledMakers(...) abort$/;"	f
neomake#GetJob	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetJob(job_id) abort$/;"	f
neomake#GetJobs	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetJobs(...) abort$/;"	f
neomake#GetMakeOptions	plugged/neomake/autoload/neomake.vim	/^    function! neomake#GetMakeOptions(...) abort$/;"	f
neomake#GetMaker	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetMaker(name_or_maker, ...) abort$/;"	f
neomake#GetMakers	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetMakers(ft) abort$/;"	f
neomake#GetProjectMakers	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetProjectMakers() abort$/;"	f
neomake#GetStatus	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetStatus() abort$/;"	f
neomake#ListJobs	plugged/neomake/autoload/neomake.vim	/^function! neomake#ListJobs() abort$/;"	f
neomake#Make	plugged/neomake/autoload/neomake.vim	/^function! neomake#Make(file_mode_or_options, ...) abort$/;"	f
neomake#Sh	plugged/neomake/autoload/neomake.vim	/^function! neomake#Sh(sh_command, ...) abort$/;"	f
neomake#ShCommand	plugged/neomake/autoload/neomake.vim	/^function! neomake#ShCommand(bang, sh_command, ...) abort$/;"	f
neomake#VimLeave	plugged/neomake/autoload/neomake.vim	/^function! neomake#VimLeave() abort$/;"	f
neomake#_get_s	plugged/neomake/autoload/neomake.vim	/^function! neomake#_get_s() abort$/;"	f
neomake#cmd#complete_jobs	plugged/neomake/autoload/neomake/cmd.vim	/^function! neomake#cmd#complete_jobs(...) abort$/;"	f
neomake#cmd#complete_makers	plugged/neomake/autoload/neomake/cmd.vim	/^function! neomake#cmd#complete_makers(ArgLead, CmdLine, ...) abort$/;"	f
neomake#compat#get_argv	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#get_argv(exe, args, args_is_list) abort$/;"	f
neomake#compat#get_mode	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#get_mode() abort$/;"	f
neomake#compat#getbufvar	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#getbufvar(buf, key, def) abort$/;"	f
neomake#compat#gettabwinvar	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#gettabwinvar(t, w, v, d) abort$/;"	f
neomake#compat#glob_list	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#glob_list(pattern) abort$/;"	f
neomake#compat#globpath_list	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#globpath_list(path, pattern, suf) abort$/;"	f
neomake#compat#in_completion	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#in_completion() abort$/;"	f
neomake#compat#json_decode	plugged/neomake/autoload/neomake/compat.vim	/^      function! neomake#compat#json_decode(json) abort$/;"	f
neomake#compat#json_decode	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#json_decode(json) abort " {{{2$/;"	f
neomake#compat#json_false	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_false = 0$/;"	v
neomake#compat#json_false	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_false = v:false$/;"	v
neomake#compat#json_none	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_none = []$/;"	v
neomake#compat#json_none	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_none = v:none$/;"	v
neomake#compat#json_null	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_null = [function('s:json_null')]$/;"	v
neomake#compat#json_null	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_null = v:null$/;"	v
neomake#compat#json_true	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_true = 1$/;"	v
neomake#compat#json_true	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_true = v:true$/;"	v
neomake#compat#reltimefloat	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#reltimefloat() abort$/;"	f
neomake#compat#restore_prev_windows	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#restore_prev_windows() abort$/;"	f
neomake#compat#save_prev_windows	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#save_prev_windows() abort$/;"	f
neomake#compat#systemlist	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#systemlist(cmd) abort$/;"	f
neomake#compat#uniq	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#uniq(l) abort$/;"	f
neomake#config#get	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#get(name, ...) abort$/;"	f
neomake#config#get_with_source	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#get_with_source(name, ...) abort$/;"	f
neomake#config#set	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#set(name, value) abort$/;"	f
neomake#config#set_buffer	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#set_buffer(bufnr, name, value) abort$/;"	f
neomake#config#set_dict	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#set_dict(dict, name, value) abort$/;"	f
neomake#config#unset_dict	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#unset_dict(dict, name) abort$/;"	f
neomake#configure#automake	plugged/neomake/autoload/neomake/configure.vim	/^function! neomake#configure#automake(...) abort$/;"	f
neomake#configure#automake_for_buffer	plugged/neomake/autoload/neomake/configure.vim	/^function! neomake#configure#automake_for_buffer(string_or_dict_config, ...) abort$/;"	f
neomake#configure#reset_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! neomake#configure#reset_automake() abort$/;"	f
neomake#core#create_jobs	plugged/neomake/autoload/neomake/core.vim	/^function! neomake#core#create_jobs(options, makers) abort$/;"	f
neomake#debug#_get_info_lines	plugged/neomake/autoload/neomake/debug.vim	/^function! neomake#debug#_get_info_lines() abort$/;"	f
neomake#debug#display_info	plugged/neomake/autoload/neomake/debug.vim	/^function! neomake#debug#display_info(...) abort$/;"	f
neomake#debug#validate_maker	plugged/neomake/autoload/neomake/debug.vim	/^function! neomake#debug#validate_maker(maker) abort$/;"	f
neomake#get_nearest_error	plugged/neomake/autoload/neomake.vim	/^function! neomake#get_nearest_error() abort$/;"	f
neomake#has_async_support	plugged/neomake/autoload/neomake.vim	/^function! neomake#has_async_support() abort$/;"	f
neomake#highlights#AddHighlight	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#AddHighlight(entry, type) abort$/;"	f
neomake#highlights#DefineHighlights	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#DefineHighlights() abort$/;"	f
neomake#highlights#ResetFile	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#ResetFile(buf) abort$/;"	f
neomake#highlights#ResetProject	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#ResetProject(buf) abort$/;"	f
neomake#highlights#ShowHighlights	plugged/neomake/autoload/neomake/highlights.vim	/^    function! neomake#highlights#ShowHighlights() abort$/;"	f
neomake#highlights#_get	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#_get() abort$/;"	f
neomake#log#debug	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#debug(...) abort$/;"	f
neomake#log#debug_obj	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#debug_obj(msg, obj) abort$/;"	f
neomake#log#error	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#error(...) abort$/;"	f
neomake#log#exception	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#exception(error, ...) abort$/;"	f
neomake#log#info	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#info(...) abort$/;"	f
neomake#log#warning	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#warning(...) abort$/;"	f
neomake#makers#cabal#cabal	plugged/neomake/autoload/neomake/makers/cabal.vim	/^function! neomake#makers#cabal#cabal() abort$/;"	f
neomake#makers#clippy#clippy	plugged/neomake/autoload/neomake/makers/clippy.vim	/^function! neomake#makers#clippy#clippy() abort$/;"	f
neomake#makers#ft#ada#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/ada.vim	/^function! neomake#makers#ft#ada#EnabledMakers() abort$/;"	f
neomake#makers#ft#ada#gcc	plugged/neomake/autoload/neomake/makers/ft/ada.vim	/^function! neomake#makers#ft#ada#gcc() abort$/;"	f
neomake#makers#ft#angular#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/angular.vim	/^function! neomake#makers#ft#angular#EnabledMakers() abort$/;"	f
neomake#makers#ft#angular#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/angular.vim	/^function! neomake#makers#ft#angular#SupersetOf() abort$/;"	f
neomake#makers#ft#ansible#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/ansible.vim	/^function! neomake#makers#ft#ansible#EnabledMakers() abort$/;"	f
neomake#makers#ft#ansible#ansiblelint	plugged/neomake/autoload/neomake/makers/ft/ansible.vim	/^function! neomake#makers#ft#ansible#ansiblelint() abort$/;"	f
neomake#makers#ft#apiblueprint#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/apiblueprint.vim	/^function! neomake#makers#ft#apiblueprint#EnabledMakers() abort$/;"	f
neomake#makers#ft#apiblueprint#drafter	plugged/neomake/autoload/neomake/makers/ft/apiblueprint.vim	/^function! neomake#makers#ft#apiblueprint#drafter() abort$/;"	f
neomake#makers#ft#applescript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/applescript.vim	/^function! neomake#makers#ft#applescript#EnabledMakers() abort$/;"	f
neomake#makers#ft#applescript#osacompile	plugged/neomake/autoload/neomake/makers/ft/applescript.vim	/^function! neomake#makers#ft#applescript#osacompile() abort$/;"	f
neomake#makers#ft#asciidoc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#EnabledMakers() abort$/;"	f
neomake#makers#ft#asciidoc#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#SupersetOf() abort$/;"	f
neomake#makers#ft#asciidoc#asciidoc	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#asciidoc() abort$/;"	f
neomake#makers#ft#asciidoc#asciidoctor	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#asciidoctor() abort$/;"	f
neomake#makers#ft#bib#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/bib.vim	/^function! neomake#makers#ft#bib#EnabledMakers() abort$/;"	f
neomake#makers#ft#bib#bibtex	plugged/neomake/autoload/neomake/makers/ft/bib.vim	/^function! neomake#makers#ft#bib#bibtex() abort$/;"	f
neomake#makers#ft#c#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#EnabledMakers() abort$/;"	f
neomake#makers#ft#c#checkpatch	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#checkpatch() abort$/;"	f
neomake#makers#ft#c#clang	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#clang() abort$/;"	f
neomake#makers#ft#c#clangcheck	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#clangcheck() abort$/;"	f
neomake#makers#ft#c#clangtidy	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#clangtidy() abort$/;"	f
neomake#makers#ft#c#cppcheck	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#cppcheck() abort$/;"	f
neomake#makers#ft#c#gcc	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#gcc() abort$/;"	f
neomake#makers#ft#cf3#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cf3.vim	/^function! neomake#makers#ft#cf3#EnabledMakers() abort$/;"	f
neomake#makers#ft#cf3#cfpromises	plugged/neomake/autoload/neomake/makers/ft/cf3.vim	/^function! neomake#makers#ft#cf3#cfpromises() abort$/;"	f
neomake#makers#ft#chef#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#EnabledMakers() abort$/;"	f
neomake#makers#ft#chef#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#SupersetOf() abort$/;"	f
neomake#makers#ft#chef#cookstyle	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#cookstyle() abort$/;"	f
neomake#makers#ft#chef#foodcritic	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#foodcritic() abort$/;"	f
neomake#makers#ft#coffee#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/coffee.vim	/^function! neomake#makers#ft#coffee#EnabledMakers() abort$/;"	f
neomake#makers#ft#coffee#coffeelint	plugged/neomake/autoload/neomake/makers/ft/coffee.vim	/^function! neomake#makers#ft#coffee#coffeelint() abort$/;"	f
neomake#makers#ft#cpp#CpplintEntryProcess	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#CpplintEntryProcess(entry) abort$/;"	f
neomake#makers#ft#cpp#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#EnabledMakers() abort$/;"	f
neomake#makers#ft#cpp#clang	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#clang() abort$/;"	f
neomake#makers#ft#cpp#clangcheck	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#clangcheck() abort$/;"	f
neomake#makers#ft#cpp#clangtidy	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#clangtidy() abort$/;"	f
neomake#makers#ft#cpp#cppcheck	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#cppcheck() abort$/;"	f
neomake#makers#ft#cpp#cpplint	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#cpplint() abort$/;"	f
neomake#makers#ft#cpp#gcc	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#gcc() abort$/;"	f
neomake#makers#ft#crystal#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/crystal.vim	/^function! neomake#makers#ft#crystal#EnabledMakers() abort$/;"	f
neomake#makers#ft#crystal#crystal	plugged/neomake/autoload/neomake/makers/ft/crystal.vim	/^function! neomake#makers#ft#crystal#crystal() abort$/;"	f
neomake#makers#ft#cs#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cs.vim	/^function! neomake#makers#ft#cs#EnabledMakers() abort$/;"	f
neomake#makers#ft#cs#mcs	plugged/neomake/autoload/neomake/makers/ft/cs.vim	/^function! neomake#makers#ft#cs#mcs() abort$/;"	f
neomake#makers#ft#cs#msbuild	plugged/neomake/autoload/neomake/makers/ft/cs.vim	/^function! neomake#makers#ft#cs#msbuild() abort$/;"	f
neomake#makers#ft#css#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^function! neomake#makers#ft#css#EnabledMakers() abort$/;"	f
neomake#makers#ft#css#csslint	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^function! neomake#makers#ft#css#csslint() abort$/;"	f
neomake#makers#ft#css#stylelint	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^function! neomake#makers#ft#css#stylelint() abort$/;"	f
neomake#makers#ft#cuda#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cuda.vim	/^function! neomake#makers#ft#cuda#EnabledMakers() abort$/;"	f
neomake#makers#ft#cuda#nvcc	plugged/neomake/autoload/neomake/makers/ft/cuda.vim	/^function! neomake#makers#ft#cuda#nvcc() abort$/;"	f
neomake#makers#ft#d#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#EnabledMakers() abort$/;"	f
neomake#makers#ft#d#dmd	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#dmd() abort$/;"	f
neomake#makers#ft#d#gdmd	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#gdmd() abort$/;"	f
neomake#makers#ft#d#ldmd	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#ldmd() abort$/;"	f
neomake#makers#ft#docbk#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/docbk.vim	/^function! neomake#makers#ft#docbk#EnabledMakers() abort$/;"	f
neomake#makers#ft#docbk#xmllint	plugged/neomake/autoload/neomake/makers/ft/docbk.vim	/^function! neomake#makers#ft#docbk#xmllint() abort$/;"	f
neomake#makers#ft#dockerfile#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/dockerfile.vim	/^function! neomake#makers#ft#dockerfile#EnabledMakers() abort$/;"	f
neomake#makers#ft#dockerfile#hadolint	plugged/neomake/autoload/neomake/makers/ft/dockerfile.vim	/^function! neomake#makers#ft#dockerfile#hadolint() abort$/;"	f
neomake#makers#ft#elixir#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#EnabledMakers() abort$/;"	f
neomake#makers#ft#elixir#PostprocessCredo	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#PostprocessCredo(entry) abort$/;"	f
neomake#makers#ft#elixir#PostprocessEnforceMaxBufferLine	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#PostprocessEnforceMaxBufferLine(entry) abort$/;"	f
neomake#makers#ft#elixir#credo	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#credo() abort$/;"	f
neomake#makers#ft#elixir#dogma	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#dogma() abort$/;"	f
neomake#makers#ft#elixir#elixir	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#elixir() abort$/;"	f
neomake#makers#ft#elixir#mix	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#mix() abort$/;"	f
neomake#makers#ft#elm#ElmMakeProcessOutput	plugged/neomake/autoload/neomake/makers/ft/elm.vim	/^function! neomake#makers#ft#elm#ElmMakeProcessOutput(context) abort$/;"	f
neomake#makers#ft#elm#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/elm.vim	/^function! neomake#makers#ft#elm#EnabledMakers() abort$/;"	f
neomake#makers#ft#elm#elmMake	plugged/neomake/autoload/neomake/makers/ft/elm.vim	/^function! neomake#makers#ft#elm#elmMake() abort$/;"	f
neomake#makers#ft#erlang#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/erlang.vim	/^function! neomake#makers#ft#erlang#EnabledMakers() abort$/;"	f
neomake#makers#ft#erlang#GlobPaths	plugged/neomake/autoload/neomake/makers/ft/erlang.vim	/^function! neomake#makers#ft#erlang#GlobPaths() abort$/;"	f
neomake#makers#ft#erlang#erlc	plugged/neomake/autoload/neomake/makers/ft/erlang.vim	/^function! neomake#makers#ft#erlang#erlc() abort$/;"	f
neomake#makers#ft#fish#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/fish.vim	/^function! neomake#makers#ft#fish#EnabledMakers() abort$/;"	f
neomake#makers#ft#fish#fish	plugged/neomake/autoload/neomake/makers/ft/fish.vim	/^function! neomake#makers#ft#fish#fish() abort$/;"	f
neomake#makers#ft#fortran#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/fortran.vim	/^function! neomake#makers#ft#fortran#EnabledMakers() abort$/;"	f
neomake#makers#ft#fortran#gfortran	plugged/neomake/autoload/neomake/makers/ft/fortran.vim	/^function! neomake#makers#ft#fortran#gfortran() abort$/;"	f
neomake#makers#ft#fortran#ifort	plugged/neomake/autoload/neomake/makers/ft/fortran.vim	/^function! neomake#makers#ft#fortran#ifort() abort$/;"	f
neomake#makers#ft#go#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#EnabledMakers() abort$/;"	f
neomake#makers#ft#go#go	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#go() abort$/;"	f
neomake#makers#ft#go#golint	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#golint() abort$/;"	f
neomake#makers#ft#go#gometalinter	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#gometalinter() abort$/;"	f
neomake#makers#ft#go#govet	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#govet() abort$/;"	f
neomake#makers#ft#haml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/haml.vim	/^function! neomake#makers#ft#haml#EnabledMakers() abort$/;"	f
neomake#makers#ft#haml#hamllint	plugged/neomake/autoload/neomake/makers/ft/haml.vim	/^function! neomake#makers#ft#haml#hamllint() abort$/;"	f
neomake#makers#ft#haskell#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#EnabledMakers() abort$/;"	f
neomake#makers#ft#haskell#HlintEntryProcess	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#HlintEntryProcess(entry) abort$/;"	f
neomake#makers#ft#haskell#ghcmod	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#ghcmod() abort$/;"	f
neomake#makers#ft#haskell#hdevtools	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#hdevtools() abort$/;"	f
neomake#makers#ft#haskell#hlint	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#hlint() abort$/;"	f
neomake#makers#ft#haskell#liquid	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#liquid() abort$/;"	f
neomake#makers#ft#help#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#EnabledMakers() abort$/;"	f
neomake#makers#ft#help#proselint	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#proselint() abort$/;"	f
neomake#makers#ft#help#vimhelplint	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#vimhelplint() abort$/;"	f
neomake#makers#ft#help#writegood	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#writegood() abort$/;"	f
neomake#makers#ft#html#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/html.vim	/^function! neomake#makers#ft#html#EnabledMakers() abort$/;"	f
neomake#makers#ft#html#htmlhint	plugged/neomake/autoload/neomake/makers/ft/html.vim	/^function! neomake#makers#ft#html#htmlhint() abort$/;"	f
neomake#makers#ft#html#tidy	plugged/neomake/autoload/neomake/makers/ft/html.vim	/^function! neomake#makers#ft#html#tidy() abort$/;"	f
neomake#makers#ft#idris#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/idris.vim	/^function! neomake#makers#ft#idris#EnabledMakers() abort$/;"	f
neomake#makers#ft#idris#Postprocess	plugged/neomake/autoload/neomake/makers/ft/idris.vim	/^function! neomake#makers#ft#idris#Postprocess(entry) abort$/;"	f
neomake#makers#ft#idris#idris	plugged/neomake/autoload/neomake/makers/ft/idris.vim	/^function! neomake#makers#ft#idris#idris() abort$/;"	f
neomake#makers#ft#jade#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/jade.vim	/^function! neomake#makers#ft#jade#EnabledMakers() abort$/;"	f
neomake#makers#ft#jade#jadelint	plugged/neomake/autoload/neomake/makers/ft/jade.vim	/^function! neomake#makers#ft#jade#jadelint() abort$/;"	f
neomake#makers#ft#jasmine#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/jasmine.vim	/^function! neomake#makers#ft#jasmine#EnabledMakers() abort$/;"	f
neomake#makers#ft#jasmine#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/jasmine.vim	/^function! neomake#makers#ft#jasmine#SupersetOf() abort$/;"	f
neomake#makers#ft#java#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! neomake#makers#ft#java#EnabledMakers() abort$/;"	f
neomake#makers#ft#java#checkstyle	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! neomake#makers#ft#java#checkstyle() abort$/;"	f
neomake#makers#ft#java#javac	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! neomake#makers#ft#java#javac() abort$/;"	f
neomake#makers#ft#javascript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#EnabledMakers() abort$/;"	f
neomake#makers#ft#javascript#FlowProcess	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#FlowProcess(entry) abort$/;"	f
neomake#makers#ft#javascript#eslint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#eslint() abort$/;"	f
neomake#makers#ft#javascript#eslint_d	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#eslint_d() abort$/;"	f
neomake#makers#ft#javascript#flow	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#flow() abort$/;"	f
neomake#makers#ft#javascript#gjslint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#gjslint() abort$/;"	f
neomake#makers#ft#javascript#jscs	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#jscs() abort$/;"	f
neomake#makers#ft#javascript#jshint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#jshint() abort$/;"	f
neomake#makers#ft#javascript#rjsx	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#rjsx() abort$/;"	f
neomake#makers#ft#javascript#semistandard	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#semistandard() abort$/;"	f
neomake#makers#ft#javascript#standard	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#standard() abort$/;"	f
neomake#makers#ft#javascript#stylelint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#stylelint() abort$/;"	f
neomake#makers#ft#javascript#tsc	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#tsc() abort$/;"	f
neomake#makers#ft#javascript#xo	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#xo() abort$/;"	f
neomake#makers#ft#json#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#EnabledMakers() abort$/;"	f
neomake#makers#ft#json#eslint	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#eslint() abort$/;"	f
neomake#makers#ft#json#eslint_d	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#eslint_d() abort$/;"	f
neomake#makers#ft#json#jsonlint	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#jsonlint() abort$/;"	f
neomake#makers#ft#json#jsonlintpy	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#jsonlintpy() abort$/;"	f
neomake#makers#ft#jsx#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#EnabledMakers() abort$/;"	f
neomake#makers#ft#jsx#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#SupersetOf() abort$/;"	f
neomake#makers#ft#jsx#jsxhint	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#jsxhint() abort$/;"	f
neomake#makers#ft#jsx#stylelint	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#stylelint() abort$/;"	f
neomake#makers#ft#julia#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/julia.vim	/^function! neomake#makers#ft#julia#EnabledMakers() abort$/;"	f
neomake#makers#ft#julia#lint	plugged/neomake/autoload/neomake/makers/ft/julia.vim	/^function! neomake#makers#ft#julia#lint() abort$/;"	f
neomake#makers#ft#less#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/less.vim	/^function! neomake#makers#ft#less#EnabledMakers() abort$/;"	f
neomake#makers#ft#less#lessc	plugged/neomake/autoload/neomake/makers/ft/less.vim	/^function! neomake#makers#ft#less#lessc() abort$/;"	f
neomake#makers#ft#less#stylelint	plugged/neomake/autoload/neomake/makers/ft/less.vim	/^function! neomake#makers#ft#less#stylelint() abort$/;"	f
neomake#makers#ft#lex#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/lex.vim	/^function! neomake#makers#ft#lex#EnabledMakers() abort$/;"	f
neomake#makers#ft#lex#flex	plugged/neomake/autoload/neomake/makers/ft/lex.vim	/^function! neomake#makers#ft#lex#flex() abort$/;"	f
neomake#makers#ft#lua#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#EnabledMakers() abort$/;"	f
neomake#makers#ft#lua#PostprocessLuacheck	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#PostprocessLuacheck(entry) abort$/;"	f
neomake#makers#ft#lua#luac	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#luac() abort$/;"	f
neomake#makers#ft#lua#luacheck	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#luacheck() abort$/;"	f
neomake#makers#ft#mail#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/mail.vim	/^function! neomake#makers#ft#mail#EnabledMakers() abort$/;"	f
neomake#makers#ft#mail#proselint	plugged/neomake/autoload/neomake/makers/ft/mail.vim	/^function! neomake#makers#ft#mail#proselint() abort$/;"	f
neomake#makers#ft#markdown#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#EnabledMakers() abort$/;"	f
neomake#makers#ft#markdown#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#SupersetOf() abort$/;"	f
neomake#makers#ft#markdown#alex	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#alex() abort$/;"	f
neomake#makers#ft#markdown#markdownlint	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#markdownlint() abort$/;"	f
neomake#makers#ft#markdown#mdl	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#mdl() abort$/;"	f
neomake#makers#ft#matlab#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/matlab.vim	/^function! neomake#makers#ft#matlab#EnabledMakers() abort$/;"	f
neomake#makers#ft#matlab#mlint	plugged/neomake/autoload/neomake/makers/ft/matlab.vim	/^function! neomake#makers#ft#matlab#mlint() abort$/;"	f
neomake#makers#ft#moon#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/moon.vim	/^function! neomake#makers#ft#moon#EnabledMakers() abort$/;"	f
neomake#makers#ft#moon#moonc	plugged/neomake/autoload/neomake/makers/ft/moon.vim	/^function! neomake#makers#ft#moon#moonc() abort$/;"	f
neomake#makers#ft#neomake_tests#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#EnabledMakers() abort$/;"	f
neomake#makers#ft#neomake_tests#echo_args	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#echo_args() abort$/;"	f
neomake#makers#ft#neomake_tests#echo_maker	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#echo_maker() abort$/;"	f
neomake#makers#ft#neomake_tests#error_maker	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#error_maker() abort$/;"	f
neomake#makers#ft#neomake_tests#maker_with_nonstring_exe	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#maker_with_nonstring_exe() abort$/;"	f
neomake#makers#ft#neomake_tests#maker_without_exe	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#maker_without_exe() abort$/;"	f
neomake#makers#ft#neomake_tests#process_output_error	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#process_output_error() abort$/;"	f
neomake#makers#ft#neomake_tests#true	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#true() abort$/;"	f
neomake#makers#ft#nim#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/nim.vim	/^function! neomake#makers#ft#nim#EnabledMakers() abort$/;"	f
neomake#makers#ft#nim#nim	plugged/neomake/autoload/neomake/makers/ft/nim.vim	/^function! neomake#makers#ft#nim#nim() abort$/;"	f
neomake#makers#ft#nix#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/nix.vim	/^function! neomake#makers#ft#nix#EnabledMakers() abort$/;"	f
neomake#makers#ft#nix#nix_instantiate	plugged/neomake/autoload/neomake/makers/ft/nix.vim	/^function! neomake#makers#ft#nix#nix_instantiate() abort$/;"	f
neomake#makers#ft#node#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/node.vim	/^function! neomake#makers#ft#node#EnabledMakers() abort$/;"	f
neomake#makers#ft#node#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/node.vim	/^function! neomake#makers#ft#node#SupersetOf() abort$/;"	f
neomake#makers#ft#objc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#EnabledMakers() abort$/;"	f
neomake#makers#ft#objc#clang	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#clang() abort$/;"	f
neomake#makers#ft#objc#clangcheck	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#clangcheck() abort$/;"	f
neomake#makers#ft#objc#clangtidy	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#clangtidy() abort$/;"	f
neomake#makers#ft#pandoc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/pandoc.vim	/^function! neomake#makers#ft#pandoc#EnabledMakers() abort$/;"	f
neomake#makers#ft#pandoc#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/pandoc.vim	/^function! neomake#makers#ft#pandoc#SupersetOf() abort$/;"	f
neomake#makers#ft#perl#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#EnabledMakers() abort$/;"	f
neomake#makers#ft#perl#PerlEntryProcess	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#PerlEntryProcess(entry) abort$/;"	f
neomake#makers#ft#perl#perl	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#perl() abort$/;"	f
neomake#makers#ft#perl#perlcritic	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#perlcritic() abort$/;"	f
neomake#makers#ft#php#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#EnabledMakers() abort$/;"	f
neomake#makers#ft#php#php	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#php() abort$/;"	f
neomake#makers#ft#php#phpcs	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#phpcs() abort$/;"	f
neomake#makers#ft#php#phpmd	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#phpmd() abort$/;"	f
neomake#makers#ft#php#phpstan	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#phpstan() abort$/;"	f
neomake#makers#ft#pug#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/pug.vim	/^function! neomake#makers#ft#pug#EnabledMakers() abort$/;"	f
neomake#makers#ft#pug#puglint	plugged/neomake/autoload/neomake/makers/ft/pug.vim	/^function! neomake#makers#ft#pug#puglint() abort$/;"	f
neomake#makers#ft#puppet#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/puppet.vim	/^function! neomake#makers#ft#puppet#EnabledMakers() abort$/;"	f
neomake#makers#ft#puppet#puppet	plugged/neomake/autoload/neomake/makers/ft/puppet.vim	/^function! neomake#makers#ft#puppet#puppet() abort$/;"	f
neomake#makers#ft#puppet#puppetlint	plugged/neomake/autoload/neomake/makers/ft/puppet.vim	/^function! neomake#makers#ft#puppet#puppetlint() abort$/;"	f
neomake#makers#ft#purescript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/purescript.vim	/^function! neomake#makers#ft#purescript#EnabledMakers() abort$/;"	f
neomake#makers#ft#purescript#PSProcessOutput	plugged/neomake/autoload/neomake/makers/ft/purescript.vim	/^function! neomake#makers#ft#purescript#PSProcessOutput(context) abort$/;"	f
neomake#makers#ft#purescript#pulp	plugged/neomake/autoload/neomake/makers/ft/purescript.vim	/^function! neomake#makers#ft#purescript#pulp() abort$/;"	f
neomake#makers#ft#python#DetectPythonVersion	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#DetectPythonVersion() abort$/;"	f
neomake#makers#ft#python#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#EnabledMakers() abort$/;"	f
neomake#makers#ft#python#FilterPythonWarnings	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#FilterPythonWarnings(lines, context) abort$/;"	f
neomake#makers#ft#python#Flake8EntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#Flake8EntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#Pep8EntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#Pep8EntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#PylamaEntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#PylamaEntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#PylintEntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#PylintEntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#flake8	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#flake8() abort$/;"	f
neomake#makers#ft#python#frosted	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#frosted() abort$/;"	f
neomake#makers#ft#python#mypy	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#mypy() abort$/;"	f
neomake#makers#ft#python#pep257	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pep257() abort$/;"	f
neomake#makers#ft#python#pep8	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pep8() abort$/;"	f
neomake#makers#ft#python#project_root_files	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^let neomake#makers#ft#python#project_root_files = ['setup.cfg', 'tox.ini']$/;"	v
neomake#makers#ft#python#py3kwarn	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#py3kwarn() abort$/;"	f
neomake#makers#ft#python#pycodestyle	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pycodestyle() abort$/;"	f
neomake#makers#ft#python#pydocstyle	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pydocstyle() abort$/;"	f
neomake#makers#ft#python#pyflakes	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pyflakes() abort$/;"	f
neomake#makers#ft#python#pylama	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pylama() abort$/;"	f
neomake#makers#ft#python#pylint	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pylint() abort$/;"	f
neomake#makers#ft#python#python	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#python() abort$/;"	f
neomake#makers#ft#python#vulture	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#vulture() abort$/;"	f
neomake#makers#ft#racket#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/racket.vim	/^function! neomake#makers#ft#racket#EnabledMakers() abort$/;"	f
neomake#makers#ft#racket#raco	plugged/neomake/autoload/neomake/makers/ft/racket.vim	/^function! neomake#makers#ft#racket#raco() abort$/;"	f
neomake#makers#ft#rst#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#EnabledMakers() abort$/;"	f
neomake#makers#ft#rst#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#SupersetOf() abort$/;"	f
neomake#makers#ft#rst#rstcheck	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#rstcheck() abort$/;"	f
neomake#makers#ft#rst#rstlint	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#rstlint() abort$/;"	f
neomake#makers#ft#rst#sphinx	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#sphinx() abort$/;"	f
neomake#makers#ft#ruby#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#EnabledMakers() abort$/;"	f
neomake#makers#ft#ruby#RubocopEntryProcess	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#RubocopEntryProcess(entry) abort$/;"	f
neomake#makers#ft#ruby#jruby	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#jruby() abort$/;"	f
neomake#makers#ft#ruby#mri	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#mri() abort$/;"	f
neomake#makers#ft#ruby#reek	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#reek() abort$/;"	f
neomake#makers#ft#ruby#rubocop	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#rubocop() abort$/;"	f
neomake#makers#ft#ruby#rubocop_rails	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#rubocop_rails() abort$/;"	f
neomake#makers#ft#ruby#rubylint	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#rubylint() abort$/;"	f
neomake#makers#ft#rust#CargoProcessOutput	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#CargoProcessOutput(context) abort$/;"	f
neomake#makers#ft#rust#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#EnabledMakers() abort$/;"	f
neomake#makers#ft#rust#FillErrorFromSpan	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#FillErrorFromSpan(error, span) abort$/;"	f
neomake#makers#ft#rust#cargo	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#cargo() abort$/;"	f
neomake#makers#ft#rust#rustc	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#rustc() abort$/;"	f
neomake#makers#ft#scala#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#EnabledMakers() abort$/;"	f
neomake#makers#ft#scala#fsc	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#fsc() abort$/;"	f
neomake#makers#ft#scala#scalac	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#scalac() abort$/;"	f
neomake#makers#ft#scala#scalastyle	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#scalastyle() abort$/;"	f
neomake#makers#ft#scss#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#EnabledMakers() abort$/;"	f
neomake#makers#ft#scss#sasslint	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#sasslint() abort$/;"	f
neomake#makers#ft#scss#scsslint	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#scsslint() abort$/;"	f
neomake#makers#ft#scss#stylelint	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#stylelint() abort$/;"	f
neomake#makers#ft#serpent#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/serpent.vim	/^function! neomake#makers#ft#serpent#EnabledMakers() abort$/;"	f
neomake#makers#ft#serpent#serplint	plugged/neomake/autoload/neomake/makers/ft/serpent.vim	/^function! neomake#makers#ft#serpent#serplint() abort$/;"	f
neomake#makers#ft#sh#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#EnabledMakers() abort$/;"	f
neomake#makers#ft#sh#checkbashisms	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#checkbashisms() abort$/;"	f
neomake#makers#ft#sh#dash	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#dash() abort$/;"	f
neomake#makers#ft#sh#sh	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#sh() abort$/;"	f
neomake#makers#ft#sh#shellcheck	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#shellcheck() abort$/;"	f
neomake#makers#ft#slim#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/slim.vim	/^function! neomake#makers#ft#slim#EnabledMakers() abort$/;"	f
neomake#makers#ft#slim#slimlint	plugged/neomake/autoload/neomake/makers/ft/slim.vim	/^function! neomake#makers#ft#slim#slimlint() abort$/;"	f
neomake#makers#ft#sml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/sml.vim	/^function! neomake#makers#ft#sml#EnabledMakers() abort$/;"	f
neomake#makers#ft#sml#smlnj	plugged/neomake/autoload/neomake/makers/ft/sml.vim	/^function! neomake#makers#ft#sml#smlnj() abort$/;"	f
neomake#makers#ft#solidity#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/solidity.vim	/^function! neomake#makers#ft#solidity#EnabledMakers() abort$/;"	f
neomake#makers#ft#solidity#solhint	plugged/neomake/autoload/neomake/makers/ft/solidity.vim	/^function! neomake#makers#ft#solidity#solhint() abort$/;"	f
neomake#makers#ft#solidity#solium	plugged/neomake/autoload/neomake/makers/ft/solidity.vim	/^function! neomake#makers#ft#solidity#solium() abort$/;"	f
neomake#makers#ft#spar#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/spar.vim	/^function! neomake#makers#ft#spar#EnabledMakers() abort$/;"	f
neomake#makers#ft#spar#spar	plugged/neomake/autoload/neomake/makers/ft/spar.vim	/^function! neomake#makers#ft#spar#spar() abort$/;"	f
neomake#makers#ft#spec#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/spec.vim	/^function! neomake#makers#ft#spec#EnabledMakers() abort$/;"	f
neomake#makers#ft#spec#rpmlint	plugged/neomake/autoload/neomake/makers/ft/spec.vim	/^function! neomake#makers#ft#spec#rpmlint() abort$/;"	f
neomake#makers#ft#sql#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/sql.vim	/^function! neomake#makers#ft#sql#EnabledMakers() abort$/;"	f
neomake#makers#ft#sql#sqlint	plugged/neomake/autoload/neomake/makers/ft/sql.vim	/^function! neomake#makers#ft#sql#sqlint() abort$/;"	f
neomake#makers#ft#stylus#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/stylus.vim	/^function! neomake#makers#ft#stylus#EnabledMakers() abort$/;"	f
neomake#makers#ft#stylus#stylint	plugged/neomake/autoload/neomake/makers/ft/stylus.vim	/^function! neomake#makers#ft#stylus#stylint() abort$/;"	f
neomake#makers#ft#swift#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#EnabledMakers() abort$/;"	f
neomake#makers#ft#swift#swiftc	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#swiftc() abort$/;"	f
neomake#makers#ft#swift#swiftpm	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#swiftpm() abort$/;"	f
neomake#makers#ft#swift#swiftpmtest	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#swiftpmtest() abort$/;"	f
neomake#makers#ft#tcl#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/tcl.vim	/^function! neomake#makers#ft#tcl#EnabledMakers() abort$/;"	f
neomake#makers#ft#tcl#nagelfar	plugged/neomake/autoload/neomake/makers/ft/tcl.vim	/^function! neomake#makers#ft#tcl#nagelfar() abort$/;"	f
neomake#makers#ft#tex#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#EnabledMakers() abort$/;"	f
neomake#makers#ft#tex#chktex	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#chktex() abort$/;"	f
neomake#makers#ft#tex#lacheck	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#lacheck() abort$/;"	f
neomake#makers#ft#tex#latexrun	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#latexrun() abort$/;"	f
neomake#makers#ft#tex#pdflatex	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#pdflatex() abort$/;"	f
neomake#makers#ft#tex#proselint	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#proselint() abort$/;"	f
neomake#makers#ft#tex#rubber	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#rubber() abort$/;"	f
neomake#makers#ft#tex#rubberinfo	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#rubberinfo() abort$/;"	f
neomake#makers#ft#text#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#EnabledMakers() abort$/;"	f
neomake#makers#ft#text#PostprocessWritegood	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#PostprocessWritegood(entry) abort$/;"	f
neomake#makers#ft#text#proselint	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#proselint() abort$/;"	f
neomake#makers#ft#text#writegood	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#writegood() abort$/;"	f
neomake#makers#ft#toml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/toml.vim	/^function! neomake#makers#ft#toml#EnabledMakers() abort$/;"	f
neomake#makers#ft#toml#tomlcheck	plugged/neomake/autoload/neomake/makers/ft/toml.vim	/^function! neomake#makers#ft#toml#tomlcheck() abort$/;"	f
neomake#makers#ft#tsx#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/tsx.vim	/^function! neomake#makers#ft#tsx#EnabledMakers() abort$/;"	f
neomake#makers#ft#tsx#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/tsx.vim	/^function! neomake#makers#ft#tsx#SupersetOf() abort$/;"	f
neomake#makers#ft#tsx#tsc	plugged/neomake/autoload/neomake/makers/ft/tsx.vim	/^function! neomake#makers#ft#tsx#tsc() abort$/;"	f
neomake#makers#ft#typescript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/typescript.vim	/^function! neomake#makers#ft#typescript#EnabledMakers() abort$/;"	f
neomake#makers#ft#typescript#tsc	plugged/neomake/autoload/neomake/makers/ft/typescript.vim	/^function! neomake#makers#ft#typescript#tsc() abort$/;"	f
neomake#makers#ft#typescript#tslint	plugged/neomake/autoload/neomake/makers/ft/typescript.vim	/^function! neomake#makers#ft#typescript#tslint() abort$/;"	f
neomake#makers#ft#verilog#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/verilog.vim	/^function! neomake#makers#ft#verilog#EnabledMakers() abort$/;"	f
neomake#makers#ft#verilog#iverilog	plugged/neomake/autoload/neomake/makers/ft/verilog.vim	/^function! neomake#makers#ft#verilog#iverilog() abort$/;"	f
neomake#makers#ft#vhdl#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/vhdl.vim	/^function! neomake#makers#ft#vhdl#EnabledMakers() abort$/;"	f
neomake#makers#ft#vhdl#ghdl	plugged/neomake/autoload/neomake/makers/ft/vhdl.vim	/^function! neomake#makers#ft#vhdl#ghdl() abort$/;"	f
neomake#makers#ft#vim#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#EnabledMakers() abort$/;"	f
neomake#makers#ft#vim#PostprocessVimlint	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#PostprocessVimlint(entry) abort$/;"	f
neomake#makers#ft#vim#vimlint	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#vimlint() abort$/;"	f
neomake#makers#ft#vim#vint	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#vint() abort$/;"	f
neomake#makers#ft#vue#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#EnabledMakers() abort$/;"	f
neomake#makers#ft#vue#eslint	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#eslint() abort$/;"	f
neomake#makers#ft#vue#eslint_d	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#eslint_d() abort$/;"	f
neomake#makers#ft#vue#semistandard	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#semistandard() abort$/;"	f
neomake#makers#ft#vue#standard	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#standard() abort$/;"	f
neomake#makers#ft#xml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/xml.vim	/^function! neomake#makers#ft#xml#EnabledMakers() abort$/;"	f
neomake#makers#ft#xml#xmllint	plugged/neomake/autoload/neomake/makers/ft/xml.vim	/^function! neomake#makers#ft#xml#xmllint() abort$/;"	f
neomake#makers#ft#xslt#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/xslt.vim	/^function! neomake#makers#ft#xslt#EnabledMakers() abort$/;"	f
neomake#makers#ft#xslt#xmllint	plugged/neomake/autoload/neomake/makers/ft/xslt.vim	/^function! neomake#makers#ft#xslt#xmllint() abort$/;"	f
neomake#makers#ft#yacc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/yacc.vim	/^function! neomake#makers#ft#yacc#EnabledMakers() abort$/;"	f
neomake#makers#ft#yacc#bison	plugged/neomake/autoload/neomake/makers/ft/yacc.vim	/^function! neomake#makers#ft#yacc#bison() abort$/;"	f
neomake#makers#ft#yaml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/yaml.vim	/^function! neomake#makers#ft#yaml#EnabledMakers() abort$/;"	f
neomake#makers#ft#yaml#yamllint	plugged/neomake/autoload/neomake/makers/ft/yaml.vim	/^function! neomake#makers#ft#yaml#yamllint() abort$/;"	f
neomake#makers#ft#zsh#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/zsh.vim	/^function! neomake#makers#ft#zsh#EnabledMakers() abort$/;"	f
neomake#makers#ft#zsh#shellcheck	plugged/neomake/autoload/neomake/makers/ft/zsh.vim	/^function! neomake#makers#ft#zsh#shellcheck() abort$/;"	f
neomake#makers#ft#zsh#zsh	plugged/neomake/autoload/neomake/makers/ft/zsh.vim	/^function! neomake#makers#ft#zsh#zsh() abort$/;"	f
neomake#makers#gradle#gradle	plugged/neomake/autoload/neomake/makers/gradle.vim	/^function! neomake#makers#gradle#gradle() abort$/;"	f
neomake#makers#mvn#mvn	plugged/neomake/autoload/neomake/makers/mvn.vim	/^function! neomake#makers#mvn#mvn() abort$/;"	f
neomake#makers#sbt#sbt	plugged/neomake/autoload/neomake/makers/sbt.vim	/^function! neomake#makers#sbt#sbt() abort$/;"	f
neomake#map_makers	plugged/neomake/autoload/neomake.vim	/^function! neomake#map_makers(makers, ft, auto_enabled) abort$/;"	f
neomake#postprocess#GenericLengthPostprocess	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#GenericLengthPostprocess(entry) abort dict$/;"	f
neomake#postprocess#compress_whitespace	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#compress_whitespace(entry) abort$/;"	f
neomake#postprocess#generic_length	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#generic_length(entry) abort dict$/;"	f
neomake#postprocess#generic_length_with_pattern	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#generic_length_with_pattern(entry, pattern) abort$/;"	f
neomake#quickfix#FormatQuickfix	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#FormatQuickfix() abort$/;"	f
neomake#quickfix#disable	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#disable() abort$/;"	f
neomake#quickfix#enable	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#enable(...) abort$/;"	f
neomake#quickfix#is_enabled	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#is_enabled() abort$/;"	f
neomake#quickfix#set_syntax	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#set_syntax(names) abort$/;"	f
neomake#signs#Clean	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#Clean(bufnr, type) abort$/;"	f
neomake#signs#CleanAllOldSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#CleanAllOldSigns(type) abort$/;"	f
neomake#signs#CleanOldSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#CleanOldSigns(bufnr, type) abort$/;"	f
neomake#signs#DefineHighlights	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#DefineHighlights() abort$/;"	f
neomake#signs#DefineSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#DefineSigns() abort$/;"	f
neomake#signs#PlaceSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#PlaceSigns(bufnr, entries, type) abort$/;"	f
neomake#signs#RedefineErrorSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineErrorSign(...) abort$/;"	f
neomake#signs#RedefineInfoSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineInfoSign(...) abort$/;"	f
neomake#signs#RedefineMessageSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineMessageSign(...) abort$/;"	f
neomake#signs#RedefineSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineSign(name, opts) abort$/;"	f
neomake#signs#RedefineWarningSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineWarningSign(...) abort$/;"	f
neomake#signs#Reset	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#Reset(bufnr, type) abort$/;"	f
neomake#signs#ResetFile	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#ResetFile(bufnr) abort$/;"	f
neomake#signs#ResetProject	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#ResetProject() abort$/;"	f
neomake#signs#by_lnum	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#by_lnum(bufnr) abort$/;"	f
neomake#statusline#AddLoclistCount	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#AddLoclistCount(buf, item) abort$/;"	f
neomake#statusline#AddQflistCount	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#AddQflistCount(item) abort$/;"	f
neomake#statusline#DefineHighlights	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#DefineHighlights() abort$/;"	f
neomake#statusline#LoclistCounts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#LoclistCounts(...) abort$/;"	f
neomake#statusline#LoclistStatus	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#LoclistStatus(...) abort$/;"	f
neomake#statusline#QflistCounts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#QflistCounts() abort$/;"	f
neomake#statusline#QflistStatus	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#QflistStatus(...) abort$/;"	f
neomake#statusline#ResetCounts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#ResetCounts() abort$/;"	f
neomake#statusline#ResetCountsForBuf	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#ResetCountsForBuf(...) abort$/;"	f
neomake#statusline#ResetCountsForProject	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#ResetCountsForProject(...) abort$/;"	f
neomake#statusline#clear_cache	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#clear_cache() abort$/;"	f
neomake#statusline#get	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get(bufnr, options) abort$/;"	f
neomake#statusline#get_counts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get_counts(...) abort$/;"	f
neomake#statusline#get_status	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get_status(bufnr, options) abort$/;"	f
neomake#statusline#make_finished	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#make_finished(make_info) abort$/;"	f
neomake#utils#CompressWhitespace	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#CompressWhitespace(entry) abort$/;"	f
neomake#utils#Exists	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#Exists(exe) abort$/;"	f
neomake#utils#ExpandArgs	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#ExpandArgs(args) abort$/;"	f
neomake#utils#FindGlobFile	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#FindGlobFile(glob, ...) abort$/;"	f
neomake#utils#GetHighlight	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#GetHighlight(group, what) abort$/;"	f
neomake#utils#GetSetting	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#GetSetting(key, maker, default, ft, bufnr, ...) abort$/;"	f
neomake#utils#GetSupersetOf	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#GetSupersetOf(ft) abort$/;"	f
neomake#utils#IsRunningWindows	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#IsRunningWindows() abort$/;"	f
neomake#utils#JSONdecode	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#JSONdecode(json) abort$/;"	f
neomake#utils#MakerFromCommand	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#MakerFromCommand(command) abort$/;"	f
neomake#utils#ReverseSynIDattr	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#ReverseSynIDattr(attr) abort$/;"	f
neomake#utils#Slash	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#Slash() abort$/;"	f
neomake#utils#Stringify	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#Stringify(obj) abort$/;"	f
neomake#utils#WideMessage	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#WideMessage(msg) abort " {{{2$/;"	f
neomake#utils#diff_dict	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#diff_dict(old, new) abort$/;"	f
neomake#utils#fix_self_ref	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#fix_self_ref(obj, ...) abort$/;"	f
neomake#utils#fnamemodify	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#fnamemodify(bufnr, modifier) abort$/;"	f
neomake#utils#get_buffer_lines	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_buffer_lines(bufnr) abort$/;"	f
neomake#utils#get_config_fts	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_config_fts(ft, ...) abort$/;"	f
neomake#utils#get_ft_confname	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_ft_confname(ft, ...) abort$/;"	f
neomake#utils#get_project_root	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_project_root(...) abort$/;"	f
neomake#utils#get_verbosity	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_verbosity(...) abort$/;"	f
neomake#utils#highlight_is_defined	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#highlight_is_defined(group) abort$/;"	f
neomake#utils#hook	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#hook(event, context, ...) abort$/;"	f
neomake#utils#load_ft_makers	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#load_ft_makers(ft) abort$/;"	f
neomake#utils#load_global_makers	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#load_global_makers() abort$/;"	f
neomake#utils#parse_highlight	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#parse_highlight(group) abort$/;"	f
neomake#utils#path_sep	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#path_sep() abort$/;"	f
neomake#utils#redir	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#redir(cmd) abort$/;"	f
neomake#utils#shellescape	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#shellescape(arg) abort$/;"	f
neomake#utils#sort_by_col	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#sort_by_col(a, b) abort$/;"	f
neomake#utils#write_tempfile	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#write_tempfile(bufnr, temp_file) abort$/;"	f
neomake#utils#wstrpart	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#wstrpart(mb_string, start, len) abort$/;"	f
neomake_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! s:neomake_automake(event, bufnr) abort$/;"	f
neomake_automake_clean	plugged/neomake/autoload/neomake/configure.vim	/^function! s:neomake_automake_clean(bufnr) abort$/;"	f
neomake_do_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! s:neomake_do_automake(context) abort$/;"	f
neomake_highlights	plugged/neomake/autoload/neomake/highlights.vim	/^augroup neomake_highlights$/;"	a
neomake_signs	plugged/neomake/autoload/neomake/signs.vim	/^augroup neomake_signs$/;"	a
neomake_statusline	plugged/neomake/autoload/neomake/statusline.vim	/^augroup neomake_statusline$/;"	a
neomake_tests	plugged/neomake/tests/include/init.vim	/^  augroup neomake_tests$/;"	a
nestedFun	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^  function nestedFun(){$/;"	f	function:f3
new	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:new(plugin_name) abort$/;"	f
newElt	plugged/tern_for_vim/node_modules/tern/test/cases/browser.js	/^var newElt = document.createElement("div"); \/\/: Element$/;"	v
new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
next	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^      callback: cb,$/;"	p	class:state.lastBufferedRequest
next	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^    var entry = { data: v, next: null };$/;"	p	class:BufferList.var.entry
next	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^    var entry = { data: v, next: this.head };$/;"	p	class:BufferList.var.entry
nextTick	plugged/tern_for_vim/node_modules/process-nextick-args/index.js	/^  module.exports = { nextTick: nextTick };$/;"	p	class:module.exports
nextTick	plugged/tern_for_vim/node_modules/process-nextick-args/index.js	/^function nextTick(fn, arg1, arg2, arg3) {$/;"	f	function:function
noMatch	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var noMatch = \/(.)^\/;$/;"	v
nodeModules	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var nodeModules = {};$/;"	v
nop	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function nop() {}$/;"	f
normalize	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.normalize = require("memory-fs\/lib\/normalize");$/;"	m	class:Resolver
normalize	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^var normalize = pathModule.normalize;$/;"	v
normalize	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.normalize = normalize;$/;"	m	class:MemoryFileSystem
normalize	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^var normalize = require(".\/normalize");$/;"	v
normalize	plugged/tern_for_vim/node_modules/memory-fs/lib/join.js	/^var normalize = require(".\/normalize");$/;"	v
normalize	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^module.exports = function normalize(path) {$/;"	f
normalize	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! s:normalize(buf_name)$/;"	f
normalizeEncoding	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function normalizeEncoding(enc) {$/;"	f
normalizePath	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:normalizePath(path)$/;"	f
normalizePath	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:normalizePath(path)$/;"	f
notModuleRegExp	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^var notModuleRegExp = \/^\\.$|^\\.[\\\\\\\/]|^\\.\\.$|^\\.\\.[\\\/\\\\]|^\\\/|^[A-Z]:[\\\\\\\/]\/i;$/;"	v
nothing	plugged/tern_for_vim/node_modules/tern/test/cases/hint-objlit.js	/^var poison = {focus: 1, blah: 2, nothing: 3};$/;"	p	class:poison
notify	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:notify(event, context) abort$/;"	f
nr2byte	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
num	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var tt = {$/;"	p	class:var.tt
num	plugged/tern_for_vim/node_modules/acorn/src/tokentype.js	/^export const types = {$/;"	p	class:export
numeric	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function numeric(str) {$/;"	f
nvim	plugged/deoplete-typescript/after/plugin/nvim_typescript.vim	/^augroup nvim-typescript "{{{$/;"	a
nvim	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^augroup nvim-typescript "{{{$/;"	a
nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
nvim_exit_handler	plugged/neomake/autoload/neomake.vim	/^function! s:nvim_exit_handler(job_id, data, _event_type) abort$/;"	f
nvim_exit_handler_buffered	plugged/neomake/autoload/neomake.vim	/^function! s:nvim_exit_handler_buffered(job_id, data, _event_type) abort$/;"	f
nvim_job_exit_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
nvim_job_out_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
nvim_output_handler	plugged/neomake/autoload/neomake.vim	/^    function! s:nvim_output_handler(job_id, data, event_type) abort$/;"	f
nvim_output_handler_cb	plugged/neomake/autoload/neomake.vim	/^    function! s:nvim_output_handler_cb(_timer) abort$/;"	f
nvim_typescript#DefaultKeyMap	plugged/deoplete-typescript/autoload/nvim_typescript.vim	/^function! nvim_typescript#DefaultKeyMap()$/;"	f
o	plugged/tern_for_vim/node_modules/tern/test/cases/defineProperty.js	/^var o = {};$/;"	v
o.prop3	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^};$/;"	f
o2	plugged/tern_for_vim/node_modules/tern/test/cases/defineProperty.js	/^var o2 = {};$/;"	v
objectToString	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function objectToString(o) {$/;"	f
offset	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^Position.prototype.offset = function offset (n) {$/;"	m	class:Position
offset	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^    var fdata = {type: "part", name: "file", text: text, offset: start};$/;"	p	class:exports.runTests.fdata
omnifuncs	init.vim	/^augroup omnifuncs$/;"	a
on	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.on = function (ev, fn) {$/;"	m	class:Readable
onComment	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  onToken: null,$/;"	p	class:getLineInfo.defaultOptions
onComment	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  onToken: null,$/;"	p	class:from
onCorkedFinish	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function onCorkedFinish(corkReq, state, err) {$/;"	f
onEndNT	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^function onEndNT(self) {$/;"	f
onEofChunk	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function onEofChunk(stream, state) {$/;"	f
onInsertedSemicolon	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  sourceType: "script",$/;"	p	class:getLineInfo.defaultOptions
onInsertedSemicolon	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  sourceType: "script",$/;"	p	class:from
onResolved	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	function onResolved(err, result) {$/;"	f
onToken	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  locations: false,$/;"	p	class:getLineInfo.defaultOptions
onToken	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  locations: false,$/;"	p	class:from
onTrailingComma	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  onInsertedSemicolon: null,$/;"	p	class:getLineInfo.defaultOptions
onTrailingComma	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  onInsertedSemicolon: null,$/;"	p	class:from
on_complete_done	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_complete_done() abort$/;"	f
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def on_event(self, context):$/;"	m	class:DeopleteHandlers
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def on_event(self, context):$/;"	m	class:Deoplete
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def on_event(self, context):$/;"	m	class:Parent
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def on_event(self, context):$/;"	m	class:Base
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_event(self, context):$/;"	m	class:Source
on_init	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def on_init(self, context):$/;"	m	class:Source
on_init	plugged/deoplete-typescript/rplugin/python3/denite/source/TSWorkspaceSymbol.py	/^    def on_init(self, context):$/;"	m	class:Source
on_insert_leave	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_leave() abort$/;"	f
onclose	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function onclose() {$/;"	f	function:function
ondata	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function ondata(chunk) {$/;"	f	function:function
onend	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^function onend() {$/;"	f
onend	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function onend() {$/;"	f	function:function
onerror	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function onerror(er) {$/;"	f	function:function
onfinish	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function onfinish() {$/;"	f	function:function
onunpipe	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function onunpipe(readable, unpipeInfo) {$/;"	f	function:function
onwrite	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^  this.onwrite = function (er) {$/;"	m	class:WritableState
onwrite	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function onwrite(stream, er) {$/;"	f
onwriteDrain	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function onwriteDrain(stream, state) {$/;"	f
onwriteError	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function onwriteError(stream, state, sync, er, cb) {$/;"	f
onwriteStateUpdate	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function onwriteStateUpdate(state) {$/;"	f
open	plugged/vimproc.vim/src/proc_w32.c	182;"	d	file:
openFile	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function openFile(args) {$/;"	f
openFromList	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:openFromList(filelist)$/;"	f
opener	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^opener = request.build_opener(request.ProxyHandler({}))$/;"	v
opener	plugged/tern_for_vim/script/tern.py	/^opener = request.build_opener(request.ProxyHandler({}))$/;"	v
openpty	plugged/vimproc.vim/src/ptytty.c	/^openpty(int *amaster, int *aslave, char *name,$/;"	f
or	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:or(xs) abort$/;"	f
out	plugged/tern_for_vim/node_modules/tern/test/condense/ref_in_type.js	/^function out(a) { return a.bar + 10; }$/;"	f
outline_info.extract_headings	plugged/tsuquyomi/autoload/unite/sources/outline/typescript.vim	/^function! s:outline_info.extract_headings(context)$/;"	f
output_handler	plugged/neomake/autoload/neomake.vim	/^function! s:output_handler(jobinfo, data, event_type, trim_CR) abort$/;"	f
output_handler_queued	plugged/neomake/autoload/neomake.vim	/^function! s:output_handler_queued(jobinfo, data, event_type, trim_CR) abort$/;"	f
overlap_length	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^def overlap_length(left, right):$/;"	f
oy	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var oy = 1;$/;"	v
p3	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var p3 = Promise.resolve(10);$/;"	v
p4	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var p4 = Promise.resolve(Promise.resolve(10));$/;"	v
p5	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var p5 = Promise.resolve(arg5);$/;"	v
p6	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var p6 = Promise.resolve('t').then(function() {$/;"	v
p7	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var p7 = Promise.resolve().then(function() {$/;"	v
p8	plugged/tern_for_vim/node_modules/tern/test/cases/promise.js	/^var p8 = Promise.resolve();$/;"	v
pad_between_letters	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
paramProperties	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function paramProperties(employee) {$/;"	f
parentDirectoryNixEndRegExp1	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryNixEndRegExp1 = \/^\\\/[^\\\/]+\\\/+\\.\\.$\/;$/;"	v
parentDirectoryNixEndRegExp2	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryNixEndRegExp2 = \/\\\/+[^\\\/]+\\\/+\\.\\.$\/;$/;"	v
parentDirectoryNixEndRegExp3	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryNixEndRegExp3 = \/^\\\/+\\.\\.$\/;$/;"	v
parentDirectoryNixMiddleRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryNixMiddleRegExp = \/(^|\\\/[^\\\/]+)\\\/+\\.\\.\\\/+\/;$/;"	v
parentDirectoryWinEndRegExp1	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryWinEndRegExp1 = \/([A-Z]:\\\\)\\\\*[^\\\\]+\\\\+\\.\\.$\/i;$/;"	v
parentDirectoryWinEndRegExp2	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryWinEndRegExp2 = \/\\\\+[^\\\\]+\\\\+\\.\\.$\/;$/;"	v
parentDirectoryWinMiddleRegExp	plugged/tern_for_vim/node_modules/memory-fs/lib/normalize.js	/^var parentDirectoryWinMiddleRegExp = \/\\\\+[^\\\\]+\\\\+\\.\\.\\\\\/;$/;"	v
parse	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.parse = function parse(identifier) {$/;"	m	class:Resolver
parseCommaParts	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function parseCommaParts(str) {$/;"	f
parseResponse	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function parseResponse(returnedData) {$/;"	f
parseType	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^function parseType(type) {$/;"	f
parse_back_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_back_quote(script, i) abort "{{{$/;"	f
parse_block	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_block(script) abort "{{{$/;"	f
parse_buffer_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_buffer_pattern(b, pattern):$/;"	f
parse_cmdline	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_cmdline(cmdline) abort "{{{$/;"	f
parse_double_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_double_quote(script, i) abort "{{{$/;"	f
parse_equal	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_equal(script) abort "{{{$/;"	f
parse_events_from_args	plugged/neomake/autoload/neomake/configure.vim	/^function! s:parse_events_from_args(config, string_or_dict_config, ...) abort$/;"	f
parse_file_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_file_pattern(f, pattern):$/;"	f
parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_redirection	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_redirection(script) abort "{{{$/;"	f
parse_single_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_single_quote(script, i) abort "{{{$/;"	f
parse_tilde	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_tilde(script) abort "{{{$/;"	f
parse_variables	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_variables(script) abort "{{{$/;"	f
parse_wildcard	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_wildcard(script) abort "{{{$/;"	f
parser	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^parser = argparse.ArgumentParser($/;"	v
partition	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
patchLchmod	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function patchLchmod (fs) {$/;"	f	function:function
patchLutimes	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function patchLutimes (fs) {$/;"	f	function:patchLchmod
path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
path	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/ConcordMainPlugin.js	/^var path = require("path");$/;"	v
path	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/MainFieldPlugin.js	/^var path = require("path");$/;"	v
path	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^		context: context,$/;"	p	class:var.obj
path	plugged/tern_for_vim/node_modules/resolve-from/index.js	/^var path = require('path');$/;"	v
path	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^var path = require("path");$/;"	v
path2directory	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pathModule	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^var pathModule = require('path');$/;"	v
pathToArray	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function pathToArray(path) {$/;"	f
path_extensions	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:path_extensions() abort$/;"	f
path_extensions	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_extensions() abort$/;"	f
path_separator	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:path_separator() abort$/;"	f
path_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_separator() abort$/;"	f
pause	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.pause = function () {$/;"	m	class:Readable
pcall	plugged/neomake/autoload/neomake.vim	/^function! s:pcall(fn, args) abort$/;"	f
pencil	init.vim	/^augroup pencil$/;"	a
permutations	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
pgroup_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:pgroup_open(statements, is_pty, npipe) abort "{{{$/;"	f
pid	plugged/vimproc.vim/tools/fork.py	/^pid = os.fork()$/;"	v
pipe	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.pipe = function (dest, pipeOpts) {$/;"	m	class:Readable
pipe	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.pipe = function () {$/;"	m	class:Writable
pipeOnDrain	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function pipeOnDrain(src) {$/;"	f
pipe_data_received	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def pipe_data_received(self, fd, data):$/;"	m	class:Process
plineopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:plineopen(npipe, commands, is_pty) abort "{{{$/;"	f
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin	plugged/tern_for_vim/node_modules/tapable/lib/Tapable.js	/^Tapable.prototype.plugin = function plugin(name, fn) {$/;"	m	class:Tapable
plugin_name	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:plugin_name() abort dict$/;"	f
plugins	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  preserveParens: false,$/;"	p	class:getLineInfo.defaultOptions
plugins	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  preserveParens: false,$/;"	p	class:from
pna	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^var pna = require('process-nextick-args');$/;"	v
pna	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var pna = require('process-nextick-args');$/;"	v
pna	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var pna = require('process-nextick-args');$/;"	v
pna	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/destroy.js	/^var pna = require('process-nextick-args');$/;"	v
poll	plugged/vimproc.vim/src/fakepoll.h	/^int poll(struct pollfd *pollSet, int pollCount, int pollTimeout)$/;"	f
pollfd	plugged/vimproc.vim/src/fakepoll.h	/^typedef struct pollfd {$/;"	s
pollfd_t	plugged/vimproc.vim/src/fakepoll.h	/^} pollfd_t;$/;"	t	typeref:struct:pollfd
pop	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:pop(list) abort$/;"	f
popPathSeqment	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/getPaths.js	/^function popPathSeqment(pathInArray) {$/;"	f
posix	plugged/tern_for_vim/node_modules/path-is-absolute/index.js	/^function posix(path) {$/;"	f
postLink	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var defaults = {$/;"	p	class:defaults
pp	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m
pp	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^};$/;"	m
pp	plugged/tern_for_vim/node_modules/acorn/src/expression.js	/^}$/;"	m
pp	plugged/tern_for_vim/node_modules/acorn/src/expression.js	/^}$/;"	m	class:pp
pp	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	m
pp	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^}$/;"	m
pp	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^}$/;"	m	class:pp
pp	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^}$/;"	m	class:pp.pp
pp	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	m
pp	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	m	class:return
pp$1	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m
pp$1	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$1
pp$1	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$1.pp$1
pp$1	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$1.pp$1.pp$1
pp$1	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$1.pp$1.pp$1.next.next.next.next.var
pp$1	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$1.pp$1.pp$1.next.next.next.next.var.pp$1
pp$1.checkExport	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$1.checkVariableExport	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$1.isAsyncFunction	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$1.isLet	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var switchLabel = {kind: "switch"};$/;"	f
pp$1.parseExportSpecifiers	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$2.checkLVal	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$2.parseBindingAtom	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$2.parseBindingListItem	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$3	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m
pp$3	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$3
pp$3	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$3.parseSubscripts
pp$3.parseAwait	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$3.parseExprSubscripts	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$3.parseParenArrowList	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$3.parseParenItem	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$5	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m
pp$5.finishNode	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$5.finishNodeAt	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$6	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m
pp$7	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  }$/;"	m
pp$7	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m
pp$7	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$7
pp$7.fullCharCodeAtPos	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$7.readToken	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f	function:pp$7
pp$7.readToken_slash	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f	function:pp$7.pp$7
pp$7.readWord	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$7.skipBlockComment	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$7.skipLineComment	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp$7.skipSpace	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp.afterTrailingComma	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp.afterTrailingComma	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	f
pp.checkExport	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^}$/;"	f
pp.checkLVal	plugged/tern_for_vim/node_modules/acorn/src/lval.js	/^}$/;"	f
pp.checkVariableExport	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^}$/;"	f
pp.checkYieldAwaitInDefaultParams	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f	function:pp
pp.checkYieldAwaitInDefaultParams	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	f
pp.curContext	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^  }$/;"	f
pp.expectContextual	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp.expectContextual	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	f
pp.finishNode	plugged/tern_for_vim/node_modules/acorn/src/node.js	/^}$/;"	f
pp.finishNodeAt	plugged/tern_for_vim/node_modules/acorn/src/node.js	/^}$/;"	f
pp.fullCharCodeAtPos	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.getToken	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	c
pp.insertSemicolon	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp.insertSemicolon	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	f
pp.isAsyncFunction	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^}$/;"	f
pp.isLet	plugged/tern_for_vim/node_modules/acorn/src/statement.js	/^const loopLabel = {kind: "loop"}, switchLabel = {kind: "switch"}$/;"	f
pp.isSimpleAssignTarget	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp.isSimpleAssignTarget	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	f
pp.nextToken	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.parseAwait	plugged/tern_for_vim/node_modules/acorn/src/expression.js	/^}$/;"	f
pp.parseBindingAtom	plugged/tern_for_vim/node_modules/acorn/src/lval.js	/^}$/;"	f
pp.parseBindingListItem	plugged/tern_for_vim/node_modules/acorn/src/lval.js	/^}$/;"	f
pp.parseExprSubscripts	plugged/tern_for_vim/node_modules/acorn/src/expression.js	/^}$/;"	f
pp.parseParenArrowList	plugged/tern_for_vim/node_modules/acorn/src/expression.js	/^}$/;"	f
pp.parseParenItem	plugged/tern_for_vim/node_modules/acorn/src/expression.js	/^}$/;"	f
pp.readToken	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.readToken_slash	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.semicolon	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
pp.semicolon	plugged/tern_for_vim/node_modules/acorn/src/parseutil.js	/^}$/;"	f
pp.skipBlockComment	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.skipLineComment	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.skipSpace	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^}$/;"	f
pp.startNodeAt	plugged/tern_for_vim/node_modules/acorn/src/node.js	/^}$/;"	f
prefinish	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^function prefinish() {$/;"	f
prefinish	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function prefinish(stream, state) {$/;"	f
prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
prepareIncludes	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function prepareIncludes(ctx) {$/;"	f
prependListener	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function prependListener(emitter, event, fn) {$/;"	f
preserveParens	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  directSourceFile: null,$/;"	p	class:getLineInfo.defaultOptions
preserveParens	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  directSourceFile: null,$/;"	p	class:from
preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
previousUnderscore	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var previousUnderscore = root._;$/;"	v
print	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print(self, expr):$/;"	m	class:Base
print_error	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print_error(self, expr):$/;"	m	class:Base
print_error	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:print_error(string) abort$/;"	f
print_help	plugged/neomake/contrib/vim-checks	/^function print_help() {$/;"	f
process	plugged/vimproc.vim/tools/leak_check.vim	/^  let process = vimproc#pgroup_open('ls')$/;"	v
process	plugged/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('ls && ls')$/;"	v
process	plugged/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('python ' . pwd . '\/fork.py')$/;"	v
process_action_queue	plugged/neomake/autoload/neomake.vim	/^function! s:process_action_queue(event) abort$/;"	f
process_action_queue_timer_cb	plugged/neomake/autoload/neomake.vim	/^function! s:process_action_queue_timer_cb(...) abort$/;"	f
process_exited	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def process_exited(self):$/;"	m	class:Process
process_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
process_pending_output	plugged/neomake/autoload/neomake.vim	/^function! s:process_pending_output(jobinfo, lines, source, ...) abort$/;"	f
product	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:product(lists) abort$/;"	f
program	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  ranges: false,$/;"	p	class:getLineInfo.defaultOptions
program	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  ranges: false,$/;"	p	class:from
progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
projectDir	plugged/tern_for_vim/node_modules/tern/test/util.js	/^var projectDir = path.resolve(__dirname, "..");$/;"	v
prop1	plugged/tern_for_vim/node_modules/tern/test/cases/finddef.js	/^var obj = {$/;"	p	class:obj
prop1	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var o = {$/;"	p	class:o
prop2	plugged/tern_for_vim/node_modules/tern/test/cases/finddef.js	/^  prop1: 10,$/;"	m	class:obj
prop_A	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^A.prototype.prop_A = 1;$/;"	m	class:A
prop_B	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^B.prototype.prop_B = 2;$/;"	m	class:B
prop_C	plugged/tern_for_vim/node_modules/tern/test/cases/new_to_prototype.js	/^C.prototype.prop_C = 3;$/;"	m	class:C
provide	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^Storage.prototype.provide = function(name, provider, callback) {$/;"	m	class:Storage
ptsname_compat	plugged/vimproc.vim/src/ptytty.c	/^ptsname_compat(int fd, char **buf)$/;"	f	file:
purge	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.purge = function(what) {$/;"	m	class:CachedInputFileSystem
purge	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^Storage.prototype.purge = function(what) {$/;"	m	class:Storage
push	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.push = function (chunk, encoding) {$/;"	m	class:Readable
push	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^Transform.prototype.push = function (chunk, encoding) {$/;"	m	class:Transform
push	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  BufferList.prototype.push = function push(v) {$/;"	m	class:BufferList
push	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var push             = ArrayProto.push,$/;"	v
push	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
pushComment	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function pushComment(options, array) {$/;"	f	function:SourceLocation
pushComment	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^function pushComment(options, array) {$/;"	f
pushCx	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.pushCx = function pushCx () {$/;"	m	class:LooseParser
pwd	plugged/vimproc.vim/tools/leak_check2.vim	/^let pwd = fnamemodify(expand('<sfile>'), ':p:h')$/;"	v
query	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^		request: "",$/;"	p	class:Resolver.part
queue_action	plugged/neomake/autoload/neomake.vim	/^function! s:queue_action(events, data) abort$/;"	f
quickInfo	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function quickInfo(args) {$/;"	f
quote_arg	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:quote_arg(arg) abort$/;"	f
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += ["\\n"]$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += ['#### :messages']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += ['#### :version']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += ['']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += ['```']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += ['g:'.k.' = '.string(V)]$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += split(neomake#utils#redir('messages'), '\\n')$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^        let r += split(neomake#utils#redir('version'), '\\n')$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^    let r += ['###### Old-style']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^    let r += ['']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^    let r += ['```']$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^    let r += ['b:neomake: '.(exists('b:neomake') ? s:pprint(b:neomake) : 'unset')]$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^    let r += ['g:neomake: '.(exists('g:neomake') ? s:pprint(g:neomake) : 'unset')]$/;"	v
r	plugged/neomake/autoload/neomake/debug.vim	/^    let r += split(neomake#utils#redir('verb set makeprg?'), '\\n')$/;"	v
r	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    '\\\\':     '\\\\',$/;"	p	class:escapes
range	plugged/tern_for_vim/node_modules/balanced-match/index.js	/^function range(a, b, str) {$/;"	f
ranges	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  onComment: null,$/;"	p	class:getLineInfo.defaultOptions
ranges	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  onComment: null,$/;"	p	class:from
read	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.read = function (n) {$/;"	m	class:Readable
read	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:read(i, endpatterns) abort$/;"	f
read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read(...) dict "{{{$/;"	f
read	plugged/vimproc.vim/src/proc_w32.c	184;"	d	file:
readConfig	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function readConfig() {$/;"	f
readFile	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.readFile = function(path, callback) {$/;"	m	class:CachedInputFileSystem
readFile	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^NodeJsInputFileSystem.prototype.readFile = fs.readFile.bind(fs);$/;"	m	class:NodeJsInputFileSystem
readFile	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^SyncNodeJsInputFileSystem.prototype.readFile = asAsync(fs.readFileSync, fs);$/;"	m	class:SyncNodeJsInputFileSystem
readFile	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.readFile = function(path, optArg, callback) {$/;"	m	class:MemoryFileSystem
readFileSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.readFileSync = function(_path, encoding) {$/;"	m	class:MemoryFileSystem
readFrontMatter	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function readFrontMatter(file) {$/;"	f
readFrontMatter2	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function highlightCode2(code, lang) { if (!lang) return code; if (!CodeMirror.modes.hasOwnProperty(lang)) { try { require("codemirror\/mode\/" + lang + "\/" + lang); } catch(e) { console.log(e.toString());CodeMirror.modes[lang] = false; } } if (CodeMirror.modes[lang]) { var html = ""; CodeMirror.runMode(code, lang, function(token, style) { if (style) html += "<span class=\\"cm-" + style + "\\">" + Mold.escapeHTML(token) + "<\/span>"; else html += Mold.escapeHTML(token); }); return html; } else return code; } function hasFrontMatter2(file) { var fd = fs.openSync(file, "r"); var b = new Buffer(4); var ret = fs.readSync(fd, b, 0, 4, 0) == 4 && b.toString() == "---\\n"; fs.closeSync(fd); return ret; } function readFrontMatter2(file) { if (\/^---\\n\/.test(file)) { var end = file.search(\/\\n---\\n\/); if (end != -1) return {front: yaml.load(file.slice(4, end + 1)) || {}, main: file.slice(end + 5)}; } return {front: {}, main: file}; } function readPosts2(config) { var posts = []; fs.readdirSync("_posts\/").forEach(function(file) { var d = file.match(\/^(\\d{4})-(\\d\\d?)-(\\d\\d?)-(.+)\\.(md|link)$\/); var split = readFrontMatter(fs.readFileSync("_posts\/" + file, "utf8")); var post = split.front; post.date = new Date(d[1], d[2] - 1, d[3]); post.name = d[4]; if (!post.tags) post.tags = []; if (!post.tags.forEach && post.tags.split) post.tags = post.tags.split(\/\\s+\/); if (d[5] == "md") { post.content = marked(split.main); post.url = getURL(config, post); } else if (d[5] == "link") { var escd = Mold.escapeHTML(post.url); post.content = "<p>Read this post at <a href=\\"" + escd + "\\">" + escd + "<\/a>.<\/p>"; post.isLink = true; } posts.push(post); }); posts.sort(function(a, b){return b.date - a.date;}); return posts; }$/;"	f
readJson	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.readJson = function(path, callback) {$/;"	m	class:CachedInputFileSystem
readPosts	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function readPosts(config) {$/;"	f
readPosts2	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^function highlightCode2(code, lang) { if (!lang) return code; if (!CodeMirror.modes.hasOwnProperty(lang)) { try { require("codemirror\/mode\/" + lang + "\/" + lang); } catch(e) { console.log(e.toString());CodeMirror.modes[lang] = false; } } if (CodeMirror.modes[lang]) { var html = ""; CodeMirror.runMode(code, lang, function(token, style) { if (style) html += "<span class=\\"cm-" + style + "\\">" + Mold.escapeHTML(token) + "<\/span>"; else html += Mold.escapeHTML(token); }); return html; } else return code; } function hasFrontMatter2(file) { var fd = fs.openSync(file, "r"); var b = new Buffer(4); var ret = fs.readSync(fd, b, 0, 4, 0) == 4 && b.toString() == "---\\n"; fs.closeSync(fd); return ret; } function readFrontMatter2(file) { if (\/^---\\n\/.test(file)) { var end = file.search(\/\\n---\\n\/); if (end != -1) return {front: yaml.load(file.slice(4, end + 1)) || {}, main: file.slice(end + 5)}; } return {front: {}, main: file}; } function readPosts2(config) { var posts = []; fs.readdirSync("_posts\/").forEach(function(file) { var d = file.match(\/^(\\d{4})-(\\d\\d?)-(\\d\\d?)-(.+)\\.(md|link)$\/); var split = readFrontMatter(fs.readFileSync("_posts\/" + file, "utf8")); var post = split.front; post.date = new Date(d[1], d[2] - 1, d[3]); post.name = d[4]; if (!post.tags) post.tags = []; if (!post.tags.forEach && post.tags.split) post.tags = post.tags.split(\/\\s+\/); if (d[5] == "md") { post.content = marked(split.main); post.url = getURL(config, post); } else if (d[5] == "link") { var escd = Mold.escapeHTML(post.url); post.content = "<p>Read this post at <a href=\\"" + escd + "\\">" + escd + "<\/a>.<\/p>"; post.isLink = true; } posts.push(post); }); posts.sort(function(a, b){return b.date - a.date;}); return posts; }$/;"	f
read_line	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_line(...) dict "{{{$/;"	f
read_lines	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_lines(...) dict "{{{$/;"	f
read_pgroup	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pgroup(...) dict "{{{$/;"	f
read_pipes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pipes(...) dict "{{{$/;"	f
read_wait	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:read_wait(i, wait, endpatterns) abort$/;"	f
readableAddChunk	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {$/;"	f
readdir	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.readdir = function(path, callback) {$/;"	m	class:CachedInputFileSystem
readdir	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^NodeJsInputFileSystem.prototype.readdir = function readdir(path, callback) {$/;"	m	class:NodeJsInputFileSystem
readdir	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^SyncNodeJsInputFileSystem.prototype.readdir = asAsync(function readdirSync(path) {$/;"	m	class:SyncNodeJsInputFileSystem
readdirCb	plugged/tern_for_vim/node_modules/glob/glob.js	/^function readdirCb (self, abs, cb) {$/;"	f	function:Glob.Glob.Glob.Glob.Glob.Glob.Glob.Glob.function
readdirSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.readdirSync = function(_path) {$/;"	m	class:MemoryFileSystem
reader.read	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.read() abort$/;"	f
reader.unread	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.unread() abort$/;"	f
readlink	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.readlink = function(path, callback) {$/;"	m	class:CachedInputFileSystem
readlink	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^NodeJsInputFileSystem.prototype.readlink = fs.readlink.bind(fs);$/;"	m	class:NodeJsInputFileSystem
readlink	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^SyncNodeJsInputFileSystem.prototype.readlink = asAsync(fs.readlinkSync, fs);$/;"	m	class:SyncNodeJsInputFileSystem
readlinkSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.readlinkSync = function(_path) {$/;"	m	class:MemoryFileSystem
realHasInstance	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var realHasInstance;$/;"	v
realHasInstance	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^} else {$/;"	f
realpath	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^exports.realpath = function realpath(p, cache, cb) {$/;"	f
realpath	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! s:realpath(path) abort$/;"	f
realpathSync	plugged/tern_for_vim/node_modules/fs.realpath/index.js	/^function realpathSync (p, cache) {$/;"	f	function:realpath
realpathSync	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^exports.realpathSync = function realpathSync(p, cache) {$/;"	f
reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
recursive	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function recursive(node, state, funcs, base, override) {$/;"	f	function:simple.ancestor
reduceError	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var reduceError = 'Reduce of empty array with no initial value';$/;"	v
regExForName	plugged/deoplete-ternjs/tests/test.js	/^MYAPP.commonMethod = {$/;"	p	class:MYAPP.commonMethod
regExForPhone	plugged/deoplete-ternjs/tests/test.js	/^  regExForName: "", \/\/ define regex for name validation$/;"	p	class:MYAPP.commonMethod
regExpEscape	plugged/tern_for_vim/node_modules/minimatch/minimatch.js	/^function regExpEscape (s) {$/;"	f	function:function
registerDoc	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  findDoc: function(name) { return this.docs[name] },$/;"	m	class:Project
regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
rejected	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/index.js	/^        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }$/;"	f
rejected	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }$/;"	f
rel_info	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^rel_info = json.load(io.StringIO(str(response.read(), 'utf-8')))$/;"	v
relativePath	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:relativePath(from, to)$/;"	f
release_winsock	plugged/vimproc.vim/src/proc_w32.c	/^release_winsock()$/;"	f	file:
reloadFromList	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:reloadFromList(filelist)$/;"	f
reloadProject	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function reloadProject() {$/;"	f
reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
relpath	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:relpath(path) abort$/;"	f
reltime_lastmsg	plugged/neomake/autoload/neomake/log.vim	/^function! s:reltime_lastmsg() abort$/;"	f
removeListener	plugged/deoplete-ternjs/tests/test.js	/^    },$/;"	m	class:MYAPP.event
removeTSExtensions	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! s:removeTSExtensions(path)$/;"	f
remove_ansi_sequences	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
remove_last_separator	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:remove_last_separator(path) abort$/;"	f
remove_last_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:remove_last_separator(path) abort$/;"	f
remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
rename	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  findtype: function() { project.server.showType(project.editor) },$/;"	m	class:commands
renameLocal	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:renameLocal(should_save)$/;"	f
renameLocalSeq	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:renameLocalSeq(index)$/;"	f
renameSymbol	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function renameSymbol(args) {$/;"	f
renameSymbolWithOptions	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:renameSymbolWithOptions(findInComments, findInString)$/;"	f
reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
repair_posix_text	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
replace	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replaceMatcher	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/concord.js	/^	function replaceMatcher(find) {$/;"	f	function:matchModule
replace_first	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo_name	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^repo_name = 'koron\/vim-kaoriya'$/;"	v
request	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^		path: path,$/;"	p	class:var.obj
request	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	var part = {$/;"	p	class:Resolver.part
request	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^    request = gh_release_url$/;"	v
request	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^    request = urllib.request.Request(gh_release_url)$/;"	v
res	plugged/tsuquyomi/test/tsClient/vest/sendRequest.spec.vim	/^    let res = tsuquyomi#tsClient#sendRequest('{"command": "open", "arguments": { "file": "test\/resrouces\/SimpleModule.ts"}}', str2float("0.01"), 0, 0)$/;"	v
res_dict	plugged/tsuquyomi/test/tsClient/vest/tsQuickinfo.spec.vim	/^    let res_dict = tsuquyomi#tsClient#tsQuickinfo(file, 14, 13) $/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/sendCommand.spec.vim	/^    let res_list = tsuquyomi#tsClient#sendCommandSyncEvents('geterr', {'files': ['hoge'], 'delay': 50}, str2float("0.01"), 0)$/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/sendCommand.spec.vim	/^    let res_list = tsuquyomi#tsClient#sendCommandSyncResponse('completions', {})$/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^    let res_list = tsuquyomi#tsClient#tsCompletionEntryDetails(file, 19, 9, ['say', 'greeting'])$/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/tsCompletions.spec.vim	/^    let res_list = tsuquyomi#tsClient#tsCompletions(file, 11, 0, 'NO_EXSIT_KEYWORD_XXXXXXX') $/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/tsCompletions.spec.vim	/^    let res_list = tsuquyomi#tsClient#tsCompletions(file, 17, 0, 'classDe') $/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/tsNavBar.spec.vim	/^    let res_list = tsuquyomi#tsClient#tsNavBar(file)$/;"	v
res_list	plugged/tsuquyomi/test/tsClient/vest/tsNavto.spec.vim	/^    let res_list = tsuquyomi#tsClient#tsNavto(file, 'encodeURIComponent', 100)$/;"	v
res_projectInfo_dict	plugged/tsuquyomi/test/tsClient/vest/tsProjectInfo.spec.vim	/^    let res_projectInfo_dict = tsuquyomi#tsClient#tsProjectInfo(file, 1)$/;"	v
res_reference_list	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^    let res_reference_list = tsuquyomi#tsClient#tsReferences(file, 2, 16) $/;"	v
res_reference_list	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^    let res_reference_list = tsuquyomi#tsClient#tsReferences(fileA, 2, 16) $/;"	v
res_signatureHelp_dict	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^    let res_signatureHelp_dict  = tsuquyomi#tsClient#tsSignatureHelp(file, 19, 12) $/;"	v
res_signatureHelp_dict	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^    let res_signatureHelp_dict  = tsuquyomi#tsClient#tsSignatureHelp(file, 9, 19) $/;"	v
reset	plugged/neomake/autoload/neomake/highlights.vim	/^    function! s:reset(type, buf) abort$/;"	f
resolve	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.resolve = function resolve(context, path, request, callback) {$/;"	m	class:Resolver
resolve	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports = function resolve(context, path, request, callback) {$/;"	f
resolveContext	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.context = function resolveContext(context, path, request, callback) {$/;"	f
resolveContextSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.context.sync = function resolveContextSync(context, path, request) {$/;"	f
resolveLoader	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.loader = function resolveLoader(context, path, request, callback) {$/;"	f
resolveLoaderSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.loader.sync = function resolveLoaderSync(context, path, request) {$/;"	f
resolveSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^Resolver.prototype.resolveSync = function resolveSync(context, path, request) {$/;"	m	class:Resolver
resolveSync	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^module.exports.sync = function resolveSync(context, path, request) {$/;"	f
resolveToFile	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^function resolveToFile(resolver, name, parentFile) {$/;"	f	function:function
resolve_name	plugged/neomake/autoload/neomake/config.vim	/^function! s:resolve_name(dict, name, init) abort$/;"	f
response	plugged/vimproc.vim/tools/dl-kaoriya-vim.py	/^    response = urllib.request.urlopen(request)$/;"	v
restore_env	plugged/neomake/autoload/neomake.vim	/^    function! s:restore_env(var, value) abort$/;"	f
result	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var result = {};$/;"	v
result	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^  var result = function(obj) {$/;"	f
result_list	plugged/tsuquyomi/test/tsClient/vest/tsGetCodeFixes.vim	/^    let result_list = tsuquyomi#tsClient#tsGetCodeFixes(file, 6, 5, 6, 5, [2377])$/;"	v
result_list	plugged/tsuquyomi/test/tsClient/vest/tsGetSupportedCodeFixes.vim	/^    let result_list = tsuquyomi#tsClient#tsGetSupportedCodeFixes()$/;"	v
result_list	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^    let result_list = tsuquyomi#tsClient#tsGeterr(files, 10)$/;"	v
result_list	plugged/tsuquyomi/test/tsClient/vest/tsGeterrForProject.spec.vim	/^    let result_list = tsuquyomi#tsClient#tsGeterrForProject(file, 10, 2)$/;"	v
result_rename_dict	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let result_rename_dict = tsuquyomi#tsClient#tsRename(file, 11, 21, 1, 0) $/;"	v
result_rename_dict	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let result_rename_dict = tsuquyomi#tsClient#tsRename(file, 3, 9, 0, 0) $/;"	v
result_rename_dict	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let result_rename_dict = tsuquyomi#tsClient#tsRename(file, 5, 16, 0, 0) $/;"	v
result_rename_dict	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^    let result_rename_dict = tsuquyomi#tsClient#tsRename(fileA, 2, 16, 0, 0) $/;"	v
resume	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.resume = function () {$/;"	m	class:Readable
resume	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function resume(stream, state) {$/;"	f
resume_	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^function resume_(stream, state) {$/;"	f
rethrow	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^function rethrow() {$/;"	f
retry	autoload/plug.vim	/^function! s:retry()$/;"	f
retry	plugged/tern_for_vim/node_modules/graceful-fs/graceful-fs.js	/^function retry () {$/;"	f	function:function
return	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function has(obj, propName) {$/;"	c	class:var.function
return	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function isArray(obj) {$/;"	c	class:var
return	plugged/tern_for_vim/node_modules/concat-map/index.js	/^var isArray = Array.isArray || function (xs) {$/;"	c
return	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^function objectToString(o) {$/;"	c
return	plugged/tern_for_vim/node_modules/glob/common.js	/^function ownProp (obj, field) {$/;"	c
return	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^  this._transformState.needTransform = false;$/;"	c	class:Transform
return	plugged/tern_for_vim/node_modules/tern/doc/demo/polyfill.js	/^  Array.isArray = Array.isArray || function(v) {$/;"	c
return	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    args = slice.call(arguments, 2);$/;"	f
return	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^function isArray(v) {$/;"	c
revents	plugged/vimproc.vim/src/fakepoll.h	/^    short revents;                  \/* events that occurred on fd *\/$/;"	m	struct:pollfd
reverse	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
revert	autoload/plug.vim	/^function! s:revert()$/;"	f
rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
rmdirSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.rmdirSync = function(_path) {$/;"	m	class:MemoryFileSystem
rmrf	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var rmrf = require("rimraf");$/;"	v
root	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^root = logging.getLogger('deoplete')$/;"	v
rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
run	plugged/tern_for_vim/node_modules/acorn/src/bin/acorn.js	/^function run(code) {$/;"	f	function:function
runTest	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^function runTest(options) {$/;"	f
run_command	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def run_command(self, query, pos, fragments=True, silent=False):$/;"	m	class:Source
running_jobs	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:running_jobs(bufnr) abort$/;"	f
s4	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var s4 = ["Strawberry", "Blueberry"][0];$/;"	c
s:Filepath	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsCompletions.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsGetCodeFixes.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsGetSupportedCodeFixes.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsGeterrForProject.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsNavBar.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsNavto.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsProjectInfo.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsQuickinfo.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsReload.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:Filepath	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^  let s:Filepath = s:V.import('System.Filepath')$/;"	v
s:JSON	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:JSON = s:V.import('Web.JSON')$/;"	v
s:JSON	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:JSON = s:V.import('Web.JSON')$/;"	v
s:MAJOR_VERSION	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:MAJOR_VERSION = 9$/;"	v
s:MINOR_VERSION	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:MINOR_VERSION = 3$/;"	v
s:NON_BOOLEAN_KEYS_IN_FOPT	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:NON_BOOLEAN_KEYS_IN_FOPT = [ 'baseIndentSize', 'indentSize', 'tabSize', 'newLineCharacter', 'convertTabsToSpaces', 'indentStyle' ]$/;"	v
s:P	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:P = s:V.import('ProcessManager')$/;"	v
s:P	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^  let s:P = s:V.import('ProcessManager')$/;"	v
s:Prelude	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:Prelude = s:V.import('Prelude')$/;"	v
s:Process	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:Process = s:V.import('Process')$/;"	v
s:SNR	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE_DICT	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:Tree	plugged/tsuquyomi/autoload/unite/sources/outline/typescript.vim	/^let s:Tree = unite#sources#outline#import('Tree')$/;"	v
s:V	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsCompletions.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsGetCodeFixes.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsGetSupportedCodeFixes.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsGeterrForProject.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsNavBar.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsNavto.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsProjectInfo.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsQuickinfo.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsReload.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:V	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^  let s:V = vital#of('tsuquyomi')$/;"	v
s:VERSION_NUMBER	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:VERSION_NUMBER = str2nr(printf('%2d%02d', s:MAJOR_VERSION, s:MINOR_VERSION))$/;"	v
s:VERSION_STRING	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:VERSION_STRING = printf('%d.%d', s:MAJOR_VERSION, s:MINOR_VERSION)$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:_plugin_name	plugged/tsuquyomi/autoload/vital/_tsuquyomi.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_processes	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^let s:_processes = {}$/;"	v
s:_s	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_unify_path_cache	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:action_queue	plugged/neomake/autoload/neomake.vim	/^    let s:action_queue = []$/;"	v
s:action_queue_registered_events	plugged/neomake/autoload/neomake.vim	/^    let s:action_queue_registered_events = []$/;"	v
s:action_queue_timer_timeouts	plugged/neomake/autoload/neomake.vim	/^let s:action_queue_timer_timeouts = get(g:, 'neomake_action_queue_timeouts', {1: 100, 2: 200, 3: 500})$/;"	v
s:added_db_files	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:assert	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/fopen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/lexer.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/parser.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/popen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/socket.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vimproc.vim/test/system.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:async	plugged/neomake/autoload/neomake.vim	/^let s:async = has('nvim')$/;"	v
s:autocmd_patterns	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:autocmd_patterns = []$/;"	v
s:available_qf_descriptions	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:available_qf_descriptions = []$/;"	v
s:base_sign_id	plugged/neomake/autoload/neomake/signs.vim	/^let s:base_sign_id = 5000$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:bg_processes	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:bg_processes = {}$/;"	v
s:buf_info_map	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^let s:buf_info_map = {}$/;"	v
s:bvars	plugged/vim-javascript/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:cache	plugged/neomake/autoload/neomake/statusline.vim	/^let s:cache = {}$/;"	v
s:cache_sid	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:cache_sid = {}$/;"	v
s:can_use_env_in_job_opts	plugged/neomake/autoload/neomake.vim	/^let s:can_use_env_in_job_opts = has('patch-8.0.0902') && has('patch-8.0.1832')$/;"	v
s:cmd	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:cmd = {}$/;"	v
s:command_maker_base	plugged/neomake/autoload/neomake.vim	/^let s:command_maker_base = copy(g:neomake#core#command_maker_base)$/;"	v
s:compile_script	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^    let s:compile_script = expand('<sfile>:p:h', 1).s:slash.'python'.s:slash.'compile.py'$/;"	v
s:configured_buffers	plugged/neomake/autoload/neomake/configure.vim	/^let s:configured_buffers = {}$/;"	v
s:contents	plugged/vimproc.vim/test/fopen.vim	/^let s:contents = ['foo', 'bar']$/;"	v
s:continuation	plugged/vim-javascript/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:counts	plugged/neomake/autoload/neomake/statusline.vim	/^let s:counts = {}$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:current_errors	plugged/neomake/autoload/neomake.vim	/^let s:current_errors = {'project': {}, 'file': {}}$/;"	v
s:default_delay	plugged/neomake/autoload/neomake/configure.vim	/^let s:default_delay = has('timers') ? 500 : 0$/;"	v
s:default_settings	plugged/neomake/autoload/neomake/configure.vim	/^let s:default_settings = {$/;"	v
s:defaults	plugged/neomake/autoload/neomake/config.vim	/^let s:defaults = {$/;"	v
s:did_check_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:did_setup_statusline_augroup_for_use	plugged/neomake/autoload/neomake/statusline.vim	/^let s:did_setup_statusline_augroup_for_use = 0$/;"	v
s:dll_handle	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:dll_handle = s:vp_dlopen(g:vimproc#dll_path)$/;"	v
s:entry_to_sign_type	plugged/neomake/autoload/neomake/signs.vim	/^let s:entry_to_sign_type = {'W': 'warn', 'I': 'info', 'M': 'msg'}$/;"	v
s:exe_error_thrown	plugged/neomake/autoload/neomake/core.vim	/^let s:exe_error_thrown = {}$/;"	v
s:external_module_cache_dict	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:external_module_cache_dict = {}$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'decAndFunction.ts')$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'decAndOther.ts')$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'explictAlias.ts')$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'multiAlias.ts')$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'multiDec.ts')$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'multiline.ts')$/;"	v
s:file	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^    let s:file = s:Filepath.join(s:resource_dir, 'simple.ts')$/;"	v
s:filename	plugged/vimproc.vim/test/fopen.vim	/^let s:filename = 'test.txt'$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:fixture_root	plugged/neomake/tests/include/init.vim	/^let s:fixture_root = '\/tmp\/neomake-tests'$/;"	v
s:formatter	plugged/neomake/autoload/neomake/statusline.vim	/^let s:formatter = {$/;"	v
s:fsep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:fsep = ':'$/;"	v
s:fsep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:fsep = ';'$/;"	v
s:hack_keep_refs_for_profiling	plugged/neomake/autoload/neomake.vim	/^let s:hack_keep_refs_for_profiling = []$/;"	v
s:has_ant	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:has_ant = executable(expand(g:neomake_java_ant_executable, 1))$/;"	v
s:has_getcmdwintype	plugged/neomake/autoload/neomake.vim	/^let s:has_getcmdwintype = exists('*getcmdwintype')$/;"	v
s:has_gradle	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:has_gradle = executable(expand(g:neomake_java_gradle_executable, 1))$/;"	v
s:has_maven	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:has_maven = executable(expand(g:neomake_java_maven_executable, 1))$/;"	v
s:highlight_types	plugged/neomake/autoload/neomake/highlights.vim	/^let s:highlight_types = {$/;"	v
s:highlights	plugged/neomake/autoload/neomake/highlights.vim	/^let s:highlights = {'file': {}, 'project': {}}$/;"	v
s:hook_context_stack	plugged/neomake/autoload/neomake/utils.vim	/^let s:hook_context_stack = []$/;"	v
s:ignore_automake_events	plugged/neomake/autoload/neomake.vim	/^let s:ignore_automake_events = 0$/;"	v
s:ignore_python_warnings	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^let s:ignore_python_warnings = [$/;"	v
s:ignore_respons_conditions	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:ignore_respons_conditions = []$/;"	v
s:importable_module_list	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:importable_module_list = []$/;"	v
s:in_comm	plugged/vim-javascript/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:input_file	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^  let s:input_file = s:Filepath.join(s:script_dir, 'resources\/variousModules.d.ts')$/;"	v
s:is_case_tolerant	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_case_tolerant	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cygwin	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	plugged/neomake/autoload/neomake/quickfix.vim	/^let s:is_enabled = 0$/;"	v
s:is_handler_enabled	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let s:is_handler_enabled = 0$/;"	v
s:is_mac	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_testing	plugged/neomake/autoload/neomake.vim	/^let s:is_testing = exists('g:neomake_test_messages')$/;"	v
s:is_testing	plugged/neomake/autoload/neomake/log.vim	/^let s:is_testing = exists('g:neomake_test_messages')$/;"	v
s:is_unix	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_vim8	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:is_vim8 = has('patch-8.0.1')$/;"	v
s:is_vim8	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:is_vim8 = !has('nvim') && has('patch-8.0.1')$/;"	v
s:is_vital_vim	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_windows	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^let s:is_windows = ((has('win32') || has('win64')) ? v:true : v:false)$/;"	v
s:is_windows	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:is_windows = has('win32') || has('win64') || has('win16') || has('dos32') || has('dos16')$/;"	v
s:is_windows	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_windows = has('win32')$/;"	v
s:job_id	plugged/neomake/autoload/neomake.vim	/^    let s:job_id = 1$/;"	v
s:jobinfo_base	plugged/neomake/autoload/neomake/jobinfo.vim	/^let s:jobinfo_base = {$/;"	v
s:jobs	plugged/neomake/autoload/neomake.vim	/^    let s:jobs = {}$/;"	v
s:kill_vim_timers	plugged/neomake/autoload/neomake.vim	/^    let s:kill_vim_timers = {}$/;"	v
s:kind_symbols	plugged/deoplete-typescript/plugin/nvim_typescript.vim	/^let s:kind_symbols = {$/;"	v
s:known_files	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_completion	plugged/neomake/autoload/neomake/cmd.vim	/^let s:last_completion = []$/;"	v
s:last_errmsg	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:last_errmsg = ''$/;"	v
s:last_placed_signs	plugged/neomake/autoload/neomake/signs.vim	/^let s:last_placed_signs = {'project': {}, 'file': {}}$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_status	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:last_status = 0$/;"	v
s:lasterr	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:lasterr = []$/;"	v
s:level_to_name	plugged/neomake/autoload/neomake/log.vim	/^let s:level_to_name = {0: 'error  ', 1: 'warning', 2: 'verbose', 3: 'debug  '}$/;"	v
s:lexer	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:lexer = {}$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:loaded = {}$/;"	v
s:loaded_ft_maker_runtime	plugged/neomake/autoload/neomake/utils.vim	/^let s:loaded_ft_maker_runtime = []$/;"	v
s:loaded_global_maker_runtime	plugged/neomake/autoload/neomake/utils.vim	/^let s:loaded_global_maker_runtime = 0$/;"	v
s:local_tss	plugged/deoplete-typescript/autoload/health/nvim_typescript.vim	/^let s:local_tss = 0$/;"	v
s:log_buffer	plugged/tsuquyomi/autoload/tsuquyomi/perfLogger.vim	/^let s:log_buffer = []$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:make_id	plugged/neomake/autoload/neomake.vim	/^    let s:make_id = 0$/;"	v
s:make_info	plugged/neomake/autoload/neomake.vim	/^    let s:make_info = {}$/;"	v
s:maker_base	plugged/neomake/autoload/neomake.vim	/^let s:maker_base = {}$/;"	v
s:maker_from_command	plugged/neomake/autoload/neomake/utils.vim	/^let s:maker_from_command = extend(copy(g:neomake#core#command_maker_base), {$/;"	v
s:makers	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^    let s:makers += ['vimhelplint']$/;"	v
s:makers	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^let s:makers = ['writegood']$/;"	v
s:map_job_ids	plugged/neomake/autoload/neomake.vim	/^    let s:map_job_ids = {}$/;"	v
s:match_base_priority	plugged/neomake/autoload/neomake/quickfix.vim	/^let s:match_base_priority = 10$/;"	v
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:name_to_level	plugged/neomake/autoload/neomake/log.vim	/^let s:name_to_level = {'error': 0, 'warning': 1, 'verbose': 2, 'debug': 3}$/;"	v
s:need_trans	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:needs_to_replace_qf_for_lwindow	plugged/neomake/autoload/neomake.vim	/^let s:needs_to_replace_qf_for_lwindow = has('patch-7.4.379')$/;"	v
s:neomake_elixir_credo_config_typemap	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^let s:neomake_elixir_credo_config_typemap = {$/;"	v
s:neomake_root	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^    let s:neomake_root = expand('<sfile>:p:h:h:h:h:h', 1)$/;"	v
s:null_device	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:null_device = vimproc#util#is_windows() ? 'NUL' : '\/dev\/null'$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_api	plugged/neomake/autoload/neomake/highlights.vim	/^let s:nvim_api = exists('*nvim_buf_add_highlight')$/;"	v
s:nvim_can_buffer_output	plugged/neomake/autoload/neomake.vim	/^let s:nvim_can_buffer_output = has('nvim-0.3.0') ? 1 : 0$/;"	v
s:nvim_output_handler_queue	plugged/neomake/autoload/neomake.vim	/^    let s:nvim_output_handler_queue = []$/;"	v
s:opfirst	plugged/vim-javascript/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:outline_info	plugged/tsuquyomi/autoload/unite/sources/outline/typescript.vim	/^let s:outline_info = {$/;"	v
s:path_sep_pattern	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_sep_pattern	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:path_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:pending_outputs	plugged/neomake/autoload/neomake.vim	/^let s:pending_outputs = {}$/;"	v
s:placed_signs	plugged/neomake/autoload/neomake/signs.vim	/^let s:placed_signs = {'project': {}, 'file': {}}$/;"	v
s:plug	plugged/tern_for_vim/autoload/tern.vim	/^let s:plug = expand("<sfile>:p:h:h")$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plugin_name	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:prev_windows	plugged/neomake/autoload/neomake/compat.vim	/^let s:prev_windows = []$/;"	v
s:project_root	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:psep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:psep = '\/'$/;"	v
s:psep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:psep = '\\'$/;"	v
s:read_timeout	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:read_timeout = 100$/;"	v
s:reader	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:reader = {}$/;"	v
s:registered_events	plugged/neomake/autoload/neomake/configure.vim	/^let s:registered_events = []$/;"	v
s:rel	plugged/vim-javascript/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:request_seq	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:request_seq = 0$/;"	v
s:resource_dir	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^  let s:resource_dir = s:Filepath.join(s:script_dir, 'resources\/importDecPatterns')$/;"	v
s:result	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^  let s:result = []$/;"	v
s:root_dir	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:root_dir = s:Filepath.dirname(s:Filepath.dirname(s:Filepath.remove_last_separator(s:Filepath.join(s:script_dir, '..\/'))))$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:rustup_has_nightly	plugged/neomake/autoload/neomake/makers/clippy.vim	/^let s:rustup_has_nightly = get(g:, 'neomake_clippy_rustup_has_nightly', -1)$/;"	v
s:save_cpo	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/plugin/tsuquyomi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tsuquyomi/syntax_checkers/typescript/tsuquyomi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/autoload/vimproc/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vimproc.vim/plugin/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_path	plugged/neomake/tests/include/init.vim	/^let s:saved_path = 0$/;"	v
s:script	plugged/tern_for_vim/autoload/tern.vim	/^let s:script = s:plug . '\/script\/tern.py'$/;"	v
s:script_dir	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:script_dir = expand('<sfile>:p:h')$/;"	v
s:script_dir	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:script_dir = expand('<sfile>:p:h')$/;"	v
s:script_dir	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^let s:script_dir = expand('<sfile>:p:h')$/;"	v
s:script_dir	plugged/tsuquyomi/test/es6import/vest/checkExternalModule.spec.vim	/^let s:script_dir = s:Filepath.join(tsuquyomi#rootDir(), 'test\/es6import\/vest')$/;"	v
s:script_dir	plugged/tsuquyomi/test/es6import/vest/getImportDeclarations.spec.vim	/^let s:script_dir = s:Filepath.join(tsuquyomi#rootDir(), 'test\/es6import\/vest')$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsCompletionEntryDetails.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsCompletions.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsDefinition.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsGetCodeFixes.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsGetSupportedCodeFixes.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsGeterrForProject.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsNavBar.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsNavto.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsProjectInfo.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsQuickinfo.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsReferences.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsReload.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsRename.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:script_dir	plugged/tsuquyomi/test/tsClient/vest/tsSignatureHelp.spec.vim	/^  let s:script_dir = tsuquyomi#rootDir()$/;"	v
s:shell_argv	plugged/neomake/tests/include/init.vim	/^let s:shell_argv = split(&shell) + split(&shellcmdflag)$/;"	v
s:shellcheck	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^let s:shellcheck = {$/;"	v
s:short_level_to_name	plugged/neomake/autoload/neomake/log.vim	/^let s:short_level_to_name = {0: 'E', 1: 'W', 2: 'V', 3: 'D'}$/;"	v
s:sign_order	plugged/neomake/autoload/neomake/signs.vim	/^let s:sign_order = {'neomake_file_err': 0, 'neomake_file_warn': 1,$/;"	v
s:skip_expr	plugged/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:slash	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^let s:slash = neomake#utils#Slash()$/;"	v
s:slash	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^    let s:slash = neomake#utils#Slash()$/;"	v
s:source	plugged/tsuquyomi/autoload/unite/sources/tsproject.vim	/^let s:source = {$/;"	v
s:start_time	plugged/tsuquyomi/autoload/tsuquyomi/perfLogger.vim	/^let s:start_time = reltime()$/;"	v
s:state	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^let s:state = {}$/;"	v
s:strchars	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:suite	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:suite = themis#suite('custom')$/;"	v
s:suite	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/vimproc.vim/test/fopen.vim	/^let s:suite = themis#suite('fopen')$/;"	v
s:suite	plugged/vimproc.vim/test/functions.vim	/^let s:suite = themis#suite('functions')$/;"	v
s:suite	plugged/vimproc.vim/test/lexer.vim	/^let s:suite = themis#suite('lexer')$/;"	v
s:suite	plugged/vimproc.vim/test/parser.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/vimproc.vim/test/popen.vim	/^let s:suite = themis#suite('popen')$/;"	v
s:suite	plugged/vimproc.vim/test/socket.vim	/^let s:suite = themis#suite('socket')$/;"	v
s:suite	plugged/vimproc.vim/test/system.vim	/^let s:suite = themis#suite('system')$/;"	v
s:super_ft_cache	plugged/neomake/autoload/neomake/utils.vim	/^let s:super_ft_cache = {}$/;"	v
s:supportedCodeFixes	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^let s:supportedCodeFixes = []$/;"	v
s:tempname	plugged/neomake/tests/include/init.vim	/^let s:tempname = tempname()$/;"	v
s:timer_by_bufnr	plugged/neomake/autoload/neomake/configure.vim	/^let s:timer_by_bufnr = {}$/;"	v
s:timer_info	plugged/neomake/autoload/neomake/configure.vim	/^let s:timer_info = {}$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:tsconfig	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:tsconfig = {}$/;"	v
s:tsconfig_file_path	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^let s:tsconfig_file_path = ''$/;"	v
s:tsq	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^  let s:tsq = 'tsuquyomiTSServer'$/;"	v
s:tsq	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^  let s:tsq = {'job':0}$/;"	v
s:tss_cmd	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:tss_cmd = ''$/;"	v
s:tss_version	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^let s:tss_version = {'is_valid': 0, 'out': '???'}$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unknown_counts	plugged/neomake/autoload/neomake/statusline.vim	/^let s:unknown_counts = {}$/;"	v
s:unset	plugged/neomake/autoload/neomake.vim	/^let s:unset = {}$/;"	v
s:unset	plugged/neomake/autoload/neomake/utils.vim	/^let s:unset = {}  " Sentinel.$/;"	v
s:unset_dict	plugged/neomake/autoload/neomake.vim	/^let s:unset_dict = {}$/;"	v
s:unset_list	plugged/neomake/autoload/neomake.vim	/^let s:unset_list = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_msgs_marker	plugged/neomake/tests/include/init.vim	/^let s:vim_msgs_marker = '== neomake_tests_marker =='$/;"	v
s:vimhelplint_exe	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^        let s:vimhelplint_exe = join([s:neomake_root, 'contrib', 'vimhelplint'], s:slash)$/;"	v
s:vimhelplint_exe	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^    let s:vimhelplint_exe = 'vimhelplint'$/;"	v
s:vimhelplint_exe	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^let s:vimhelplint_exe = ''$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_cygwin.dll'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux32.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux64.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_mac.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_unix.so'$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = has('win64') ?$/;"	v
s:vimproc_dll_basename	plugged/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = system($/;"	v
s:vint_supports_stdin	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^let s:vint_supports_stdin = {}$/;"	v
s:vital_base_dir	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:wcswidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:win_nav_map	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^let s:win_nav_map = {}$/;"	v
s:write_timeout	plugged/vimproc.vim/autoload/vimproc.vim	/^let s:write_timeout = 100$/;"	v
s:z	plugged/vim-javascript/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
sayHello	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function sayHello(somebody) {$/;"	f
scan	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
search	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:search(pattern) abort dict$/;"	f
section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
semanticDiagDict	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^    let semanticDiagDict = filter(copy(result_list), 'v:val.event == "semanticDiag"')[0].body$/;"	v
separator	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:separator() abort$/;"	f
separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:separator() abort$/;"	f
serverOptions	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^function serverOptions(context, text) {$/;"	f
set	plugged/neomake/autoload/neomake/config.vim	/^function! s:set(dict, name, value) abort$/;"	f
setD	plugged/tern_for_vim/node_modules/tern/test/cases/effects.js	/^function setD(a) { d = a; }$/;"	f
setDefaultEncoding	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {$/;"	m	class:Writable
setEncoding	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.setEncoding = function (enc) {$/;"	m	class:Readable
setSelectedTab	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  },$/;"	m	class:data......Project
setServerPath	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function setServerPath(val) {$/;"	f
setTSConfigVersion	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function setTSConfigVersion() {$/;"	f
set_custom	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_custom(dest, name_or_dict, value) abort$/;"	f
set_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_custom(self, custom):$/;"	m	class:Parent
set_default	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_pattern(variable, keys, pattern):$/;"	f
set_qf_lines	plugged/neomake/autoload/neomake/quickfix.vim	/^function! s:set_qf_lines(lines) abort$/;"	f
set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_source_attributes(self, context):$/;"	m	class:Parent
set_value	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_value(dest, name, value) abort$/;"	f
setopts	plugged/tern_for_vim/node_modules/glob/common.js	/^function setopts (self, pattern, options) {$/;"	f	function:setupIgnores
setup	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def setup(vim, level, output_file=None):$/;"	f
setup_autocmds	plugged/neomake/plugin/neomake.vim	/^function! s:setup_autocmds() abort$/;"	f
setup_statusline_augroup_for_use	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:setup_statusline_augroup_for_use() abort$/;"	f
shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
shellescape	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shescape	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:shescape(string) abort$/;"	f
shift	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  BufferList.prototype.shift = function shift() {$/;"	m	class:BufferList
shift	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:shift(list) abort$/;"	f
should	plugged/tern_for_vim/node_modules/memory-fs/test/MemoryFileSystem.js	/^var should = require("should");$/;"	v
shouldUseNative	plugged/tern_for_vim/node_modules/object-assign/index.js	/^function shouldUseNative() {$/;"	f
showErrWarning	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:showErrWarning(counts, prefix) abort$/;"	f
sid2sfuncs	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
simple	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function simple(node, visitors, base, state, override) {$/;"	f
simple	plugged/tern_for_vim/node_modules/tern/test/cases/cautiouspropagation.js	/^var simple = {};$/;"	v
simpleEnd	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function simpleEnd(buf) {$/;"	f
simpleWrite	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function simpleWrite(buf) {$/;"	f
site	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^  var ctx = {site: {posts: posts, tags: gatherTags(posts), config: config},$/;"	p	class:generate.ctx
size	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var size = 0, result = true;$/;"	v
size	plugged/vimproc.vim/src/vimstack.c	/^    size_t size; \/* stack size *\/$/;"	m	struct:vp_stack_t	file:
skipThrough	plugged/tern_for_vim/node_modules/acorn/dist/walk.es.js	/^function skipThrough(node, st, c) { c(node, st) }$/;"	f	function:Found
skipThrough	plugged/tern_for_vim/node_modules/acorn/src/walk/index.js	/^function skipThrough(node, st, c) { c(node, st) }$/;"	f
skip_back_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_back_quote(script, i) abort "{{{$/;"	f
skip_double_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_double_quote(script, i) abort "{{{$/;"	f
skip_else	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_else(args, script, i) abort "{{{$/;"	f
skip_single_quote	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_single_quote(script, i) abort "{{{$/;"	f
slice	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^Array.prototype.slice.apply([1, 2, 3], [1]); \/\/: [number]$/;"	m	class:Array
slice	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^Array.prototype.slice.call([1, 2, 3], 1); \/\/: [number]$/;"	m	class:Array
smart_execute_command	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
snprintf	plugged/vimproc.vim/src/proc_w32.c	63;"	d	file:
sockets_number	plugged/vimproc.vim/src/proc_w32.c	/^static int sockets_number = 0;$/;"	v	file:
something	plugged/tern_for_vim/node_modules/tern/test/condense/extend_foo.js	/^foo.z = {something: "else"};$/;"	p	class:foo.z
sort	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sortQfItemByColdiff	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:sortQfItemByColdiff(a, b)$/;"	f
sortTextComparator	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:sortTextComparator(entry1, entry2)$/;"	f
sort_by	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_jobs	plugged/neomake/autoload/neomake.vim	/^function! s:sort_jobs(a, b) abort$/;"	f
source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
source.gather_candidates	plugged/tsuquyomi/autoload/unite/sources/tsproject.vim	/^function! s:source.gather_candidates(args, context)$/;"	f
sourceFile	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  program: null,$/;"	p	class:getLineInfo.defaultOptions
sourceFile	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  program: null,$/;"	p	class:from
sourceType	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  ecmaVersion: 7,$/;"	p	class:getLineInfo.defaultOptions
sourceType	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^  ecmaVersion: 7,$/;"	p	class:from
span	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
spawn	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
split	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:split(path) abort$/;"	f
split	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! s:split(str, sep) abort$/;"	f
split	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:split(path) abort$/;"	f
split3	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_by_displaywidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_leftright	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_posix_text	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
start	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^          replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re}$/;"	p	class:replace
start	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^          replace = {start: e.pos, end: pos, type: tokTypes.string, value: this$1.input.slice(e.pos + 1, pos)}$/;"	p	class:replace
start	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^          replace = {start: e.pos, end: pos,$/;"	p	class:replace
start	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^      if (replace === true) replace = {start: pos, end: pos, type: tokTypes.name, value: "✖"}$/;"	p	class:this$1.resetTo
start	plugged/tern_for_vim/node_modules/acorn/src/loose/tokenize.js	/^          replace = {start: e.pos, end: pos, type: tt.regexp, value: re}$/;"	p	class:replace
start	plugged/tern_for_vim/node_modules/acorn/src/loose/tokenize.js	/^          replace = {start: e.pos, end: pos, type: tt.string, value: this.input.slice(e.pos + 1, pos)}$/;"	p	class:replace
start	plugged/tern_for_vim/node_modules/acorn/src/loose/tokenize.js	/^          replace = {start: e.pos, end: pos,$/;"	p	class:replace
start	plugged/tern_for_vim/node_modules/acorn/src/loose/tokenize.js	/^      if (replace === true) replace = {start: pos, end: pos, type: tt.name, value: "✖"}$/;"	p	class:this.resetTo
start	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function start() {$/;"	f	function:exports.realpath
start	plugged/tern_for_vim/node_modules/fs.realpath/old.js	/^  function start() {$/;"	f	function:exports.realpathSync
start	plugged/vimproc.vim/tools/benchmark.vim	/^let start = reltime()$/;"	v
startNode	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.startNode = function startNode () {$/;"	m	class:LooseParser
startNodeAt	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.startNodeAt = function startNodeAt (pos) {$/;"	m	class:LooseParser
startServer	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function startServer() {$/;"	f
startTssVim8	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! s:startTssVim8()$/;"	f
startTssVimproc	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! s:startTssVimproc()$/;"	f
start_server	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def start_server(self):$/;"	m	class:Source
startsExpr	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^var startsExpr = {startsExpr: true};$/;"	p	class:var.startsExpr
startsExpr	plugged/tern_for_vim/node_modules/acorn/src/tokentype.js	/^const beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true}$/;"	p
starts_with	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
stat	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^CachedInputFileSystem.prototype.stat = function(path, callback) {$/;"	m	class:CachedInputFileSystem
stat	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js	/^NodeJsInputFileSystem.prototype.stat = fs.stat.bind(fs);$/;"	m	class:NodeJsInputFileSystem
stat	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/SyncNodeJsInputFileSystem.js	/^SyncNodeJsInputFileSystem.prototype.stat = asAsync(fs.statSync, fs);$/;"	m	class:SyncNodeJsInputFileSystem
statFix	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function statFix (orig) {$/;"	f	function:function
statFixSync	plugged/tern_for_vim/node_modules/graceful-fs/polyfills.js	/^function statFixSync (orig) {$/;"	f
statSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.statSync = function(_path) {$/;"	m	class:MemoryFileSystem
state	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:state(i) abort$/;"	f
status	autoload/plug.vim	/^function! s:status()$/;"	f
status	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:status(i) abort$/;"	f
status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
step	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/index.js	/^        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }$/;"	f
step	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }$/;"	f
still_have_issues	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:still_have_issues() abort$/;"	f
stopServer	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function stopServer() {$/;"	f
stop_server	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def stop_server(self):$/;"	m	class:Source
stop_timer	plugged/neomake/autoload/neomake/configure.vim	/^function! s:stop_timer(timer) abort$/;"	f
stop_timers	plugged/neomake/autoload/neomake/configure.vim	/^function! s:stop_timers() abort$/;"	f
storeCurrentPos	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.storeCurrentPos = function storeCurrentPos () {$/;"	m	class:LooseParser
str2hd	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:str2hd(str) abort$/;"	f
str2list	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:str2list(str) abort$/;"	f
str_to_oflag	plugged/vimproc.vim/src/proc.c	/^str_to_oflag(const char *flags)$/;"	f	file:
str_to_oflag	plugged/vimproc.vim/src/proc_w32.c	/^str_to_oflag(const char *flags)$/;"	f	file:
strchars	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
stream	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^var stream = require("readable-stream");$/;"	v
stream._read	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^	} catch (e) {$/;"	c
stream._write	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^	var bl = [ ], len = 0;$/;"	f
strict	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  6: "enum",$/;"	p	class:reservedWords
strict	plugged/tern_for_vim/node_modules/acorn/src/identifier.js	/^  6: "enum",$/;"	p	class:export
strictBind	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  strict: "implements interface let package private protected public static yield",$/;"	p	class:reservedWords
strictBind	plugged/tern_for_vim/node_modules/acorn/src/identifier.js	/^  strict: "implements interface let package private protected public static yield",$/;"	p	class:export
stringOrNumber	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^var stringOrNumber;$/;"	v
strwidth	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def strwidth(string):$/;"	f
strwidthpart	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
sub_file	plugged/tsuquyomi/test/tsClient/vest/tsGeterrForProject.spec.vim	/^    let sub_file = s:Filepath.join(s:script_dir, 'test\/tsClient\/vest\/resources\/samplePrjs\/errorPrj\/sub.ts')$/;"	v
subclass	plugged/tern_for_vim/node_modules/tern/test/cases/blowup.js	/^  superclass = subclass;$/;"	f
subclass.extend	plugged/tern_for_vim/node_modules/tern/test/cases/blowup.js	/^  subclass.prototype = new F();$/;"	f
substitute_last	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suite.after_each	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.after_each() abort$/;"	f
suite.append	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.append() abort$/;"	f
suite.backquote	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.backquote() abort$/;"	f
suite.before_each	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.before_each() abort$/;"	f
suite.block_convertion	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.block_convertion() abort$/;"	f
suite.cmd_system1	plugged/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system1() abort$/;"	f
suite.cmd_system2	plugged/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system2() abort$/;"	f
suite.cmd_system3	plugged/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system3() abort$/;"	f
suite.comment	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.comment() abort$/;"	f
suite.custom_option	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_option() abort$/;"	f
suite.custom_source	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_source() abort$/;"	f
suite.escape	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.escape() abort$/;"	f
suite.functions	plugged/vimproc.vim/test/functions.vim	/^function! s:suite.functions() abort$/;"	f
suite.invalid_fmode	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.invalid_fmode() abort$/;"	f
suite.join	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.join() abort$/;"	f
suite.parse_redirection	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.parse_redirection() abort$/;"	f
suite.parse_statements	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.parse_statements() abort$/;"	f
suite.password_pattern	plugged/vimproc.vim/test/system.vim	/^function! s:suite.password_pattern() abort$/;"	f
suite.popen2	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.popen2() abort$/;"	f
suite.popen3	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.popen3() abort$/;"	f
suite.quote	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.quote() abort$/;"	f
suite.read	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read() abort$/;"	f
suite.read_line	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_line() abort$/;"	f
suite.read_lines	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_lines() abort$/;"	f
suite.read_write	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.read_write() abort$/;"	f
suite.redirection1	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.redirection1() abort$/;"	f
suite.redirection2	plugged/vimproc.vim/test/popen.vim	/^function! s:suite.redirection2() abort$/;"	f
suite.slash_convertion	plugged/vimproc.vim/test/parser.vim	/^function! s:suite.slash_convertion() abort$/;"	f
suite.socket	plugged/vimproc.vim/test/socket.vim	/^function! s:suite.socket() abort$/;"	f
suite.system1	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system1() abort$/;"	f
suite.system2	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system2() abort$/;"	f
suite.system_and1	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_and1() abort$/;"	f
suite.system_and2	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_and2() abort$/;"	f
suite.system_bg1	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_bg1() abort$/;"	f
suite.system_bg2	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_bg2() abort$/;"	f
suite.system_passwd1	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_passwd1() abort$/;"	f
suite.system_passwd2	plugged/vimproc.vim/test/system.vim	/^function! s:suite.system_passwd2() abort$/;"	f
suite.token	plugged/vimproc.vim/test/lexer.vim	/^function! s:suite.token() abort$/;"	f
suite.value	plugged/vimproc.vim/test/lexer.vim	/^function! s:suite.value() abort$/;"	f
suite.vimoption2python	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^function! s:suite.vimoption2python() abort$/;"	f
suite.with_oflag	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.with_oflag() abort$/;"	f
suite.write	plugged/vimproc.vim/test/fopen.vim	/^function! s:suite.write() abort$/;"	f
sum	plugged/tern_for_vim/node_modules/tern/test/cases/merge.js	/^function sum(a) {$/;"	f
sw	plugged/vim-javascript/indent/javascript.vim	/^  function s:sw()$/;"	f
switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
syncContextResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var syncContextResolver = ResolverFactory.createResolver({$/;"	v
syncLoaderResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var syncLoaderResolver = ResolverFactory.createResolver({$/;"	v
syncResolver	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/node.js	/^var syncResolver = ResolverFactory.createResolver({$/;"	v
syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
syntaxDiagDict	plugged/tsuquyomi/test/tsClient/vest/tsGeterr.spec.vim	/^    let syntaxDiagDict = filter(copy(result_list), 'v:val.event == "syntaxDiag"')[0].body$/;"	v
system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:system(cmdline, is_passwd, input, timeout, is_pty) abort "{{{$/;"	f
system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
t	plugged/tern_for_vim/node_modules/core-util-is/test.js	/^var t = require('.\/lib\/util');$/;"	v
t	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    '\\n':     'n',$/;"	p	class:escapes
take_while	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
takesOpt	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function takesOpt(a) { console.log(a || 20); }$/;"	f
tapped	plugged/tern_for_vim/node_modules/tern/test/cases/underscore.js	/^var tapped;$/;"	v
td	init.vim	/^nnoremap td :tabclose<CR>$/;"	m
template	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var template = function(data) {$/;"	f
term	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:term(i) abort$/;"	f
tern	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^var tern = require("..\/lib\/tern"), condense = require("..\/lib\/condense");$/;"	v
tern	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^var tern = require("..\/lib\/tern");$/;"	v
tern	plugged/tern_for_vim/node_modules/tern/test/reload.js	/^var tern = require("..\/lib\/tern");$/;"	v
tern	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var tern = require("..\/lib\/tern");$/;"	v
tern	plugged/tern_for_vim/node_modules/tern/test/timeout.js	/^var tern = require("..\/lib\/tern");$/;"	v
tern#Complete	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#Complete(findstart, complWord)$/;"	f
tern#DefaultKeyMap	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#DefaultKeyMap(...)$/;"	f
tern#Disable	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#Disable()$/;"	f
tern#Enable	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#Enable()$/;"	f
tern#LookupArgumentHints	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#LookupArgumentHints()$/;"	f
tern#LookupType	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#LookupType()$/;"	f
tern#PreviewInfo	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#PreviewInfo(info)$/;"	f
tern#Shutdown	plugged/tern_for_vim/autoload/tern.vim	/^function! tern#Shutdown()$/;"	f
tern-ac-complete	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-complete ()$/;"	f
tern-ac-complete-reply	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defvar tern-ac-complete-reply nil  "[internal] tern-ac-complete-reply.")$/;"	f
tern-ac-complete-request	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-complete-request (cc)$/;"	f
tern-ac-complete-request-point	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defvar tern-ac-complete-request-point 0$/;"	f
tern-ac-complete-response	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-complete-response (data)$/;"	f
tern-ac-completion-matches	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-completion-matches ()$/;"	f
tern-ac-completion-prefix	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-completion-prefix ()$/;"	f
tern-ac-completion-truncate-length	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defvar tern-ac-completion-truncate-length 22$/;"	f
tern-ac-dot-complete	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-dot-complete ()$/;"	f
tern-ac-js-major-modes	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defvar tern-ac-js-major-modes '(js2-mode js2-jsx-mode js-mode javascript-mode))$/;"	f
tern-ac-on-dot	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defcustom tern-ac-on-dot t$/;"	f
tern-ac-setup	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defun tern-ac-setup ()$/;"	f
tern-ac-sync	plugged/tern_for_vim/node_modules/tern/emacs/tern-auto-complete.el	/^(defcustom tern-ac-sync t$/;"	f
tern-activity-since-command	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-activity-since-command -1)$/;"	f
tern-after-change	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-after-change (start end prev-length)$/;"	f
tern-at-interesting-expression	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-at-interesting-expression ()$/;"	f
tern-buffer-is-dirty	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-buffer-is-dirty nil)$/;"	f
tern-command	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-command$/;"	f
tern-command-generation	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-command-generation 0)$/;"	f
tern-completion-at-point	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-completion-at-point ()$/;"	f
tern-completion-at-point-fn	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-completion-at-point-fn ()$/;"	f
tern-completion-matches-last	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-completion-matches-last ()$/;"	f
tern-do-complete	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-do-complete (data)$/;"	f
tern-do-highlight	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-do-highlight (data)$/;"	f
tern-do-refactor	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-do-refactor (data)$/;"	f
tern-explicit-port	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-explicit-port nil)$/;"	f
tern-find-current-arg	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-find-current-arg (start)$/;"	f
tern-find-definition	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-find-definition (&optional prompt-var)$/;"	f
tern-find-definition-by-name	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-find-definition-by-name ()$/;"	f
tern-find-definition-stack	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-find-definition-stack ())$/;"	f
tern-find-position	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-find-position (file data)$/;"	f
tern-find-server	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-find-server (c &optional ignore-port)$/;"	f
tern-flash-region	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-flash-region (start end)$/;"	f
tern-flash-timeout	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-flash-timeout 0.5 "Delay before the highlight overlay disappears.")$/;"	f
tern-get-docs	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-get-docs ()$/;"	f
tern-get-partial-file	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-get-partial-file (at)$/;"	f
tern-get-type	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-get-type ()$/;"	f
tern-go-to-position	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-go-to-position (file pos)$/;"	f
tern-highlight-refs	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-highlight-refs ()$/;"	f
tern-idle-time	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-idle-time 2.5$/;"	f
tern-idle-timer	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-idle-timer nil$/;"	f
tern-known-port	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-known-port ()$/;"	f
tern-known-port	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-known-port nil)$/;"	f
tern-last-argument-hints	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-last-argument-hints nil)$/;"	f
tern-last-completions	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-last-completions nil)$/;"	f
tern-last-docs-url	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-last-docs-url nil)$/;"	f
tern-last-file-name	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-last-file-name nil)$/;"	f
tern-last-point-pos	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-last-point-pos nil)$/;"	f
tern-last-project-dir	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-last-project-dir nil)$/;"	f
tern-left-buffer	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-left-buffer ()$/;"	f
tern-message	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-message (fmt &rest objects)$/;"	f
tern-mode	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-minor-mode tern-mode$/;"	f
tern-mode-disable	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-mode-disable ()$/;"	f
tern-mode-enable	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-mode-enable ()$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-key tern-mode-keymap [(control ?c) (control ?c)] 'tern-get-type)$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-key tern-mode-keymap [(control ?c) (control ?d)] 'tern-get-docs)$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-key tern-mode-keymap [(control ?c) (control ?r)] 'tern-rename-variable)$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-key tern-mode-keymap [(control meta ?.)] 'tern-find-definition-by-name)$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-key tern-mode-keymap [(meta ?,)] 'tern-pop-find-definition)$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(define-key tern-mode-keymap [(meta ?.)] 'tern-find-definition)$/;"	f
tern-mode-keymap	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-mode-keymap (make-sparse-keymap))$/;"	f
tern-modified-sibling-buffers	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-modified-sibling-buffers ()$/;"	f
tern-parse-function-type	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-parse-function-type (data)$/;"	f
tern-pop-find-definition	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-pop-find-definition ()$/;"	f
tern-post-command	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-post-command ()$/;"	f
tern-project-dir	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-project-dir ()$/;"	f
tern-project-dir	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-project-dir nil)$/;"	f
tern-project-relative-file	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-project-relative-file ()$/;"	f
tern-rename-variable	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-rename-variable (new-name)$/;"	f
tern-reparse-on-idle	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-reparse-on-idle ()$/;"	f
tern-req	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-req (port doc c)$/;"	f
tern-req-finished	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-req-finished (c)$/;"	f
tern-run-query	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-run-query (f query pos &optional mode)$/;"	f
tern-run-request	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-run-request (f doc)$/;"	f
tern-send-buffer-to-server	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-send-buffer-to-server ()$/;"	f
tern-server	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-server nil)$/;"	f
tern-show-argument-hints	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-show-argument-hints ()$/;"	f
tern-show-definition	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-show-definition (data)$/;"	f
tern-skip-matching-brackets	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-skip-matching-brackets (end-chars)$/;"	f
tern-start-server	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-start-server (c)$/;"	f
tern-update-argument-hints	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-update-argument-hints ()$/;"	f
tern-update-argument-hints-async	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-update-argument-hints-async ()$/;"	f
tern-update-argument-hints-async	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-update-argument-hints-async nil$/;"	f
tern-update-argument-hints-timer	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defvar tern-update-argument-hints-timer 500 "millisecond.")$/;"	f
tern-use-server	plugged/tern_for_vim/node_modules/tern/emacs/tern.el	/^(defun tern-use-server (port server)$/;"	f
tern_asCompletionIcon	plugged/tern_for_vim/script/tern.py	/^def tern_asCompletionIcon(type):$/;"	f
tern_bufferFragment	plugged/tern_for_vim/script/tern.py	/^def tern_bufferFragment():$/;"	f
tern_bufferSlice	plugged/tern_for_vim/script/tern.py	/^def tern_bufferSlice(buf, pos, end):$/;"	f
tern_cmp_to_key	plugged/tern_for_vim/script/tern.py	/^def tern_cmp_to_key(mycmp):$/;"	f
tern_displayError	plugged/tern_for_vim/script/tern.py	/^def tern_displayError(err):$/;"	f
tern_echoWrap	plugged/tern_for_vim/script/tern.py	/^def tern_echoWrap(data, name=""):$/;"	f
tern_ensureCompletionCached	plugged/tern_for_vim/script/tern.py	/^def tern_ensureCompletionCached():$/;"	f
tern_findServer	plugged/tern_for_vim/script/tern.py	/^def tern_findServer(ignorePort=False):$/;"	f
tern_fullBuffer	plugged/tern_for_vim/script/tern.py	/^def tern_fullBuffer():$/;"	f
tern_killServer	plugged/tern_for_vim/script/tern.py	/^def tern_killServer(project):$/;"	f
tern_killServers	plugged/tern_for_vim/script/tern.py	/^def tern_killServers():$/;"	f
tern_lookupArgumentHints	plugged/tern_for_vim/script/tern.py	/^def tern_lookupArgumentHints(fname, apos):$/;"	f
tern_lookupDefinition	plugged/tern_for_vim/script/tern.py	/^def tern_lookupDefinition(cmd):$/;"	f
tern_lookupDocumentation	plugged/tern_for_vim/script/tern.py	/^def tern_lookupDocumentation(browse=False):$/;"	f
tern_lookupType	plugged/tern_for_vim/script/tern.py	/^def tern_lookupType():$/;"	f
tern_makeRequest	plugged/tern_for_vim/script/tern.py	/^def tern_makeRequest(port, doc, silent=False):$/;"	f
tern_projectDir	plugged/tern_for_vim/script/tern.py	/^def tern_projectDir():$/;"	f
tern_projectFilePath	plugged/tern_for_vim/script/tern.py	/^def tern_projectFilePath(path):$/;"	f
tern_refs	plugged/tern_for_vim/script/tern.py	/^def tern_refs():$/;"	f
tern_relativeFile	plugged/tern_for_vim/script/tern.py	/^def tern_relativeFile():$/;"	f
tern_rename	plugged/tern_for_vim/script/tern.py	/^def tern_rename(newName):$/;"	f
tern_runCommand	plugged/tern_for_vim/script/tern.py	/^def tern_runCommand(query, pos=None, fragments=True, silent=False):$/;"	f
tern_sendBuffer	plugged/tern_for_vim/script/tern.py	/^def tern_sendBuffer(files=None):$/;"	f
tern_sendBufferIfDirty	plugged/tern_for_vim/script/tern.py	/^def tern_sendBufferIfDirty():$/;"	f
tern_startServer	plugged/tern_for_vim/script/tern.py	/^def tern_startServer(project):$/;"	f
tern_typeDoc	plugged/tern_for_vim/script/tern.py	/^def tern_typeDoc(rec):$/;"	f
test	plugged/tern_for_vim/node_modules/concat-map/test/map.js	/^var test = require('tape');$/;"	v
test	plugged/tern_for_vim/node_modules/isarray/test.js	/^var test = require('tape');$/;"	v
test	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^  function test(options) {$/;"	f	function:exports.runTests
test	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^  function test(name, start, text, query, check) {$/;"	f	function:exports.runTests
test	plugged/tern_for_vim/node_modules/tern/test/reload.js	/^function test(name, f) {$/;"	f
testWhileLoopFlow1	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^function testWhileLoopFlow1() {$/;"	f
test_binary_search	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_binary_search():$/;"	f
test_charwidth	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_charwidth():$/;"	f
test_custom	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_custom():$/;"	f
test_fuzzy_escapse	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_fuzzy_escapse():$/;"	f
test_globruntime	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_globruntime():$/;"	f
test_matcher_full_fuzzy	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^def test_matcher_full_fuzzy():$/;"	f
test_matcher_fuzzy	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def test_matcher_fuzzy():$/;"	f
test_overlap_length	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_overlap_length():$/;"	f
test_pos	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_pos():$/;"	f
test_skipping	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_skipping():$/;"	f
test_strwidth	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_strwidth():$/;"	f
test_truncate	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_truncate():$/;"	f
test_uniq_list_dict	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_uniq_list_dict():$/;"	f
tests	plugged/tern_for_vim/node_modules/tern/test/reload.js	/^var tests = [], added = false;$/;"	v
text	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^StringDecoder.prototype.text = utf8Text;$/;"	m	class:StringDecoder
text	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^    var fdata = {type: "part", name: "file", text: text, offset: start};$/;"	p	class:exports.runTests.fdata
th	init.vim	/^nnoremap th :tabprev<CR>$/;"	m
tick	autoload/plug.vim	/^function! s:tick()$/;"	f
tick	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js	/^Storage.prototype.tick = function() {$/;"	m	class:Storage
tick_changed	plugged/neomake/autoload/neomake/configure.vim	/^function! s:tick_changed(context, update) abort$/;"	f
title	plugged/neomake/contrib/run-tests-watch	/^title() {$/;"	f
tj	init.vim	/^nnoremap tj :tablast<CR>$/;"	m
tk	init.vim	/^nnoremap tk :tabfirst<CR>$/;"	m
tl	init.vim	/^nnoremap tl :tabnext<CR>$/;"	m
tm	init.vim	/^nnoremap tm :tabm<Space>$/;"	m
tmpdir	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:tmpdir() abort$/;"	f
tn	init.vim	/^nnoremap tn :tabnew<CR>$/;"	m
toObject	plugged/tern_for_vim/node_modules/object-assign/index.js	/^function toObject(val) {$/;"	f
toString	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^  return Object.prototype.toString.call(obj) === "[object Array]"$/;"	m	class:var.return
toString	plugged/tern_for_vim/node_modules/acorn/src/util.js	/^  return Object.prototype.toString.call(obj) === "[object Array]"$/;"	m	class:export
toString	plugged/tern_for_vim/node_modules/concat-map/index.js	/^    return Object.prototype.toString.call(xs) === '[object Array]';$/;"	m	class:return
toString	plugged/tern_for_vim/node_modules/core-util-is/lib/util.js	/^  return Object.prototype.toString.call(o);$/;"	m	class:return
toString	plugged/tern_for_vim/node_modules/isarray/index.js	/^var toString = {}.toString;$/;"	v
toString	plugged/tern_for_vim/node_modules/tern/doc/demo/polyfill.js	/^    return Object.prototype.toString.call(v) == "[object Array]";$/;"	m	class:return
toString	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^  return Object.prototype.toString.call(v) == "[object Array]";$/;"	m	class:return
toTitleCase	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function toTitleCase(str) {$/;"	f
to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
toggle	plugged/neomake/plugin/neomake.vim	/^function! s:toggle(scope) abort$/;"	f
tokenStartsLine	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^LooseParser.prototype.tokenStartsLine = function tokenStartsLine () {$/;"	m	class:LooseParser
tokenize	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^function tokenize(glob) {$/;"	f
tokenizer	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function tokenizer(input, options) {$/;"	f	function:function.parseExpressionAt
top	plugged/vimproc.vim/src/vimstack.c	/^    char *top;   \/* stack top *\/$/;"	m	struct:vp_stack_t	file:
touch	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:touch(name, cmd) abort$/;"	f
trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
trim	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/utils.js	/^function trim(s) {$/;"	f
trim	plugged/tern_for_vim/node_modules/tern/doc/demo/polyfill.js	/^  String.prototype.trim = String.prototype.trim || function() {$/;"	m	class:String
trim	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_end	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
trueFn	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^function trueFn() { return true; }$/;"	f
truncate	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate(string, max_width):$/;"	f
truncate	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate_skipping(string, max_width, footer, footer_len):$/;"	f
truncate_skipping	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
tryCreateRegexp	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^function tryCreateRegexp(src, flags, throwErrorAt, parser) {$/;"	f	function:pp$7.pp$7
tryCreateRegexp	plugged/tern_for_vim/node_modules/acorn/src/tokenize.js	/^function tryCreateRegexp(src, flags, throwErrorAt, parser) {$/;"	f	function:pp
tsuquyomi#applyQfChanges	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#applyQfChanges(changes)$/;"	f
tsuquyomi#balloonexpr	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#balloonexpr()$/;"	f
tsuquyomi#bufManager#bufName	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#bufName(file_name)$/;"	f
tsuquyomi#bufManager#clearMap	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#clearMap()$/;"	f
tsuquyomi#bufManager#close	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#close(file_name)$/;"	f
tsuquyomi#bufManager#isDirty	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#isDirty(file_name)$/;"	f
tsuquyomi#bufManager#isNotOpenable	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#isNotOpenable(file_name)$/;"	f
tsuquyomi#bufManager#isOpened	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#isOpened(file_name)$/;"	f
tsuquyomi#bufManager#normalizePath	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#normalizePath(buf_name)$/;"	f
tsuquyomi#bufManager#open	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#open(file_name)$/;"	f
tsuquyomi#bufManager#openedFiles	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#openedFiles()$/;"	f
tsuquyomi#bufManager#popNavDef	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#popNavDef(file_name)$/;"	f
tsuquyomi#bufManager#pushNavDef	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#pushNavDef(file_name, loc)$/;"	f
tsuquyomi#bufManager#saveTmp	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#saveTmp(file_name)$/;"	f
tsuquyomi#bufManager#setDirty	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#setDirty(file_name, state)$/;"	f
tsuquyomi#bufManager#tmpfile	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#tmpfile(file_name)$/;"	f
tsuquyomi#bufManager#whichDirty	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#whichDirty(file_name_list)$/;"	f
tsuquyomi#bufManager#winPopNavDef	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#winPopNavDef(winnm)$/;"	f
tsuquyomi#bufManager#winPushNavDef	plugged/tsuquyomi/autoload/tsuquyomi/bufManager.vim	/^function! tsuquyomi#bufManager#winPushNavDef(winnm, file_name, loc)$/;"	f
tsuquyomi#close	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#close(...)$/;"	f
tsuquyomi#complete	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#complete(findstart, base)$/;"	f
tsuquyomi#config#_path2project_directory_ts	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#_path2project_directory_ts()$/;"	f
tsuquyomi#config#applyBufLocalAutocmd	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#applyBufLocalAutocmd(pattern)$/;"	f
tsuquyomi#config#applyBufLocalDefaultMap	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#applyBufLocalDefaultMap()$/;"	f
tsuquyomi#config#applyBufLocalFunctions	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#applyBufLocalFunctions()$/;"	f
tsuquyomi#config#createBufLocalCommand	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#createBufLocalCommand()$/;"	f
tsuquyomi#config#createBufLocalMap	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#createBufLocalMap()$/;"	f
tsuquyomi#config#getVersion	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#getVersion()$/;"	f
tsuquyomi#config#initBuffer	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#initBuffer(opt)$/;"	f
tsuquyomi#config#isHigher	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#isHigher(target)$/;"	f
tsuquyomi#config#preconfig	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#preconfig()$/;"	f
tsuquyomi#config#tssargs	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#tssargs()$/;"	f
tsuquyomi#config#tsscmd	plugged/tsuquyomi/autoload/tsuquyomi/config.vim	/^function! tsuquyomi#config#tsscmd()$/;"	f
tsuquyomi#createFixlist	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#createFixlist()$/;"	f
tsuquyomi#createQuickFixListFromEvents	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#createQuickFixListFromEvents(event_list)$/;"	f
tsuquyomi#definition	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#definition()$/;"	f
tsuquyomi#dump	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#dump(...)$/;"	f
tsuquyomi#es6import#checkExternalModule	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#checkExternalModule(name, file, no_use_cache)$/;"	f
tsuquyomi#es6import#complete	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#complete()$/;"	f
tsuquyomi#es6import#createImportBlock	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#createImportBlock(text)$/;"	f
tsuquyomi#es6import#createImportPosition	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#createImportPosition(nav_bar_list)$/;"	f
tsuquyomi#es6import#getImportDeclarations	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#getImportDeclarations(fileName, content_list)$/;"	f
tsuquyomi#es6import#moduleComplete	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#moduleComplete(arg_lead, cmd_line, cursor_pos)$/;"	f
tsuquyomi#es6import#selectModule	plugged/tsuquyomi/autoload/tsuquyomi/es6import.vim	/^function! tsuquyomi#es6import#selectModule()$/;"	f
tsuquyomi#flush	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#flush()$/;"	f
tsuquyomi#getLocations	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#getLocations(tsClientFunction, functionTitle)$/;"	f
tsuquyomi#getSignatureHelp	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#getSignatureHelp(file, line, offset)$/;"	f
tsuquyomi#getSupportedCodeFixes	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#getSupportedCodeFixes()$/;"	f
tsuquyomi#geterr	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#geterr()$/;"	f
tsuquyomi#geterrProject	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#geterrProject()$/;"	f
tsuquyomi#goBack	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#goBack()$/;"	f
tsuquyomi#gotoDefinition	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#gotoDefinition(tsClientFunction, splitMode)$/;"	f
tsuquyomi#hint	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#hint()$/;"	f
tsuquyomi#implementation	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#implementation()$/;"	f
tsuquyomi#letDirty	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#letDirty()$/;"	f
tsuquyomi#makeCompleteMenu	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#makeCompleteMenu(file, line, offset, entryNames)$/;"	f
tsuquyomi#navBar	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#navBar()$/;"	f
tsuquyomi#navto	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#navto(term, kindModifiers, matchKindType)$/;"	f
tsuquyomi#navtoByLoclist	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#navtoByLoclist(term, kindModifiers, matchKindType)$/;"	f
tsuquyomi#navtoByLoclistContain	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#navtoByLoclistContain(term)$/;"	f
tsuquyomi#navtoByLoclistExact	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#navtoByLoclistExact(term)$/;"	f
tsuquyomi#navtoByLoclistPrefix	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#navtoByLoclistPrefix(term)$/;"	f
tsuquyomi#open	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#open(...)$/;"	f
tsuquyomi#perfLogger#getTime	plugged/tsuquyomi/autoload/tsuquyomi/perfLogger.vim	/^function! tsuquyomi#perfLogger#getTime()$/;"	f
tsuquyomi#perfLogger#record	plugged/tsuquyomi/autoload/tsuquyomi/perfLogger.vim	/^function! tsuquyomi#perfLogger#record(event_name)$/;"	f
tsuquyomi#perfLogger#reset	plugged/tsuquyomi/autoload/tsuquyomi/perfLogger.vim	/^function! tsuquyomi#perfLogger#reset()$/;"	f
tsuquyomi#projectInfo	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#projectInfo(file)$/;"	f
tsuquyomi#quickFix	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#quickFix()$/;"	f
tsuquyomi#references	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#references()$/;"	f
tsuquyomi#reload	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#reload(...)$/;"	f
tsuquyomi#reloadAndGeterr	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#reloadAndGeterr()$/;"	f
tsuquyomi#reloadProject	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#reloadProject()$/;"	f
tsuquyomi#renameSymbol	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#renameSymbol()$/;"	f
tsuquyomi#renameSymbolWithComments	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#renameSymbolWithComments()$/;"	f
tsuquyomi#renameSymbolWithCommentsStrings	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#renameSymbolWithCommentsStrings()$/;"	f
tsuquyomi#renameSymbolWithStrings	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#renameSymbolWithStrings()$/;"	f
tsuquyomi#rootDir	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#rootDir()$/;"	f
tsuquyomi#selectQfComplete	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#selectQfComplete(arg_lead, cmd_line, cursor_pos)$/;"	f
tsuquyomi#selectQfDescription	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#selectQfDescription()$/;"	f
tsuquyomi#sendConfigure	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#sendConfigure()$/;"	f
tsuquyomi#setPreviewOption	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#setPreviewOption()$/;"	f
tsuquyomi#signatureHelp	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#signatureHelp()$/;"	f
tsuquyomi#splitDefinition	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#splitDefinition()$/;"	f
tsuquyomi#startServer	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#startServer()$/;"	f
tsuquyomi#statusServer	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#statusServer()$/;"	f
tsuquyomi#stopServer	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#stopServer()$/;"	f
tsuquyomi#tsClient#getResponseBodyAsDict	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#getResponseBodyAsDict(responses)$/;"	f
tsuquyomi#tsClient#getResponseBodyAsList	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#getResponseBodyAsList(responses)$/;"	f
tsuquyomi#tsClient#sendCommandOneWay	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#sendCommandOneWay(cmd, args)$/;"	f
tsuquyomi#tsClient#sendCommandSyncEvents	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#sendCommandSyncEvents(cmd, args, delay, length)$/;"	f
tsuquyomi#tsClient#sendCommandSyncResponse	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#sendCommandSyncResponse(cmd, args)$/;"	f
tsuquyomi#tsClient#sendRequest	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#sendRequest(line, delay, retry_count, response_length)$/;"	f
tsuquyomi#tsClient#startTss	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#startTss()$/;"	f
tsuquyomi#tsClient#statusTss	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#statusTss()$/;"	f
tsuquyomi#tsClient#stopTss	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#stopTss()$/;"	f
tsuquyomi#tsClient#tsBrace	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsBrace(file, line, offset)$/;"	f
tsuquyomi#tsClient#tsChange	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsChange(file, line, offset, endLine, endOffset, insertString)$/;"	f
tsuquyomi#tsClient#tsClose	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsClose(file)$/;"	f
tsuquyomi#tsClient#tsCompletionEntryDetails	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsCompletionEntryDetails(file, line, offset, entryNames)$/;"	f
tsuquyomi#tsClient#tsCompletions	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsCompletions(file, line, offset, prefix)$/;"	f
tsuquyomi#tsClient#tsConfigure	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsConfigure(file, hostInfo, formatOptions, extraFileExtensions)$/;"	f
tsuquyomi#tsClient#tsDefinition	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsDefinition(file, line, offset)$/;"	f
tsuquyomi#tsClient#tsDocumentHighlights	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsDocumentHighlights(file, line, offset, filesToSearch)$/;"	f
tsuquyomi#tsClient#tsFormat	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsFormat(file, line, offset, endLine, endOffset)$/;"	f
tsuquyomi#tsClient#tsFormationkey	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsFormationkey(file, line, offset, key)$/;"	f
tsuquyomi#tsClient#tsGetCodeFixes	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsGetCodeFixes(file, startLine, startOffset, endLine, endOffset, errorCodes)$/;"	f
tsuquyomi#tsClient#tsGetSupportedCodeFixes	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsGetSupportedCodeFixes()$/;"	f
tsuquyomi#tsClient#tsGeterr	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsGeterr(files, delay)$/;"	f
tsuquyomi#tsClient#tsGeterrForProject	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsGeterrForProject(file, delay, count)$/;"	f
tsuquyomi#tsClient#tsImplementation	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsImplementation(file, line, offset)$/;"	f
tsuquyomi#tsClient#tsNavBar	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsNavBar(file)$/;"	f
tsuquyomi#tsClient#tsNavto	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsNavto(file, searchValue, maxResultCount)$/;"	f
tsuquyomi#tsClient#tsOpen	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsOpen(file)$/;"	f
tsuquyomi#tsClient#tsProjectInfo	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsProjectInfo(file, needFileNameList)$/;"	f
tsuquyomi#tsClient#tsQuickinfo	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsQuickinfo(file, line, offset)$/;"	f
tsuquyomi#tsClient#tsReferences	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsReferences(file, line, offset)$/;"	f
tsuquyomi#tsClient#tsReload	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsReload(file, tmpfile)$/;"	f
tsuquyomi#tsClient#tsReloadProjects	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsReloadProjects()$/;"	f
tsuquyomi#tsClient#tsRename	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsRename(file, line, offset, findInComments, findInString)$/;"	f
tsuquyomi#tsClient#tsSaveto	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsSaveto(file, tmpfile)$/;"	f
tsuquyomi#tsClient#tsSignatureHelp	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsSignatureHelp(file, line, offset)$/;"	f
tsuquyomi#tsClient#tsTypeDefinition	plugged/tsuquyomi/autoload/tsuquyomi/tsClient.vim	/^function! tsuquyomi#tsClient#tsTypeDefinition(file, line, offset)$/;"	f
tsuquyomi#typeDefinition	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! tsuquyomi#typeDefinition()$/;"	f
tt	init.vim	/^nnoremap tt :tabedit<Space>$/;"	m
tt	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$6.var
tt	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$6.var.tt.tt
tt	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	m	class:pp$6.var.tt.tt.tt.tt
tt	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^}$/;"	m
tt	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^}$/;"	m	class:tt.tt
tt	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^}$/;"	m	class:tt.tt.tt.tt
tt._function.updateContext	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
tt._function.updateContext	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^}$/;"	f
tt.backQuote.updateContext	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f
tt.backQuote.updateContext	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^}$/;"	f
tt.incDec.updateContext	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^}$/;"	f	function:pp$6.var.tt.tt.tt.tt.tt.tt
tt.incDec.updateContext	plugged/tern_for_vim/node_modules/acorn/src/tokencontext.js	/^}$/;"	f
type	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^            seq,$/;"	p	class:const
type	plugged/tern_for_vim/node_modules/acorn/dist/acorn.es.js	/^    var comment = {$/;"	p	class:SourceLocation.return
type	plugged/tern_for_vim/node_modules/acorn/dist/acorn_loose.es.js	/^      if (replace === true) replace = {start: pos, end: pos, type: tokTypes.name, value: "✖"}$/;"	p	class:this$1.resetTo
type	plugged/tern_for_vim/node_modules/acorn/src/loose/tokenize.js	/^      if (replace === true) replace = {start: pos, end: pos, type: tt.name, value: "✖"}$/;"	p	class:this.resetTo
type	plugged/tern_for_vim/node_modules/acorn/src/options.js	/^    let comment = {$/;"	p	class:return
type	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^    var fdata = {type: "part", name: "file", text: text, offset: start};$/;"	p	class:exports.runTests.fdata
type_doc	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def type_doc(self, rec):$/;"	m	class:Source
u	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/secondfile.js	/^exports.secondExport = {u: 10, v: 20};$/;"	p	class:exports.secondExport
u2028	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    '\\t':     't',$/;"	p	class:escapes
u2029	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    '\\u2028': 'u2028',$/;"	p	class:escapes
ui	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function ui() {}$/;"	f
uncork	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.uncork = function () {$/;"	m	class:Writable
undestroy	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/destroy.js	/^  destroy: destroy,$/;"	p	class:module.exports
undestroy	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/destroy.js	/^function undestroy() {$/;"	f
unescape	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
unescapeBraces	plugged/tern_for_vim/node_modules/brace-expansion/index.js	/^function unescapeBraces(str) {$/;"	f
unescape_pattern	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
unify_separator	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:unify_separator(path) abort$/;"	f
unify_separator	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:unify_separator(path) abort$/;"	f
unionFunction	plugged/tern_for_vim/node_modules/tern/test/cases/jsdoc.js	/^function unionFunction(a) { return argh(); }$/;"	f
uniq	plugged/neomake/Makefile	/^uniq = $(if $1,$(firstword $1) $(call uniq,$(filter-out $(firstword $1),$1)))$/;"	m
uniq	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_list_dict	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def uniq_list_dict(l):$/;"	f
unite#sources#outline#typescript#outline_info	plugged/tsuquyomi/autoload/unite/sources/outline/typescript.vim	/^function! unite#sources#outline#typescript#outline_info()$/;"	f
unite#sources#tsproject#define	plugged/tsuquyomi/autoload/unite/sources/tsproject.vim	/^function! unite#sources#tsproject#define()$/;"	f
unixpath	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:unixpath(path) abort$/;"	f
unlinkSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.unlinkSync = function(_path) {$/;"	m	class:MemoryFileSystem
unload	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:unload() abort dict$/;"	f
unpipe	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^  function unpipe() {$/;"	f	function:function
unpipe	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.unpipe = function (dest) {$/;"	m	class:Readable
unsafeCache	plugged/tern_for_vim/node_modules/tern/plugin/webpack.js	/^  var config = {$/;"	p	class:getResolver.config
unshift	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.unshift = function (chunk) {$/;"	m	class:Readable
unshift	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^  BufferList.prototype.unshift = function unshift(v) {$/;"	m	class:BufferList
unshift	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
updateFile	plugged/deoplete-typescript/rplugin/node/nvim_typescript/lib/client.js	/^    function updateFile(args) {$/;"	f
update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
utf16End	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf16End(buf) {$/;"	f
utf16Text	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf16Text(buf, i) {$/;"	c
utf16_to_utf8	plugged/vimproc.vim/src/proc_w32.c	/^utf16_to_utf8(LPCWSTR wstr)$/;"	f	file:
utf8CheckByte	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf8CheckByte(byte) {$/;"	f
utf8CheckExtraBytes	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf8CheckExtraBytes(self, buf, p) {$/;"	f
utf8CheckIncomplete	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf8CheckIncomplete(self, buf, i) {$/;"	f
utf8End	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf8End(buf) {$/;"	f
utf8FillLast	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf8FillLast(buf) {$/;"	c
utf8Text	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^function utf8Text(buf, i) {$/;"	f
utf8_to_utf16	plugged/vimproc.vim/src/proc_w32.c	/^utf8_to_utf16(const char *str)$/;"	f	file:
util	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_duplex.js	/^var util = require('core-util-is');$/;"	v
util	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_passthrough.js	/^var util = require('core-util-is');$/;"	v
util	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^var util = require('core-util-is');$/;"	v
util	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_transform.js	/^var util = require('core-util-is');$/;"	v
util	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^var util = require('core-util-is');$/;"	v
util	plugged/tern_for_vim/node_modules/readable-stream/lib/internal/streams/BufferList.js	/^var util = require('util');$/;"	v
util	plugged/tern_for_vim/node_modules/tern/test/condense.js	/^var util = require(".\/util");$/;"	v
util	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var util = require(".\/util");$/;"	v
util	plugged/tern_for_vim/node_modules/tern/test/fragments.js	/^var util = require(".\/util");$/;"	v
util	plugged/tern_for_vim/node_modules/tern/test/reload.js	/^var util = require(".\/util");$/;"	v
util	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var util = require(".\/util");$/;"	v
util	plugged/tern_for_vim/node_modules/tern/test/timeout.js	/^var util = require(".\/util");$/;"	v
v	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/secondfile.js	/^exports.secondExport = {u: 10, v: 20};$/;"	p	class:exports.secondExport
validChunk	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function validChunk(stream, state, chunk, cb) {$/;"	f
validateName	plugged/deoplete-ternjs/tests/test.js	/^  regExForPhone: "", \/\/ define regex for phone no validation$/;"	m	class:MYAPP.commonMethod
validatePhoneNo	plugged/deoplete-ternjs/tests/test.js	/^  },$/;"	m	class:MYAPP.commonMethod
value	plugged/tern_for_vim/node_modules/tern/doc/demo/underscore.js	/^    var result = {computed : Infinity, value: Infinity};$/;"	p	class:result
version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
vim	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    vim = neovim$/;"	v
vim_exit_handler	plugged/neomake/autoload/neomake.vim	/^function! s:vim_exit_handler(channel) abort$/;"	f
vim_output_handler	plugged/neomake/autoload/neomake.vim	/^function! s:vim_output_handler(channel, output, event_type) abort$/;"	f
vim_output_handler_stderr	plugged/neomake/autoload/neomake.vim	/^function! s:vim_output_handler_stderr(channel, output) abort$/;"	f
vim_output_handler_stdout	plugged/neomake/autoload/neomake.vim	/^function! s:vim_output_handler_stdout(channel, output) abort$/;"	f
vimoption2python	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:vimoption2python(option) abort$/;"	f
vimproc	plugged/vimproc.vim/autoload/vimproc.vim	/^augroup vimproc$/;"	a
vimproc	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^augroup vimproc$/;"	a
vimproc#_get_bg_processes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#_get_bg_processes() abort "{{{$/;"	f
vimproc#analyze_shebang	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#analyze_shebang(filename) abort "{{{$/;"	f
vimproc#cmd#system	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^  function! vimproc#cmd#system(expr) abort$/;"	f
vimproc#cmd#system	plugged/vimproc.vim/autoload/vimproc/cmd.vim	/^function! vimproc#cmd#system(expr) abort$/;"	f
vimproc#commands#_bang	plugged/vimproc.vim/autoload/vimproc/commands.vim	/^function! vimproc#commands#_bang(cmdline) abort "{{{$/;"	f
vimproc#commands#_install	plugged/vimproc.vim/autoload/vimproc/commands.vim	/^function! vimproc#commands#_install(args) abort "{{{$/;"	f
vimproc#commands#_read	plugged/vimproc.vim/autoload/vimproc/commands.vim	/^function! vimproc#commands#_read(cmdline) abort "{{{$/;"	f
vimproc#decode_signal	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#decode_signal(signal) abort "{{{$/;"	f
vimproc#delete_trash	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#delete_trash(filename) abort "{{{$/;"	f
vimproc#dll_version	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#dll_version() abort "{{{$/;"	f
vimproc#filepath#which	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! vimproc#filepath#which(command, path, maxcount) abort$/;"	f
vimproc#fopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#fopen(path, ...) abort "{{{$/;"	f
vimproc#get_command_name	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_command_name(command, ...) abort "{{{$/;"	f
vimproc#get_last_errmsg	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_errmsg() abort$/;"	f
vimproc#get_last_errmsg	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_errmsg() abort "{{{$/;"	f
vimproc#get_last_status	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_status() abort$/;"	f
vimproc#get_last_status	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_status() abort "{{{$/;"	f
vimproc#host_exists	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#host_exists(host) abort "{{{$/;"	f
vimproc#kill	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#kill(pid, sig) abort "{{{$/;"	f
vimproc#lexer#init_lexer	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_lexer(text) abort$/;"	f
vimproc#lexer#init_reader	plugged/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_reader(text) abort$/;"	f
vimproc#open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#open(filename) abort "{{{$/;"	f
vimproc#parser#expand_wildcard	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#expand_wildcard(wildcard) abort "{{{$/;"	f
vimproc#parser#parse_pipe	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_pipe(statement) abort "{{{$/;"	f
vimproc#parser#parse_statements	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_statements(script) abort "{{{$/;"	f
vimproc#parser#split_args	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args(script) abort "{{{$/;"	f
vimproc#parser#split_args_through	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args_through(script) abort "{{{$/;"	f
vimproc#parser#split_commands	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_commands(script) abort "{{{$/;"	f
vimproc#parser#split_pipe	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_pipe(script) abort "{{{$/;"	f
vimproc#parser#split_statements	plugged/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_statements(script) abort "{{{$/;"	f
vimproc#pgroup_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#pgroup_open(statements, ...) abort "{{{$/;"	f
vimproc#plineopen2	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen2(commands, ...) abort "{{{$/;"	f
vimproc#plineopen3	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen3(commands, ...) abort "{{{$/;"	f
vimproc#popen2	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen2(args, ...) abort "{{{$/;"	f
vimproc#popen3	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen3(args, ...) abort "{{{$/;"	f
vimproc#ptyopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#ptyopen(commands, ...) abort "{{{$/;"	f
vimproc#readdir	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#readdir(dirname) abort "{{{$/;"	f
vimproc#shellescape	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#shellescape(string) abort "{{{$/;"	f
vimproc#socket_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#socket_open(host, port) abort "{{{$/;"	f
vimproc#system	plugged/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#system(...) abort$/;"	f
vimproc#system	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system(cmdline, ...) abort "{{{$/;"	f
vimproc#system2	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system2(...) abort "{{{$/;"	f
vimproc#system_bg	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_bg(cmdline) abort "{{{$/;"	f
vimproc#system_gui	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_gui(cmdline) abort "{{{$/;"	f
vimproc#system_passwd	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_passwd(cmdline, ...) abort "{{{$/;"	f
vimproc#test_readdir	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#test_readdir(dirname) abort "{{{$/;"	f
vimproc#util#cd	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#cd(path) abort  "{{{$/;"	f
vimproc#util#expand	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#expand(path) abort "{{{$/;"	f
vimproc#util#has_iconv	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_iconv() abort "{{{$/;"	f
vimproc#util#has_lua	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_lua() abort "{{{$/;"	f
vimproc#util#iconv	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#iconv(expr, from, to) abort "{{{$/;"	f
vimproc#util#is_cygwin	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_cygwin() abort "{{{$/;"	f
vimproc#util#is_mac	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_mac() abort "{{{$/;"	f
vimproc#util#is_windows	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_windows() abort "{{{$/;"	f
vimproc#util#set_default	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#set_default(var, val, ...) abort  "{{{$/;"	f
vimproc#util#stderrencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stderrencoding() abort "{{{$/;"	f
vimproc#util#stdinencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdinencoding() abort "{{{$/;"	f
vimproc#util#stdoutencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdoutencoding() abort "{{{$/;"	f
vimproc#util#substitute_path_separator	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#substitute_path_separator(path) abort "{{{$/;"	f
vimproc#util#systemencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#systemencoding() abort "{{{$/;"	f
vimproc#util#termencoding	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#termencoding() abort "{{{$/;"	f
vimproc#util#try_download_windows_dll	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#try_download_windows_dll(version) abort  "{{{$/;"	f
vimproc#util#try_update_windows_dll	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#try_update_windows_dll(version) abort  "{{{$/;"	f
vimproc#util#uniq	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#uniq(list, ...) abort "{{{$/;"	f
vimproc#version	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#version() abort "{{{$/;"	f
vimproc#write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#write(filename, string, ...) abort "{{{$/;"	f
vimproc_arch	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=32$/;"	v
vimproc_arch	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=64$/;"	v
vimproc_arch	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^  set vimproc_arch=%1$/;"	v
vimproc_dllname	plugged/vimproc.vim/tools/update-dll-mingw.bat	/^set vimproc_dllname=vimproc_win%vimproc_arch%.dll$/;"	v
vital#	plugged/tsuquyomi/autoload/vital/_tsuquyomi.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_tsuquyomi#Data#List#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^  function! vital#_tsuquyomi#Data#List#import() abort$/;"	f
vital#_tsuquyomi#Data#String#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  function! vital#_tsuquyomi#Data#String#import() abort$/;"	f
vital#_tsuquyomi#Prelude#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^  function! vital#_tsuquyomi#Prelude#import() abort$/;"	f
vital#_tsuquyomi#Process#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Process.vim	/^  function! vital#_tsuquyomi#Process#import() abort$/;"	f
vital#_tsuquyomi#ProcessManager#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^  function! vital#_tsuquyomi#ProcessManager#import() abort$/;"	f
vital#_tsuquyomi#System#Filepath#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! vital#_tsuquyomi#System#Filepath#import() abort$/;"	f
vital#_tsuquyomi#Web#JSON#import	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Web/JSON.vim	/^  function! vital#_tsuquyomi#Web#JSON#import() abort$/;"	f
vital#of	plugged/tsuquyomi/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital_files	plugged/tsuquyomi/autoload/vital/tsuquyomi.vim	/^function! s:vital_files() abort$/;"	f
vp_checkpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_checkpid() dict$/;"	f
vp_close_handle	plugged/vimproc.vim/src/proc_w32.c	/^vp_close_handle(char *args)$/;"	f
vp_decode	plugged/vimproc.vim/src/proc.c	/^vp_decode(char *args)$/;"	f
vp_decode	plugged/vimproc.vim/src/proc_w32.c	/^vp_decode(char *args)$/;"	f
vp_decode_size	plugged/vimproc.vim/src/vimstack.c	/^vp_decode_size(const char *buf)$/;"	f
vp_delete_trash	plugged/vimproc.vim/src/proc_w32.c	/^vp_delete_trash(char *args)$/;"	f
vp_dlclose	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlclose(handle) abort$/;"	f
vp_dlclose	plugged/vimproc.vim/src/proc.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	plugged/vimproc.vim/src/proc_w32.c	/^vp_dlclose(char *args)$/;"	f
vp_dlopen	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlopen(path) abort$/;"	f
vp_dlopen	plugged/vimproc.vim/src/proc.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	plugged/vimproc.vim/src/proc_w32.c	/^vp_dlopen(char *args)$/;"	f
vp_dlversion	plugged/vimproc.vim/src/proc.c	/^vp_dlversion(char *args)$/;"	f
vp_dlversion	plugged/vimproc.vim/src/proc_w32.c	/^vp_dlversion(char *args)$/;"	f
vp_encode_size	plugged/vimproc.vim/src/vimstack.c	/^vp_encode_size(unsigned int size, char *buf)$/;"	f	file:
vp_fd_read	plugged/vimproc.vim/src/proc.c	/^vp_fd_read(char *args, int is_pty_pipe)$/;"	f
vp_file_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_close() dict$/;"	f
vp_file_close	plugged/vimproc.vim/src/proc.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	plugged/vimproc.vim/src/proc_w32.c	/^vp_file_close(char *args)$/;"	f
vp_file_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_open(path, flags, mode) abort$/;"	f
vp_file_open	plugged/vimproc.vim/src/proc.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	plugged/vimproc.vim/src/proc_w32.c	/^vp_file_open(char *args)$/;"	f
vp_file_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_read(number, timeout) dict$/;"	f
vp_file_read	plugged/vimproc.vim/src/proc.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	plugged/vimproc.vim/src/proc_w32.c	/^vp_file_read(char *args)$/;"	f
vp_file_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_write(hd, timeout) dict$/;"	f
vp_file_write	plugged/vimproc.vim/src/proc.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	plugged/vimproc.vim/src/proc_w32.c	/^vp_file_write(char *args)$/;"	f
vp_get_signals	plugged/vimproc.vim/src/proc.c	/^vp_get_signals(char *args)$/;"	f
vp_get_signals	plugged/vimproc.vim/src/proc_w32.c	/^vp_get_signals(char *args)$/;"	f
vp_get_winsize	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_get_winsize() dict$/;"	f
vp_host_exists	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_host_exists(host) abort$/;"	f
vp_host_exists	plugged/vimproc.vim/src/proc.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	plugged/vimproc.vim/src/proc_w32.c	/^vp_host_exists(char *args)$/;"	f
vp_kill	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_kill(...) dict$/;"	f
vp_kill	plugged/vimproc.vim/src/proc.c	/^vp_kill(char *args)$/;"	f
vp_kill	plugged/vimproc.vim/src/proc_w32.c	/^vp_kill(char *args)$/;"	f
vp_open	plugged/vimproc.vim/src/proc_w32.c	/^vp_open(char *args)$/;"	f
vp_pgroup_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_close() dict$/;"	f
vp_pgroup_kill	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_kill(...) dict$/;"	f
vp_pgroup_waitpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_waitpid() dict$/;"	f
vp_pipe_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_close() dict$/;"	f
vp_pipe_close	plugged/vimproc.vim/src/proc.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_open(npipe, hstdin, hstdout, hstderr, argv) abort "{{{$/;"	f
vp_pipe_open	plugged/vimproc.vim/src/proc.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_read(number, timeout) dict$/;"	f
vp_pipe_read	plugged/vimproc.vim/src/proc.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_write(hd, timeout) dict$/;"	f
vp_pipe_write	plugged/vimproc.vim/src/proc.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	plugged/vimproc.vim/src/proc_w32.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipes_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipes_close() dict$/;"	f
vp_pty_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_close() dict$/;"	f
vp_pty_close	plugged/vimproc.vim/src/proc.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_get_winsize	plugged/vimproc.vim/src/proc.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_get_winsize	plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_open(npipe, width, height, hstdin, hstdout, hstderr, argv) abort$/;"	f
vp_pty_open	plugged/vimproc.vim/src/proc.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_read(number, timeout) dict$/;"	f
vp_pty_read	plugged/vimproc.vim/src/proc.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_set_winsize	plugged/vimproc.vim/src/proc.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_set_winsize	plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_write(hd, timeout) dict$/;"	f
vp_pty_write	plugged/vimproc.vim/src/proc.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	plugged/vimproc.vim/src/proc_w32.c	/^vp_pty_write(char *args)$/;"	f
vp_readdir	plugged/vimproc.vim/src/proc.c	/^vp_readdir(char *args)$/;"	f
vp_readdir	plugged/vimproc.vim/src/proc_w32.c	/^vp_readdir(char *args)$/;"	f
vp_set_winsize	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_set_winsize(width, height) dict$/;"	f
vp_socket_close	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_close() dict$/;"	f
vp_socket_close	plugged/vimproc.vim/src/proc.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_open	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_open(host, port) abort$/;"	f
vp_socket_open	plugged/vimproc.vim/src/proc.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_read	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_read(number, timeout) dict$/;"	f
vp_socket_read	plugged/vimproc.vim/src/proc.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_write(hd, timeout) dict$/;"	f
vp_socket_write	plugged/vimproc.vim/src/proc.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	plugged/vimproc.vim/src/proc_w32.c	/^vp_socket_write(char *args)$/;"	f
vp_stack_free	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_free(vp_stack_t *stack)$/;"	f	file:
vp_stack_from_args	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_from_args(vp_stack_t *stack, char *args)$/;"	f	file:
vp_stack_pop_num	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_pop_num(vp_stack_t *stack, const char *fmt, void *ptr)$/;"	f	file:
vp_stack_pop_str	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_pop_str(vp_stack_t *stack, char **str)$/;"	f	file:
vp_stack_push_num	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_push_num(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_push_str	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_push_str(vp_stack_t *stack, const char *str)$/;"	f	file:
vp_stack_reserve	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_reserve(vp_stack_t *stack, size_t needsize)$/;"	f	file:
vp_stack_return	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_return(vp_stack_t *stack)$/;"	f	file:
vp_stack_return_error	plugged/vimproc.vim/src/vimstack.c	/^vp_stack_return_error(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_t	plugged/vimproc.vim/src/vimstack.c	/^typedef struct vp_stack_t {$/;"	s	file:
vp_stack_t	plugged/vimproc.vim/src/vimstack.c	/^} vp_stack_t;$/;"	t	typeref:struct:vp_stack_t	file:
vp_stack_used	plugged/vimproc.vim/src/vimstack.c	103;"	d	file:
vp_waitpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_waitpid(...) dict$/;"	f
vp_waitpid	plugged/vimproc.vim/src/proc.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	plugged/vimproc.vim/src/proc_w32.c	/^vp_waitpid(char *args)$/;"	f
vsnprintf	plugged/vimproc.vim/src/proc_w32.c	66;"	d	file:
wait_for_finished_job	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_finished_job()$/;"	f
wait_for_jobs	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_jobs(filter)$/;"	f
wait_for_message	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_message(...)$/;"	f
wait_for_next_message	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_next_message()$/;"	f
waitpid	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:waitpid(pid, ...) abort$/;"	f
walk	plugged/tern_for_vim/node_modules/tern/test/runcases.js	/^var walk = require("acorn\/dist\/walk");$/;"	v
walkDir	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^  function walkDir(dir) {$/;"	f
warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
warn	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    warn = warning$/;"	v	class:LoggingMixin
warning	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def warning(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
wcswidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
which	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! s:which(command, ...) abort$/;"	f
which	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^  function! s:which(str) abort$/;"	f
which	plugged/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:which(command, ...) abort$/;"	f
whoAmI	plugged/tern_for_vim/node_modules/tern/test/cases/contextcomplete.js	/^function whoAmI(a, i) {$/;"	f
win32	plugged/tern_for_vim/node_modules/path-is-absolute/index.js	/^function win32(path) {$/;"	f
win_escape	plugged/vimproc.vim/autoload/vimproc/util.vim	/^function! s:win_escape(str) abort  "{{{$/;"	f
winpath	plugged/tsuquyomi/autoload/vital/_tsuquyomi/System/Filepath.vim	/^function! s:winpath(path) abort$/;"	f
wipe_highlights	plugged/neomake/autoload/neomake/highlights.vim	/^function! s:wipe_highlights(bufnr) abort$/;"	f
wipe_signs	plugged/neomake/autoload/neomake/signs.vim	/^function! s:wipe_signs(bufnr) abort$/;"	f
with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
with_index	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
words	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^function words(str) {$/;"	f	function:function
wrap	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_readable.js	/^Readable.prototype.wrap = function (stream) {$/;"	m	class:Readable
wrap	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrapper	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:logmethod
write	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def write(self, line):$/;"	m	class:RedirectStream
write	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^Writable.prototype.write = function (chunk, encoding, cb) {$/;"	m	class:Writable
write	plugged/tern_for_vim/node_modules/string_decoder/lib/string_decoder.js	/^StringDecoder.prototype.write = function (buf) {$/;"	m	class:StringDecoder
write	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:write(i, str) abort$/;"	f
write	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write(str, ...) dict "{{{$/;"	f
write	plugged/vimproc.vim/src/proc_w32.c	185;"	d	file:
writeAfterEnd	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function writeAfterEnd(stream, cb) {$/;"	f
writeFile	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.writeFile = function (path, content, encoding, callback) {$/;"	m	class:MemoryFileSystem
writeFileSync	plugged/tern_for_vim/node_modules/memory-fs/lib/MemoryFileSystem.js	/^MemoryFileSystem.prototype.writeFileSync = function(_path, content, encoding) {$/;"	m	class:MemoryFileSystem
writeLog	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/Resolver.js	/^	function writeLog(msg) {$/;"	f
writeLog	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/createInnerCallback.js	/^	loggingCallbackWrapper.log = function writeLog(msg) {$/;"	f
writeOrBuffer	plugged/tern_for_vim/node_modules/readable-stream/lib/_stream_writable.js	/^function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {$/;"	f
writeToPreview	plugged/tsuquyomi/autoload/tsuquyomi.vim	/^function! s:writeToPreview(content)$/;"	f
write_pgroup	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pgroup(str, ...) dict "{{{$/;"	f
write_pipes	plugged/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pipes(str, ...) dict "{{{$/;"	f
write_triggered_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
writelines	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def writelines(self, lines):$/;"	m	class:RedirectStream
writeln	plugged/tsuquyomi/autoload/vital/_tsuquyomi/ProcessManager.vim	/^function! s:writeln(i, str) abort$/;"	f
x	plugged/tern_for_vim/node_modules/tern/test/cases/block_scope.js	/^function x(a) {$/;"	f
x	plugged/tern_for_vim/node_modules/tern/test/cases/builtins.js	/^var x = Math.PI; \/\/: number$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/cases/computedprop.js	/^var x = {};$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/cases/findref.js	/^var obj = {$/;"	p	class:obj
x	plugged/tern_for_vim/node_modules/tern/test/cases/hint_ecma5.js	/^var x = Math.PI;$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/cases/infinite-expansion.js	/^var x = [x];$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/mainfile.js	/^exports.mainExport = {x: 10, y: 20};$/;"	p	class:exports.mainExport
x	plugged/tern_for_vim/node_modules/tern/test/cases/order_of_definition.js	/^  function x() { this.a = true; }$/;"	c
x	plugged/tern_for_vim/node_modules/tern/test/cases/order_of_definition.js	/^  function x() { this.a = true; }$/;"	c	class:bug
x	plugged/tern_for_vim/node_modules/tern/test/cases/plus.js	/^var x = 10;$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/cases/simple.js	/^var x = {};$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/cases/super.js	/^  __proto__: pro,$/;"	p	class:obj
x	plugged/tern_for_vim/node_modules/tern/test/cases/underscore.js	/^var defaulted = {x: 10};$/;"	p	class:defaulted
x	plugged/tern_for_vim/node_modules/tern/test/condense/basic.js	/^var x = 10;$/;"	v
x	plugged/tern_for_vim/node_modules/tern/test/condense/generic.js	/^function x(y) { return y.bar; }$/;"	f
x	plugged/tern_for_vim/node_modules/tern/test/condense/ignore_newer.js	/^var foo = {$/;"	p	class:foo
x	plugged/tern_for_vim/node_modules/tern/test/condense/uniontype.js	/^function x(a) {}$/;"	f
xhr.onreadystatechange	plugged/tern_for_vim/node_modules/tern/doc/demo/demo.js	/^  xhr.send();$/;"	f
xs	plugged/tern_for_vim/node_modules/concat-map/example/map.js	/^var xs = [ 1, 2, 3, 4, 5, 6 ];$/;"	v
xyzzy	plugged/tern_for_vim/node_modules/tern/test/cases/docstrings.js	/^var xyzzy = false;$/;"	v
y	plugged/tern_for_vim/node_modules/tern/test/cases/findref.js	/^  : 10,$/;"	p	class:obj
y	plugged/tern_for_vim/node_modules/tern/test/cases/node_modules/mod1/mainfile.js	/^exports.mainExport = {x: 10, y: 20};$/;"	p	class:exports.mainExport
y	plugged/tern_for_vim/node_modules/tern/test/cases/plus.js	/^var y = "foo";$/;"	v
y	plugged/tern_for_vim/node_modules/tern/test/condense/ignore_newer.js	/^  x: 10,$/;"	p	class:foo
y	plugged/tern_for_vim/node_modules/tern/test/condense/uniontype.js	/^function y() { if (something) return true; else return 100; }$/;"	f
yaml	plugged/tern_for_vim/node_modules/tern/test/data/large.js	/^var yaml = require("js-yaml");$/;"	v
ys	plugged/tern_for_vim/node_modules/concat-map/example/map.js	/^var ys = concatMap(xs, function (x) {$/;"	v
zip	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	plugged/tsuquyomi/autoload/vital/_tsuquyomi/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
{	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"?": "any-char",$/;"	p	class:SIMPLE_TOKENS
|	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	"*(": "zero-many",$/;"	p	class:SIMPLE_TOKENS
}	plugged/tern_for_vim/node_modules/enhanced-resolve/lib/globToRegExp.js	/^	")": "closing-seqment",$/;"	p	class:SIMPLE_TOKENS
